import {
  require_react_dom
} from "./chunk-H2MCJVKA.js";
import {
  require_react
} from "./chunk-BWGHGES3.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-LK32TJAX.js";

// node_modules/clsx/dist/clsx.js
var require_clsx = __commonJS({
  "node_modules/clsx/dist/clsx.js"(exports, module) {
    function r(e2) {
      var o, t, f = "";
      if ("string" == typeof e2 || "number" == typeof e2) f += e2;
      else if ("object" == typeof e2) if (Array.isArray(e2)) {
        var n = e2.length;
        for (o = 0; o < n; o++) e2[o] && (t = r(e2[o])) && (f && (f += " "), f += t);
      } else for (t in e2) e2[t] && (f && (f += " "), f += t);
      return f;
    }
    function e() {
      for (var e2, o, t = 0, f = "", n = arguments.length; t < n; t++) (e2 = arguments[t]) && (o = r(e2)) && (f && (f += " "), f += o);
      return f;
    }
    module.exports = e, module.exports.clsx = e;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString2(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString2;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString2 = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString2(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/lodash/isNil.js
var require_isNil = __commonJS({
  "node_modules/lodash/isNil.js"(exports, module) {
    function isNil(value) {
      return value == null;
    }
    module.exports = isNil;
  }
});

// node_modules/lodash/isString.js
var require_isString = __commonJS({
  "node_modules/lodash/isString.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isArray = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString;
  }
});

// node_modules/recharts/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/recharts/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/recharts/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/recharts/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/lodash/isNumber.js
var require_isNumber = __commonJS({
  "node_modules/lodash/isNumber.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber;
  }
});

// node_modules/lodash/isNaN.js
var require_isNaN = __commonJS({
  "node_modules/lodash/isNaN.js"(exports, module) {
    var isNumber = require_isNumber();
    function isNaN2(value) {
      return isNumber(value) && value != +value;
    }
    module.exports = isNaN2;
  }
});

// node_modules/recharts/lib/util/DataUtils.js
var require_DataUtils = __commonJS({
  "node_modules/recharts/lib/util/DataUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.findEntryInArray = findEntryInArray;
    exports.uniqueId = exports.mathSign = exports.isPercent = exports.isNumber = exports.isNumOrStr = exports.interpolateNumber = exports.hasDuplicate = exports.getPercentValue = exports.getLinearRegression = exports.getAnyElementOfObject = void 0;
    var _isString = _interopRequireDefault(require_isString());
    var _isNaN = _interopRequireDefault(require_isNaN());
    var _get = _interopRequireDefault(require_get());
    var _isNumber = _interopRequireDefault(require_isNumber());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var mathSign = exports.mathSign = function mathSign2(value) {
      if (value === 0) {
        return 0;
      }
      if (value > 0) {
        return 1;
      }
      return -1;
    };
    var isPercent = exports.isPercent = function isPercent2(value) {
      return (0, _isString["default"])(value) && value.indexOf("%") === value.length - 1;
    };
    var isNumber = exports.isNumber = function isNumber2(value) {
      return (0, _isNumber["default"])(value) && !(0, _isNaN["default"])(value);
    };
    var isNumOrStr = exports.isNumOrStr = function isNumOrStr2(value) {
      return isNumber(value) || (0, _isString["default"])(value);
    };
    var idCounter = 0;
    var uniqueId = exports.uniqueId = function uniqueId2(prefix) {
      var id = ++idCounter;
      return "".concat(prefix || "").concat(id);
    };
    var getPercentValue = exports.getPercentValue = function getPercentValue2(percent, totalValue) {
      var defaultValue = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var validate = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
      if (!isNumber(percent) && !(0, _isString["default"])(percent)) {
        return defaultValue;
      }
      var value;
      if (isPercent(percent)) {
        var index = percent.indexOf("%");
        value = totalValue * parseFloat(percent.slice(0, index)) / 100;
      } else {
        value = +percent;
      }
      if ((0, _isNaN["default"])(value)) {
        value = defaultValue;
      }
      if (validate && value > totalValue) {
        value = totalValue;
      }
      return value;
    };
    var getAnyElementOfObject = exports.getAnyElementOfObject = function getAnyElementOfObject2(obj) {
      if (!obj) {
        return null;
      }
      var keys = Object.keys(obj);
      if (keys && keys.length) {
        return obj[keys[0]];
      }
      return null;
    };
    var hasDuplicate = exports.hasDuplicate = function hasDuplicate2(ary) {
      if (!Array.isArray(ary)) {
        return false;
      }
      var len = ary.length;
      var cache = {};
      for (var i = 0; i < len; i++) {
        if (!cache[ary[i]]) {
          cache[ary[i]] = true;
        } else {
          return true;
        }
      }
      return false;
    };
    var interpolateNumber = exports.interpolateNumber = function interpolateNumber2(numberA, numberB) {
      if (isNumber(numberA) && isNumber(numberB)) {
        return function(t) {
          return numberA + t * (numberB - numberA);
        };
      }
      return function() {
        return numberB;
      };
    };
    function findEntryInArray(ary, specifiedKey, specifiedValue) {
      if (!ary || !ary.length) {
        return null;
      }
      return ary.find(function(entry) {
        return entry && (typeof specifiedKey === "function" ? specifiedKey(entry) : (0, _get["default"])(entry, specifiedKey)) === specifiedValue;
      });
    }
    var getLinearRegression = exports.getLinearRegression = function getLinearRegression2(data) {
      if (!data || !data.length) {
        return null;
      }
      var len = data.length;
      var xsum = 0;
      var ysum = 0;
      var xysum = 0;
      var xxsum = 0;
      var xmin = Infinity;
      var xmax = -Infinity;
      var xcurrent = 0;
      var ycurrent = 0;
      for (var i = 0; i < len; i++) {
        xcurrent = data[i].cx || 0;
        ycurrent = data[i].cy || 0;
        xsum += xcurrent;
        ysum += ycurrent;
        xysum += xcurrent * ycurrent;
        xxsum += xcurrent * xcurrent;
        xmin = Math.min(xmin, xcurrent);
        xmax = Math.max(xmax, xcurrent);
      }
      var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;
      return {
        xmin,
        xmax,
        a,
        b: (ysum - a * xsum) / len
      };
    };
  }
});

// node_modules/recharts/lib/util/ShallowEqual.js
var require_ShallowEqual = __commonJS({
  "node_modules/recharts/lib/util/ShallowEqual.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.shallowEqual = shallowEqual;
    function shallowEqual(a, b) {
      for (var key in a) {
        if ({}.hasOwnProperty.call(a, key) && (!{}.hasOwnProperty.call(b, key) || a[key] !== b[key])) {
          return false;
        }
      }
      for (var _key in b) {
        if ({}.hasOwnProperty.call(b, _key) && !{}.hasOwnProperty.call(a, _key)) {
          return false;
        }
      }
      return true;
    }
  }
});

// node_modules/recharts/lib/util/types.js
var require_types = __commonJS({
  "node_modules/recharts/lib/util/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.adaptEventsOfChild = exports.adaptEventHandlers = exports.SVGElementPropKeys = exports.FilteredElementKeyMap = exports.EventKeys = void 0;
    var _react = require_react();
    var _isObject = _interopRequireDefault(require_isObject());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    var SVGContainerPropKeys = ["viewBox", "children"];
    var SVGElementPropKeys = exports.SVGElementPropKeys = [
      "aria-activedescendant",
      "aria-atomic",
      "aria-autocomplete",
      "aria-busy",
      "aria-checked",
      "aria-colcount",
      "aria-colindex",
      "aria-colspan",
      "aria-controls",
      "aria-current",
      "aria-describedby",
      "aria-details",
      "aria-disabled",
      "aria-errormessage",
      "aria-expanded",
      "aria-flowto",
      "aria-haspopup",
      "aria-hidden",
      "aria-invalid",
      "aria-keyshortcuts",
      "aria-label",
      "aria-labelledby",
      "aria-level",
      "aria-live",
      "aria-modal",
      "aria-multiline",
      "aria-multiselectable",
      "aria-orientation",
      "aria-owns",
      "aria-placeholder",
      "aria-posinset",
      "aria-pressed",
      "aria-readonly",
      "aria-relevant",
      "aria-required",
      "aria-roledescription",
      "aria-rowcount",
      "aria-rowindex",
      "aria-rowspan",
      "aria-selected",
      "aria-setsize",
      "aria-sort",
      "aria-valuemax",
      "aria-valuemin",
      "aria-valuenow",
      "aria-valuetext",
      "className",
      "color",
      "height",
      "id",
      "lang",
      "max",
      "media",
      "method",
      "min",
      "name",
      "style",
      /*
       * removed 'type' SVGElementPropKey because we do not currently use any SVG elements
       * that can use it and it conflicts with the recharts prop 'type'
       * https://github.com/recharts/recharts/pull/3327
       * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/type
       */
      // 'type',
      "target",
      "width",
      "role",
      "tabIndex",
      "accentHeight",
      "accumulate",
      "additive",
      "alignmentBaseline",
      "allowReorder",
      "alphabetic",
      "amplitude",
      "arabicForm",
      "ascent",
      "attributeName",
      "attributeType",
      "autoReverse",
      "azimuth",
      "baseFrequency",
      "baselineShift",
      "baseProfile",
      "bbox",
      "begin",
      "bias",
      "by",
      "calcMode",
      "capHeight",
      "clip",
      "clipPath",
      "clipPathUnits",
      "clipRule",
      "colorInterpolation",
      "colorInterpolationFilters",
      "colorProfile",
      "colorRendering",
      "contentScriptType",
      "contentStyleType",
      "cursor",
      "cx",
      "cy",
      "d",
      "decelerate",
      "descent",
      "diffuseConstant",
      "direction",
      "display",
      "divisor",
      "dominantBaseline",
      "dur",
      "dx",
      "dy",
      "edgeMode",
      "elevation",
      "enableBackground",
      "end",
      "exponent",
      "externalResourcesRequired",
      "fill",
      "fillOpacity",
      "fillRule",
      "filter",
      "filterRes",
      "filterUnits",
      "floodColor",
      "floodOpacity",
      "focusable",
      "fontFamily",
      "fontSize",
      "fontSizeAdjust",
      "fontStretch",
      "fontStyle",
      "fontVariant",
      "fontWeight",
      "format",
      "from",
      "fx",
      "fy",
      "g1",
      "g2",
      "glyphName",
      "glyphOrientationHorizontal",
      "glyphOrientationVertical",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "hanging",
      "horizAdvX",
      "horizOriginX",
      "href",
      "ideographic",
      "imageRendering",
      "in2",
      "in",
      "intercept",
      "k1",
      "k2",
      "k3",
      "k4",
      "k",
      "kernelMatrix",
      "kernelUnitLength",
      "kerning",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lengthAdjust",
      "letterSpacing",
      "lightingColor",
      "limitingConeAngle",
      "local",
      "markerEnd",
      "markerHeight",
      "markerMid",
      "markerStart",
      "markerUnits",
      "markerWidth",
      "mask",
      "maskContentUnits",
      "maskUnits",
      "mathematical",
      "mode",
      "numOctaves",
      "offset",
      "opacity",
      "operator",
      "order",
      "orient",
      "orientation",
      "origin",
      "overflow",
      "overlinePosition",
      "overlineThickness",
      "paintOrder",
      "panose1",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "pointerEvents",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "r",
      "radius",
      "refX",
      "refY",
      "renderingIntent",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "restart",
      "result",
      "rotate",
      "rx",
      "ry",
      "seed",
      "shapeRendering",
      "slope",
      "spacing",
      "specularConstant",
      "specularExponent",
      "speed",
      "spreadMethod",
      "startOffset",
      "stdDeviation",
      "stemh",
      "stemv",
      "stitchTiles",
      "stopColor",
      "stopOpacity",
      "strikethroughPosition",
      "strikethroughThickness",
      "string",
      "stroke",
      "strokeDasharray",
      "strokeDashoffset",
      "strokeLinecap",
      "strokeLinejoin",
      "strokeMiterlimit",
      "strokeOpacity",
      "strokeWidth",
      "surfaceScale",
      "systemLanguage",
      "tableValues",
      "targetX",
      "targetY",
      "textAnchor",
      "textDecoration",
      "textLength",
      "textRendering",
      "to",
      "transform",
      "u1",
      "u2",
      "underlinePosition",
      "underlineThickness",
      "unicode",
      "unicodeBidi",
      "unicodeRange",
      "unitsPerEm",
      "vAlphabetic",
      "values",
      "vectorEffect",
      "version",
      "vertAdvY",
      "vertOriginX",
      "vertOriginY",
      "vHanging",
      "vIdeographic",
      "viewTarget",
      "visibility",
      "vMathematical",
      "widths",
      "wordSpacing",
      "writingMode",
      "x1",
      "x2",
      "x",
      "xChannelSelector",
      "xHeight",
      "xlinkActuate",
      "xlinkArcrole",
      "xlinkHref",
      "xlinkRole",
      "xlinkShow",
      "xlinkTitle",
      "xlinkType",
      "xmlBase",
      "xmlLang",
      "xmlns",
      "xmlnsXlink",
      "xmlSpace",
      "y1",
      "y2",
      "y",
      "yChannelSelector",
      "z",
      "zoomAndPan",
      "ref",
      "key",
      "angle"
    ];
    var PolyElementKeys = ["points", "pathLength"];
    var FilteredElementKeyMap = exports.FilteredElementKeyMap = {
      svg: SVGContainerPropKeys,
      polygon: PolyElementKeys,
      polyline: PolyElementKeys
    };
    var EventKeys = exports.EventKeys = ["dangerouslySetInnerHTML", "onCopy", "onCopyCapture", "onCut", "onCutCapture", "onPaste", "onPasteCapture", "onCompositionEnd", "onCompositionEndCapture", "onCompositionStart", "onCompositionStartCapture", "onCompositionUpdate", "onCompositionUpdateCapture", "onFocus", "onFocusCapture", "onBlur", "onBlurCapture", "onChange", "onChangeCapture", "onBeforeInput", "onBeforeInputCapture", "onInput", "onInputCapture", "onReset", "onResetCapture", "onSubmit", "onSubmitCapture", "onInvalid", "onInvalidCapture", "onLoad", "onLoadCapture", "onError", "onErrorCapture", "onKeyDown", "onKeyDownCapture", "onKeyPress", "onKeyPressCapture", "onKeyUp", "onKeyUpCapture", "onAbort", "onAbortCapture", "onCanPlay", "onCanPlayCapture", "onCanPlayThrough", "onCanPlayThroughCapture", "onDurationChange", "onDurationChangeCapture", "onEmptied", "onEmptiedCapture", "onEncrypted", "onEncryptedCapture", "onEnded", "onEndedCapture", "onLoadedData", "onLoadedDataCapture", "onLoadedMetadata", "onLoadedMetadataCapture", "onLoadStart", "onLoadStartCapture", "onPause", "onPauseCapture", "onPlay", "onPlayCapture", "onPlaying", "onPlayingCapture", "onProgress", "onProgressCapture", "onRateChange", "onRateChangeCapture", "onSeeked", "onSeekedCapture", "onSeeking", "onSeekingCapture", "onStalled", "onStalledCapture", "onSuspend", "onSuspendCapture", "onTimeUpdate", "onTimeUpdateCapture", "onVolumeChange", "onVolumeChangeCapture", "onWaiting", "onWaitingCapture", "onAuxClick", "onAuxClickCapture", "onClick", "onClickCapture", "onContextMenu", "onContextMenuCapture", "onDoubleClick", "onDoubleClickCapture", "onDrag", "onDragCapture", "onDragEnd", "onDragEndCapture", "onDragEnter", "onDragEnterCapture", "onDragExit", "onDragExitCapture", "onDragLeave", "onDragLeaveCapture", "onDragOver", "onDragOverCapture", "onDragStart", "onDragStartCapture", "onDrop", "onDropCapture", "onMouseDown", "onMouseDownCapture", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseMoveCapture", "onMouseOut", "onMouseOutCapture", "onMouseOver", "onMouseOverCapture", "onMouseUp", "onMouseUpCapture", "onSelect", "onSelectCapture", "onTouchCancel", "onTouchCancelCapture", "onTouchEnd", "onTouchEndCapture", "onTouchMove", "onTouchMoveCapture", "onTouchStart", "onTouchStartCapture", "onPointerDown", "onPointerDownCapture", "onPointerMove", "onPointerMoveCapture", "onPointerUp", "onPointerUpCapture", "onPointerCancel", "onPointerCancelCapture", "onPointerEnter", "onPointerEnterCapture", "onPointerLeave", "onPointerLeaveCapture", "onPointerOver", "onPointerOverCapture", "onPointerOut", "onPointerOutCapture", "onGotPointerCapture", "onGotPointerCaptureCapture", "onLostPointerCapture", "onLostPointerCaptureCapture", "onScroll", "onScrollCapture", "onWheel", "onWheelCapture", "onAnimationStart", "onAnimationStartCapture", "onAnimationEnd", "onAnimationEndCapture", "onAnimationIteration", "onAnimationIterationCapture", "onTransitionEnd", "onTransitionEndCapture"];
    var adaptEventHandlers = exports.adaptEventHandlers = function adaptEventHandlers2(props, newHandler) {
      if (!props || typeof props === "function" || typeof props === "boolean") {
        return null;
      }
      var inputProps = props;
      if ((0, _react.isValidElement)(props)) {
        inputProps = props.props;
      }
      if (!(0, _isObject["default"])(inputProps)) {
        return null;
      }
      var out = {};
      Object.keys(inputProps).forEach(function(key) {
        if (EventKeys.includes(key)) {
          out[key] = newHandler || function(e) {
            return inputProps[key](inputProps, e);
          };
        }
      });
      return out;
    };
    var getEventHandlerOfChild = function getEventHandlerOfChild2(originalHandler, data, index) {
      return function(e) {
        originalHandler(data, index, e);
        return null;
      };
    };
    var adaptEventsOfChild = exports.adaptEventsOfChild = function adaptEventsOfChild2(props, data, index) {
      if (!(0, _isObject["default"])(props) || _typeof(props) !== "object") {
        return null;
      }
      var out = null;
      Object.keys(props).forEach(function(key) {
        var item = props[key];
        if (EventKeys.includes(key) && typeof item === "function") {
          if (!out) out = {};
          out[key] = getEventHandlerOfChild(item, data, index);
        }
      });
      return out;
    };
  }
});

// node_modules/recharts/lib/util/ReactUtils.js
var require_ReactUtils = __commonJS({
  "node_modules/recharts/lib/util/ReactUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.filterSvgElements = exports.filterProps = exports.TOOLTIP_TYPES = exports.SCALE_TYPES = exports.LEGEND_TYPES = void 0;
    exports.findAllByType = findAllByType;
    exports.findChildByType = findChildByType;
    exports.withoutType = exports.validateWidthHeight = exports.toArray = exports.renderByOrder = exports.parseChildIndex = exports.isValidSpreadableProp = exports.isSingleChildEqual = exports.isChildrenEqual = exports.hasClipDot = exports.getReactEventByType = exports.getDisplayName = void 0;
    var _get = _interopRequireDefault(require_get());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isString = _interopRequireDefault(require_isString());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isObject = _interopRequireDefault(require_isObject());
    var _react = require_react();
    var _reactIs = require_react_is();
    var _DataUtils = require_DataUtils();
    var _ShallowEqual = require_ShallowEqual();
    var _types = require_types();
    var _excluded = ["children"];
    var _excluded2 = ["children"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    var REACT_BROWSER_EVENT_MAP = {
      click: "onClick",
      mousedown: "onMouseDown",
      mouseup: "onMouseUp",
      mouseover: "onMouseOver",
      mousemove: "onMouseMove",
      mouseout: "onMouseOut",
      mouseenter: "onMouseEnter",
      mouseleave: "onMouseLeave",
      touchcancel: "onTouchCancel",
      touchend: "onTouchEnd",
      touchmove: "onTouchMove",
      touchstart: "onTouchStart"
    };
    var SCALE_TYPES = exports.SCALE_TYPES = ["auto", "linear", "pow", "sqrt", "log", "identity", "time", "band", "point", "ordinal", "quantile", "quantize", "utc", "sequential", "threshold"];
    var LEGEND_TYPES = exports.LEGEND_TYPES = ["plainline", "line", "square", "rect", "circle", "cross", "diamond", "star", "triangle", "wye", "none"];
    var TOOLTIP_TYPES = exports.TOOLTIP_TYPES = ["none"];
    var getDisplayName = exports.getDisplayName = function getDisplayName2(Comp) {
      if (typeof Comp === "string") {
        return Comp;
      }
      if (!Comp) {
        return "";
      }
      return Comp.displayName || Comp.name || "Component";
    };
    var lastChildren = null;
    var lastResult = null;
    var toArray = exports.toArray = function toArray2(children) {
      if (children === lastChildren && Array.isArray(lastResult)) {
        return lastResult;
      }
      var result = [];
      _react.Children.forEach(children, function(child) {
        if ((0, _isNil["default"])(child)) return;
        if ((0, _reactIs.isFragment)(child)) {
          result = result.concat(toArray2(child.props.children));
        } else {
          result.push(child);
        }
      });
      lastResult = result;
      lastChildren = children;
      return result;
    };
    function findAllByType(children, type) {
      var result = [];
      var types = [];
      if (Array.isArray(type)) {
        types = type.map(function(t) {
          return getDisplayName(t);
        });
      } else {
        types = [getDisplayName(type)];
      }
      toArray(children).forEach(function(child) {
        var childType = (0, _get["default"])(child, "type.displayName") || (0, _get["default"])(child, "type.name");
        if (types.indexOf(childType) !== -1) {
          result.push(child);
        }
      });
      return result;
    }
    function findChildByType(children, type) {
      var result = findAllByType(children, type);
      return result && result[0];
    }
    var withoutType = exports.withoutType = function withoutType2(children, type) {
      var newChildren = [];
      var types;
      if (Array.isArray(type)) {
        types = type.map(function(t) {
          return getDisplayName(t);
        });
      } else {
        types = [getDisplayName(type)];
      }
      toArray(children).forEach(function(child) {
        var displayName = (0, _get["default"])(child, "type.displayName");
        if (displayName && types.indexOf(displayName) !== -1) {
          return;
        }
        newChildren.push(child);
      });
      return newChildren;
    };
    var validateWidthHeight = exports.validateWidthHeight = function validateWidthHeight2(el) {
      if (!el || !el.props) {
        return false;
      }
      var _el$props = el.props, width = _el$props.width, height = _el$props.height;
      if (!(0, _DataUtils.isNumber)(width) || width <= 0 || !(0, _DataUtils.isNumber)(height) || height <= 0) {
        return false;
      }
      return true;
    };
    var SVG_TAGS = ["a", "altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "ellipse", "feBlend", "feColormatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-url", "foreignObject", "g", "glyph", "glyphRef", "hkern", "image", "line", "lineGradient", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "script", "set", "stop", "style", "svg", "switch", "symbol", "text", "textPath", "title", "tref", "tspan", "use", "view", "vkern"];
    var isSvgElement = function isSvgElement2(child) {
      return child && child.type && (0, _isString["default"])(child.type) && SVG_TAGS.indexOf(child.type) >= 0;
    };
    var hasClipDot = exports.hasClipDot = function hasClipDot2(dot) {
      return dot && _typeof(dot) === "object" && "clipDot" in dot;
    };
    var isValidSpreadableProp = exports.isValidSpreadableProp = function isValidSpreadableProp2(property, key, includeEvents, svgElementType) {
      var _FilteredElementKeyMa;
      var matchingElementTypeKeys = (_FilteredElementKeyMa = _types.FilteredElementKeyMap === null || _types.FilteredElementKeyMap === void 0 ? void 0 : _types.FilteredElementKeyMap[svgElementType]) !== null && _FilteredElementKeyMa !== void 0 ? _FilteredElementKeyMa : [];
      return !(0, _isFunction["default"])(property) && (svgElementType && matchingElementTypeKeys.includes(key) || _types.SVGElementPropKeys.includes(key)) || includeEvents && _types.EventKeys.includes(key);
    };
    var filterSvgElements = exports.filterSvgElements = function filterSvgElements2(children) {
      var svgElements = [];
      toArray(children).forEach(function(entry) {
        if (isSvgElement(entry)) {
          svgElements.push(entry);
        }
      });
      return svgElements;
    };
    var filterProps = exports.filterProps = function filterProps2(props, includeEvents, svgElementType) {
      if (!props || typeof props === "function" || typeof props === "boolean") {
        return null;
      }
      var inputProps = props;
      if ((0, _react.isValidElement)(props)) {
        inputProps = props.props;
      }
      if (!(0, _isObject["default"])(inputProps)) {
        return null;
      }
      var out = {};
      Object.keys(inputProps).forEach(function(key) {
        var _inputProps;
        if (isValidSpreadableProp((_inputProps = inputProps) === null || _inputProps === void 0 ? void 0 : _inputProps[key], key, includeEvents, svgElementType)) {
          out[key] = inputProps[key];
        }
      });
      return out;
    };
    var isChildrenEqual = exports.isChildrenEqual = function isChildrenEqual2(nextChildren, prevChildren) {
      if (nextChildren === prevChildren) {
        return true;
      }
      var count = _react.Children.count(nextChildren);
      if (count !== _react.Children.count(prevChildren)) {
        return false;
      }
      if (count === 0) {
        return true;
      }
      if (count === 1) {
        return isSingleChildEqual(Array.isArray(nextChildren) ? nextChildren[0] : nextChildren, Array.isArray(prevChildren) ? prevChildren[0] : prevChildren);
      }
      for (var i = 0; i < count; i++) {
        var nextChild = nextChildren[i];
        var prevChild = prevChildren[i];
        if (Array.isArray(nextChild) || Array.isArray(prevChild)) {
          if (!isChildrenEqual2(nextChild, prevChild)) {
            return false;
          }
        } else if (!isSingleChildEqual(nextChild, prevChild)) {
          return false;
        }
      }
      return true;
    };
    var isSingleChildEqual = exports.isSingleChildEqual = function isSingleChildEqual2(nextChild, prevChild) {
      if ((0, _isNil["default"])(nextChild) && (0, _isNil["default"])(prevChild)) {
        return true;
      }
      if (!(0, _isNil["default"])(nextChild) && !(0, _isNil["default"])(prevChild)) {
        var _ref = nextChild.props || {}, nextChildren = _ref.children, nextProps = _objectWithoutProperties(_ref, _excluded);
        var _ref2 = prevChild.props || {}, prevChildren = _ref2.children, prevProps = _objectWithoutProperties(_ref2, _excluded2);
        if (nextChildren && prevChildren) {
          return (0, _ShallowEqual.shallowEqual)(nextProps, prevProps) && isChildrenEqual(nextChildren, prevChildren);
        }
        if (!nextChildren && !prevChildren) {
          return (0, _ShallowEqual.shallowEqual)(nextProps, prevProps);
        }
        return false;
      }
      return false;
    };
    var renderByOrder = exports.renderByOrder = function renderByOrder2(children, renderMap) {
      var elements = [];
      var record = {};
      toArray(children).forEach(function(child, index) {
        if (isSvgElement(child)) {
          elements.push(child);
        } else if (child) {
          var displayName = getDisplayName(child.type);
          var _ref3 = renderMap[displayName] || {}, handler = _ref3.handler, once = _ref3.once;
          if (handler && (!once || !record[displayName])) {
            var results = handler(child, displayName, index);
            elements.push(results);
            record[displayName] = true;
          }
        }
      });
      return elements;
    };
    var getReactEventByType = exports.getReactEventByType = function getReactEventByType2(e) {
      var type = e && e.type;
      if (type && REACT_BROWSER_EVENT_MAP[type]) {
        return REACT_BROWSER_EVENT_MAP[type];
      }
      return null;
    };
    var parseChildIndex = exports.parseChildIndex = function parseChildIndex2(child, children) {
      return toArray(children).indexOf(child);
    };
  }
});

// node_modules/recharts/lib/container/Surface.js
var require_Surface = __commonJS({
  "node_modules/recharts/lib/container/Surface.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Surface = Surface;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["children", "width", "height", "viewBox", "className", "style", "title", "desc"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function Surface(props) {
      var children = props.children, width = props.width, height = props.height, viewBox = props.viewBox, className = props.className, style = props.style, title = props.title, desc = props.desc, others = _objectWithoutProperties(props, _excluded);
      var svgView = viewBox || {
        width,
        height,
        x: 0,
        y: 0
      };
      var layerClass = (0, _clsx["default"])("recharts-surface", className);
      return _react["default"].createElement("svg", _extends({}, (0, _ReactUtils.filterProps)(others, true, "svg"), {
        className: layerClass,
        width,
        height,
        style,
        viewBox: "".concat(svgView.x, " ").concat(svgView.y, " ").concat(svgView.width, " ").concat(svgView.height)
      }), _react["default"].createElement("title", null, title), _react["default"].createElement("desc", null, desc), children);
    }
  }
});

// node_modules/recharts/lib/container/Layer.js
var require_Layer = __commonJS({
  "node_modules/recharts/lib/container/Layer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Layer = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["children", "className"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    var Layer = exports.Layer = _react["default"].forwardRef(function(props, ref) {
      var children = props.children, className = props.className, others = _objectWithoutProperties(props, _excluded);
      var layerClass = (0, _clsx["default"])("recharts-layer", className);
      return _react["default"].createElement("g", _extends({
        className: layerClass
      }, (0, _ReactUtils.filterProps)(others, true), {
        ref
      }), children);
    });
  }
});

// node_modules/recharts/lib/util/LogUtils.js
var require_LogUtils = __commonJS({
  "node_modules/recharts/lib/util/LogUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.warn = void 0;
    var isDev = true;
    var warn = exports.warn = function warn2(condition, format) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }
      if (isDev && typeof console !== "undefined" && console.warn) {
        if (format === void 0) {
          console.warn("LogUtils requires an error message argument");
        }
        if (!condition) {
          if (format === void 0) {
            console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
          } else {
            var argIndex = 0;
            console.warn(format.replace(/%s/g, function() {
              return args[argIndex++];
            }));
          }
        }
      }
    };
  }
});

// node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "node_modules/lodash/_baseSlice.js"(exports, module) {
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// node_modules/lodash/_castSlice.js
var require_castSlice = __commonJS({
  "node_modules/lodash/_castSlice.js"(exports, module) {
    var baseSlice = require_baseSlice();
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === void 0 ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    module.exports = castSlice;
  }
});

// node_modules/lodash/_hasUnicode.js
var require_hasUnicode = __commonJS({
  "node_modules/lodash/_hasUnicode.js"(exports, module) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    module.exports = hasUnicode;
  }
});

// node_modules/lodash/_asciiToArray.js
var require_asciiToArray = __commonJS({
  "node_modules/lodash/_asciiToArray.js"(exports, module) {
    function asciiToArray(string) {
      return string.split("");
    }
    module.exports = asciiToArray;
  }
});

// node_modules/lodash/_unicodeToArray.js
var require_unicodeToArray = __commonJS({
  "node_modules/lodash/_unicodeToArray.js"(exports, module) {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    module.exports = unicodeToArray;
  }
});

// node_modules/lodash/_stringToArray.js
var require_stringToArray = __commonJS({
  "node_modules/lodash/_stringToArray.js"(exports, module) {
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    module.exports = stringToArray;
  }
});

// node_modules/lodash/_createCaseFirst.js
var require_createCaseFirst = __commonJS({
  "node_modules/lodash/_createCaseFirst.js"(exports, module) {
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var stringToArray = require_stringToArray();
    var toString2 = require_toString();
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString2(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    module.exports = createCaseFirst;
  }
});

// node_modules/lodash/upperFirst.js
var require_upperFirst = __commonJS({
  "node_modules/lodash/upperFirst.js"(exports, module) {
    var createCaseFirst = require_createCaseFirst();
    var upperFirst = createCaseFirst("toUpperCase");
    module.exports = upperFirst;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-path/src/path.js
var require_path = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-path/src/path.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var pi = Math.PI;
    var tau = 2 * pi;
    var epsilon = 1e-6;
    var tauEpsilon = tau - epsilon;
    function Path() {
      this._x0 = this._y0 = // start of current subpath
      this._x1 = this._y1 = null;
      this._ = "";
    }
    function path() {
      return new Path();
    }
    Path.prototype = path.prototype = {
      constructor: Path,
      moveTo: function(x, y) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
      },
      closePath: function() {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._ += "Z";
        }
      },
      lineTo: function(x, y) {
        this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      quadraticCurveTo: function(x1, y1, x, y) {
        this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      arcTo: function(x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
        if (r < 0) throw new Error("negative radius: " + r);
        if (this._x1 === null) {
          this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
        } else if (!(l01_2 > epsilon)) ;
        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } else {
          var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
          if (Math.abs(t01 - 1) > epsilon) {
            this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
          }
          this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
        }
      },
      arc: function(x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r, ccw = !!ccw;
        var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
        if (r < 0) throw new Error("negative radius: " + r);
        if (this._x1 === null) {
          this._ += "M" + x0 + "," + y0;
        } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
          this._ += "L" + x0 + "," + y0;
        }
        if (!r) return;
        if (da < 0) da = da % tau + tau;
        if (da > tauEpsilon) {
          this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
        } else if (da > epsilon) {
          this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
        }
      },
      rect: function(x, y, w, h) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
      },
      toString: function() {
        return this._;
      }
    };
    var _default = path;
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-path/src/index.js
var require_src = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-path/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "path", {
      enumerable: true,
      get: function() {
        return _path.default;
      }
    });
    var _path = _interopRequireDefault(require_path());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/constant.js
var require_constant = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/constant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(x) {
      return function constant() {
        return x;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/math.js
var require_math = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/math.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.abs = void 0;
    exports.acos = acos;
    exports.asin = asin;
    exports.tau = exports.sqrt = exports.sin = exports.pi = exports.min = exports.max = exports.halfPi = exports.epsilon = exports.cos = exports.atan2 = void 0;
    var abs = Math.abs;
    exports.abs = abs;
    var atan2 = Math.atan2;
    exports.atan2 = atan2;
    var cos = Math.cos;
    exports.cos = cos;
    var max = Math.max;
    exports.max = max;
    var min = Math.min;
    exports.min = min;
    var sin = Math.sin;
    exports.sin = sin;
    var sqrt = Math.sqrt;
    exports.sqrt = sqrt;
    var epsilon = 1e-12;
    exports.epsilon = epsilon;
    var pi = Math.PI;
    exports.pi = pi;
    var halfPi = pi / 2;
    exports.halfPi = halfPi;
    var tau = 2 * pi;
    exports.tau = tau;
    function acos(x) {
      return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
    }
    function asin(x) {
      return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/arc.js
var require_arc = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/arc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _index = require_src();
    var _constant = _interopRequireDefault(require_constant());
    var _math = require_math();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function arcInnerRadius(d) {
      return d.innerRadius;
    }
    function arcOuterRadius(d) {
      return d.outerRadius;
    }
    function arcStartAngle(d) {
      return d.startAngle;
    }
    function arcEndAngle(d) {
      return d.endAngle;
    }
    function arcPadAngle(d) {
      return d && d.padAngle;
    }
    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
      var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
      if (t * t < _math.epsilon) return;
      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
      return [x0 + t * x10, y0 + t * y10];
    }
    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
      var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
      if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
      return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
      };
    }
    function _default() {
      var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = (0, _constant.default)(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
      function arc() {
        var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - _math.halfPi, a1 = endAngle.apply(this, arguments) - _math.halfPi, da = (0, _math.abs)(a1 - a0), cw = a1 > a0;
        if (!context) context = buffer = (0, _index.path)();
        if (r1 < r0) r = r1, r1 = r0, r0 = r;
        if (!(r1 > _math.epsilon)) context.moveTo(0, 0);
        else if (da > _math.tau - _math.epsilon) {
          context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
          context.arc(0, 0, r1, a0, a1, !cw);
          if (r0 > _math.epsilon) {
            context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
            context.arc(0, 0, r0, a1, a0, cw);
          }
        } else {
          var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)), rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t0, t1;
          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)), p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
            else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
            else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }
          var x01 = r1 * (0, _math.cos)(a01), y01 = r1 * (0, _math.sin)(a01), x10 = r0 * (0, _math.cos)(a10), y10 = r0 * (0, _math.sin)(a10);
          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11), y11 = r1 * (0, _math.sin)(a11), x00 = r0 * (0, _math.cos)(a00), y00 = r0 * (0, _math.sin)(a00), oc;
            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2), lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          }
          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01);
          else if (rc1 > _math.epsilon) {
            t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
            t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
            context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
            if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw);
            else {
              context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
              context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
            }
          } else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10);
          else if (rc0 > _math.epsilon) {
            t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
            t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
            context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
            if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw);
            else {
              context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
              context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
              context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
            }
          } else context.arc(0, 0, r0, a10, a00, cw);
        }
        context.closePath();
        if (buffer) return context = null, buffer + "" || null;
      }
      arc.centroid = function() {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
        return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
      };
      arc.innerRadius = function(_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
      };
      arc.outerRadius = function(_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
      };
      arc.cornerRadius = function(_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
      };
      arc.padRadius = function(_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
      };
      arc.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
      };
      arc.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
      };
      arc.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
      };
      arc.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, arc) : context;
      };
      return arc;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/array.js
var require_array = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/array.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.slice = void 0;
    var slice = Array.prototype.slice;
    exports.slice = slice;
    function _default(x) {
      return typeof x === "object" && "length" in x ? x : Array.from(x);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/linear.js
var require_linear = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/linear.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function Linear(context) {
      this._context = context;
    }
    Linear.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
          // falls through
          default:
            this._context.lineTo(x, y);
            break;
        }
      }
    };
    function _default(context) {
      return new Linear(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/point.js
var require_point = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/point.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.x = x;
    exports.y = y;
    function x(p) {
      return p[0];
    }
    function y(p) {
      return p[1];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/line.js
var require_line = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/line.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _index = require_src();
    var _array = _interopRequireDefault(require_array());
    var _constant = _interopRequireDefault(require_constant());
    var _linear = _interopRequireDefault(require_linear());
    var _point = require_point();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(x, y) {
      var defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null;
      x = typeof x === "function" ? x : x === void 0 ? _point.x : (0, _constant.default)(x);
      y = typeof y === "function" ? y : y === void 0 ? _point.y : (0, _constant.default)(y);
      function line(data) {
        var i, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer;
        if (context == null) output = curve(buffer = (0, _index.path)());
        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) output.lineStart();
            else output.lineEnd();
          }
          if (defined0) output.point(+x(d, i, data), +y(d, i, data));
        }
        if (buffer) return output = null, buffer + "" || null;
      }
      line.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
      };
      line.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
      };
      line.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
      };
      line.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
      };
      line.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
      };
      return line;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/area.js
var require_area = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/area.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _index = require_src();
    var _array = _interopRequireDefault(require_array());
    var _constant = _interopRequireDefault(require_constant());
    var _linear = _interopRequireDefault(require_linear());
    var _line = _interopRequireDefault(require_line());
    var _point = require_point();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(x0, y0, y1) {
      var x1 = null, defined = (0, _constant.default)(true), context = null, curve = _linear.default, output = null;
      x0 = typeof x0 === "function" ? x0 : x0 === void 0 ? _point.x : (0, _constant.default)(+x0);
      y0 = typeof y0 === "function" ? y0 : y0 === void 0 ? (0, _constant.default)(0) : (0, _constant.default)(+y0);
      y1 = typeof y1 === "function" ? y1 : y1 === void 0 ? _point.y : (0, _constant.default)(+y1);
      function area(data) {
        var i, j, k, n = (data = (0, _array.default)(data)).length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
        if (context == null) output = curve(buffer = (0, _index.path)());
        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) {
              j = i;
              output.areaStart();
              output.lineStart();
            } else {
              output.lineEnd();
              output.lineStart();
              for (k = i - 1; k >= j; --k) {
                output.point(x0z[k], y0z[k]);
              }
              output.lineEnd();
              output.areaEnd();
            }
          }
          if (defined0) {
            x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
            output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
          }
        }
        if (buffer) return output = null, buffer + "" || null;
      }
      function arealine() {
        return (0, _line.default)().defined(defined).curve(curve).context(context);
      }
      area.x = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
      };
      area.x0 = function(_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
      };
      area.x1 = function(_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
      };
      area.y = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
      };
      area.y0 = function(_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
      };
      area.y1 = function(_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
      };
      area.lineX0 = area.lineY0 = function() {
        return arealine().x(x0).y(y0);
      };
      area.lineY1 = function() {
        return arealine().x(x0).y(y1);
      };
      area.lineX1 = function() {
        return arealine().x(x1).y(y0);
      };
      area.defined = function(_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
      };
      area.curve = function(_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
      };
      area.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
      };
      return area;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/descending.js
var require_descending = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/descending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/identity.js
var require_identity = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/identity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(d) {
      return d;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/pie.js
var require_pie = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/pie.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _array = _interopRequireDefault(require_array());
    var _constant = _interopRequireDefault(require_constant());
    var _descending = _interopRequireDefault(require_descending());
    var _identity = _interopRequireDefault(require_identity());
    var _math = require_math();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default() {
      var value = _identity.default, sortValues = _descending.default, sort = null, startAngle = (0, _constant.default)(0), endAngle = (0, _constant.default)(_math.tau), padAngle = (0, _constant.default)(0);
      function pie(data) {
        var i, n = (data = (0, _array.default)(data)).length, j, k, sum = 0, index = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
        for (i = 0; i < n; ++i) {
          if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
            sum += v;
          }
        }
        if (sortValues != null) index.sort(function(i2, j2) {
          return sortValues(arcs[i2], arcs[j2]);
        });
        else if (sort != null) index.sort(function(i2, j2) {
          return sort(data[i2], data[j2]);
        });
        for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
          j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
          };
        }
        return arcs;
      }
      pie.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
      };
      pie.sortValues = function(_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
      };
      pie.sort = function(_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
      };
      pie.startAngle = function(_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
      };
      pie.endAngle = function(_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
      };
      pie.padAngle = function(_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
      };
      return pie;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/radial.js
var require_radial = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/radial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.curveRadialLinear = void 0;
    exports.default = curveRadial;
    var _linear = _interopRequireDefault(require_linear());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var curveRadialLinear = curveRadial(_linear.default);
    exports.curveRadialLinear = curveRadialLinear;
    function Radial(curve) {
      this._curve = curve;
    }
    Radial.prototype = {
      areaStart: function() {
        this._curve.areaStart();
      },
      areaEnd: function() {
        this._curve.areaEnd();
      },
      lineStart: function() {
        this._curve.lineStart();
      },
      lineEnd: function() {
        this._curve.lineEnd();
      },
      point: function(a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
      }
    };
    function curveRadial(curve) {
      function radial(context) {
        return new Radial(curve(context));
      }
      radial._curve = curve;
      return radial;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/lineRadial.js
var require_lineRadial = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/lineRadial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.lineRadial = lineRadial;
    var _radial = _interopRequireWildcard(require_radial());
    var _line = _interopRequireDefault(require_line());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function lineRadial(l) {
      var c = l.curve;
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      l.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
      };
      return l;
    }
    function _default() {
      return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/areaRadial.js
var require_areaRadial = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/areaRadial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _radial = _interopRequireWildcard(require_radial());
    var _area = _interopRequireDefault(require_area());
    var _lineRadial = require_lineRadial();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _default() {
      var a = (0, _area.default)().curve(_radial.curveRadialLinear), c = a.curve, x0 = a.lineX0, x1 = a.lineX1, y0 = a.lineY0, y1 = a.lineY1;
      a.angle = a.x, delete a.x;
      a.startAngle = a.x0, delete a.x0;
      a.endAngle = a.x1, delete a.x1;
      a.radius = a.y, delete a.y;
      a.innerRadius = a.y0, delete a.y0;
      a.outerRadius = a.y1, delete a.y1;
      a.lineStartAngle = function() {
        return (0, _lineRadial.lineRadial)(x0());
      }, delete a.lineX0;
      a.lineEndAngle = function() {
        return (0, _lineRadial.lineRadial)(x1());
      }, delete a.lineX1;
      a.lineInnerRadius = function() {
        return (0, _lineRadial.lineRadial)(y0());
      }, delete a.lineY0;
      a.lineOuterRadius = function() {
        return (0, _lineRadial.lineRadial)(y1());
      }, delete a.lineY1;
      a.curve = function(_) {
        return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
      };
      return a;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/pointRadial.js
var require_pointRadial = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/pointRadial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(x, y) {
      return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/bump.js
var require_bump = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/bump.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bumpRadial = bumpRadial;
    exports.bumpX = bumpX;
    exports.bumpY = bumpY;
    var _pointRadial = _interopRequireDefault(require_pointRadial());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Bump = class {
      constructor(context, x) {
        this._context = context;
        this._x = x;
      }
      areaStart() {
        this._line = 0;
      }
      areaEnd() {
        this._line = NaN;
      }
      lineStart() {
        this._point = 0;
      }
      lineEnd() {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      }
      point(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0: {
            this._point = 1;
            if (this._line) this._context.lineTo(x, y);
            else this._context.moveTo(x, y);
            break;
          }
          case 1:
            this._point = 2;
          // falls through
          default: {
            if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
            else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
            break;
          }
        }
        this._x0 = x, this._y0 = y;
      }
    };
    var BumpRadial = class {
      constructor(context) {
        this._context = context;
      }
      lineStart() {
        this._point = 0;
      }
      lineEnd() {
      }
      point(x, y) {
        x = +x, y = +y;
        if (this._point++ === 0) {
          this._x0 = x, this._y0 = y;
        } else {
          const p0 = (0, _pointRadial.default)(this._x0, this._y0);
          const p1 = (0, _pointRadial.default)(this._x0, this._y0 = (this._y0 + y) / 2);
          const p2 = (0, _pointRadial.default)(x, this._y0);
          const p3 = (0, _pointRadial.default)(x, y);
          this._context.moveTo(...p0);
          this._context.bezierCurveTo(...p1, ...p2, ...p3);
        }
      }
    };
    function bumpX(context) {
      return new Bump(context, true);
    }
    function bumpY(context) {
      return new Bump(context, false);
    }
    function bumpRadial(context) {
      return new BumpRadial(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/link.js
var require_link = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/link.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.link = link;
    exports.linkHorizontal = linkHorizontal;
    exports.linkRadial = linkRadial;
    exports.linkVertical = linkVertical;
    var _index = require_src();
    var _array = require_array();
    var _constant = _interopRequireDefault(require_constant());
    var _bump = require_bump();
    var _point = require_point();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function linkSource(d) {
      return d.source;
    }
    function linkTarget(d) {
      return d.target;
    }
    function link(curve) {
      let source = linkSource;
      let target = linkTarget;
      let x = _point.x;
      let y = _point.y;
      let context = null;
      let output = null;
      function link2() {
        let buffer;
        const argv = _array.slice.call(arguments);
        const s = source.apply(this, argv);
        const t = target.apply(this, argv);
        if (context == null) output = curve(buffer = (0, _index.path)());
        output.lineStart();
        argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));
        argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));
        output.lineEnd();
        if (buffer) return output = null, buffer + "" || null;
      }
      link2.source = function(_) {
        return arguments.length ? (source = _, link2) : source;
      };
      link2.target = function(_) {
        return arguments.length ? (target = _, link2) : target;
      };
      link2.x = function(_) {
        return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link2) : x;
      };
      link2.y = function(_) {
        return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link2) : y;
      };
      link2.context = function(_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link2) : context;
      };
      return link2;
    }
    function linkHorizontal() {
      return link(_bump.bumpX);
    }
    function linkVertical() {
      return link(_bump.bumpY);
    }
    function linkRadial() {
      const l = link(_bump.bumpRadial);
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      return l;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/asterisk.js
var require_asterisk = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/asterisk.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var sqrt3 = (0, _math.sqrt)(3);
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size + (0, _math.min)(size / 28, 0.75)) * 0.59436;
        const t = r / 2;
        const u = t * sqrt3;
        context.moveTo(0, r);
        context.lineTo(0, -r);
        context.moveTo(-u, -t);
        context.lineTo(u, t);
        context.moveTo(-u, t);
        context.lineTo(u, -t);
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/circle.js
var require_circle = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/circle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size / _math.pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, _math.tau);
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/cross.js
var require_cross = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/cross.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/diamond.js
var require_diamond = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/diamond.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var tan30 = (0, _math.sqrt)(1 / 3);
    var tan30_2 = tan30 * 2;
    var _default = {
      draw(context, size) {
        const y = (0, _math.sqrt)(size / tan30_2);
        const x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/diamond2.js
var require_diamond2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/diamond2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size) * 0.62625;
        context.moveTo(0, -r);
        context.lineTo(r, 0);
        context.lineTo(0, r);
        context.lineTo(-r, 0);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/plus.js
var require_plus = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/plus.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 7, 2)) * 0.87559;
        context.moveTo(-r, 0);
        context.lineTo(r, 0);
        context.moveTo(0, r);
        context.lineTo(0, -r);
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/square.js
var require_square = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/square.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const w = (0, _math.sqrt)(size);
        const x = -w / 2;
        context.rect(x, x, w, w);
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/square2.js
var require_square2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/square2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size) * 0.4431;
        context.moveTo(r, r);
        context.lineTo(r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, r);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/star.js
var require_star = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/star.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var ka = 0.8908130915292852;
    var kr = (0, _math.sin)(_math.pi / 10) / (0, _math.sin)(7 * _math.pi / 10);
    var kx = (0, _math.sin)(_math.tau / 10) * kr;
    var ky = -(0, _math.cos)(_math.tau / 10) * kr;
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size * ka);
        const x = kx * r;
        const y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for (let i = 1; i < 5; ++i) {
          const a = _math.tau * i / 5;
          const c = (0, _math.cos)(a);
          const s = (0, _math.sin)(a);
          context.lineTo(s * r, -c * r);
          context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/triangle.js
var require_triangle = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/triangle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var sqrt3 = (0, _math.sqrt)(3);
    var _default = {
      draw(context, size) {
        const y = -(0, _math.sqrt)(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/triangle2.js
var require_triangle2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/triangle2.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var sqrt3 = (0, _math.sqrt)(3);
    var _default = {
      draw(context, size) {
        const s = (0, _math.sqrt)(size) * 0.6824;
        const t = s / 2;
        const u = s * sqrt3 / 2;
        context.moveTo(0, -s);
        context.lineTo(u, t);
        context.lineTo(-u, t);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/wye.js
var require_wye = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/wye.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var c = -0.5;
    var s = (0, _math.sqrt)(3) / 2;
    var k = 1 / (0, _math.sqrt)(12);
    var a = (k / 2 + 1) * 3;
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size / a);
        const x0 = r / 2, y0 = r * k;
        const x1 = x0, y1 = r * k + r;
        const x2 = -x1, y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/x.js
var require_x = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol/x.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _math = require_math();
    var _default = {
      draw(context, size) {
        const r = (0, _math.sqrt)(size - (0, _math.min)(size / 6, 1.7)) * 0.6189;
        context.moveTo(-r, -r);
        context.lineTo(r, r);
        context.moveTo(-r, r);
        context.lineTo(r, -r);
      }
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol.js
var require_symbol = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/symbol.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = Symbol2;
    exports.symbolsStroke = exports.symbolsFill = void 0;
    var _index = require_src();
    var _constant = _interopRequireDefault(require_constant());
    var _asterisk = _interopRequireDefault(require_asterisk());
    var _circle = _interopRequireDefault(require_circle());
    var _cross = _interopRequireDefault(require_cross());
    var _diamond = _interopRequireDefault(require_diamond());
    var _diamond2 = _interopRequireDefault(require_diamond2());
    var _plus = _interopRequireDefault(require_plus());
    var _square = _interopRequireDefault(require_square());
    var _square2 = _interopRequireDefault(require_square2());
    var _star = _interopRequireDefault(require_star());
    var _triangle = _interopRequireDefault(require_triangle());
    var _triangle2 = _interopRequireDefault(require_triangle2());
    var _wye = _interopRequireDefault(require_wye());
    var _x = _interopRequireDefault(require_x());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var symbolsFill = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
    exports.symbolsFill = symbolsFill;
    var symbolsStroke = [_circle.default, _plus.default, _x.default, _triangle2.default, _asterisk.default, _square2.default, _diamond2.default];
    exports.symbolsStroke = symbolsStroke;
    function Symbol2(type, size) {
      let context = null;
      type = typeof type === "function" ? type : (0, _constant.default)(type || _circle.default);
      size = typeof size === "function" ? size : (0, _constant.default)(size === void 0 ? 64 : +size);
      function symbol() {
        let buffer;
        if (!context) context = buffer = (0, _index.path)();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
      }
      symbol.type = function(_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
      };
      symbol.size = function(_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
      };
      symbol.context = function(_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
      };
      return symbol;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/noop.js
var require_noop = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/noop.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default() {
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basis.js
var require_basis = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Basis = Basis;
    exports.default = _default;
    exports.point = point;
    function point(that, x, y) {
      that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
    }
    function Basis(context) {
      this._context = context;
    }
    Basis.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 3:
            point(this, this._x1, this._y1);
          // falls through
          case 2:
            this._context.lineTo(this._x1, this._y1);
            break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
          // falls through
          default:
            point(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function _default(context) {
      return new Basis(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basisClosed.js
var require_basisClosed = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basisClosed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _noop = _interopRequireDefault(require_noop());
    var _basis = require_basis();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function BasisClosed(context) {
      this._context = context;
    }
    BasisClosed.prototype = {
      areaStart: _noop.default,
      areaEnd: _noop.default,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x2, this._y2);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
            this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x2, this._y2);
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x2 = x, this._y2 = y;
            break;
          case 1:
            this._point = 2;
            this._x3 = x, this._y3 = y;
            break;
          case 2:
            this._point = 3;
            this._x4 = x, this._y4 = y;
            this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);
            break;
          default:
            (0, _basis.point)(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function _default(context) {
      return new BasisClosed(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basisOpen.js
var require_basisOpen = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/basisOpen.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _basis = require_basis();
    function BasisOpen(context) {
      this._context = context;
    }
    BasisOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6;
            this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
            break;
          case 3:
            this._point = 4;
          // falls through
          default:
            (0, _basis.point)(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };
    function _default(context) {
      return new BasisOpen(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/bundle.js
var require_bundle = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/bundle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _basis = require_basis();
    function Bundle(context, beta) {
      this._basis = new _basis.Basis(context);
      this._beta = beta;
    }
    Bundle.prototype = {
      lineStart: function() {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
      },
      lineEnd: function() {
        var x = this._x, y = this._y, j = x.length - 1;
        if (j > 0) {
          var x0 = x[0], y0 = y[0], dx = x[j] - x0, dy = y[j] - y0, i = -1, t;
          while (++i <= j) {
            t = i / j;
            this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
          }
        }
        this._x = this._y = null;
        this._basis.lineEnd();
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };
    var _default = function custom(beta) {
      function bundle(context) {
        return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
      }
      bundle.beta = function(beta2) {
        return custom(+beta2);
      };
      return bundle;
    }(0.85);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinal.js
var require_cardinal = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Cardinal = Cardinal;
    exports.default = void 0;
    exports.point = point;
    function point(that, x, y) {
      that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
    }
    function Cardinal(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    Cardinal.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);
            break;
          case 3:
            point(this, this._x1, this._y1);
            break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            this._x1 = x, this._y1 = y;
            break;
          case 2:
            this._point = 3;
          // falls through
          default:
            point(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(tension) {
      function cardinal(context) {
        return new Cardinal(context, tension);
      }
      cardinal.tension = function(tension2) {
        return custom(+tension2);
      };
      return cardinal;
    }(0);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinalClosed.js
var require_cardinalClosed = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinalClosed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CardinalClosed = CardinalClosed;
    exports.default = void 0;
    var _noop = _interopRequireDefault(require_noop());
    var _cardinal = require_cardinal();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function CardinalClosed(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    CardinalClosed.prototype = {
      areaStart: _noop.default,
      areaEnd: _noop.default,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x3 = x, this._y3 = y;
            break;
          case 1:
            this._point = 2;
            this._context.moveTo(this._x4 = x, this._y4 = y);
            break;
          case 2:
            this._point = 3;
            this._x5 = x, this._y5 = y;
            break;
          default:
            (0, _cardinal.point)(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(tension) {
      function cardinal(context) {
        return new CardinalClosed(context, tension);
      }
      cardinal.tension = function(tension2) {
        return custom(+tension2);
      };
      return cardinal;
    }(0);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinalOpen.js
var require_cardinalOpen = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/cardinalOpen.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CardinalOpen = CardinalOpen;
    exports.default = void 0;
    var _cardinal = require_cardinal();
    function CardinalOpen(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }
    CardinalOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
            break;
          case 3:
            this._point = 4;
          // falls through
          default:
            (0, _cardinal.point)(this, x, y);
            break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(tension) {
      function cardinal(context) {
        return new CardinalOpen(context, tension);
      }
      cardinal.tension = function(tension2) {
        return custom(+tension2);
      };
      return cardinal;
    }(0);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRom.js
var require_catmullRom = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    exports.point = point;
    var _math = require_math();
    var _cardinal = require_cardinal();
    function point(that, x, y) {
      var x1 = that._x1, y1 = that._y1, x2 = that._x2, y2 = that._y2;
      if (that._l01_a > _math.epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
      }
      if (that._l23_a > _math.epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
      }
      that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
    }
    function CatmullRom(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRom.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);
            break;
          case 3:
            this.point(this._x2, this._y2);
            break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x, y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
          // falls through
          default:
            point(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
      }
      catmullRom.alpha = function(alpha2) {
        return custom(+alpha2);
      };
      return catmullRom;
    }(0.5);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRomClosed.js
var require_catmullRomClosed = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRomClosed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _cardinalClosed = require_cardinalClosed();
    var _noop = _interopRequireDefault(require_noop());
    var _catmullRom = require_catmullRom();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function CatmullRomClosed(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRomClosed.prototype = {
      areaStart: _noop.default,
      areaEnd: _noop.default,
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 1: {
            this._context.moveTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 2: {
            this._context.lineTo(this._x3, this._y3);
            this._context.closePath();
            break;
          }
          case 3: {
            this.point(this._x3, this._y3);
            this.point(this._x4, this._y4);
            this.point(this._x5, this._y5);
            break;
          }
        }
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x, y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            this._x3 = x, this._y3 = y;
            break;
          case 1:
            this._point = 2;
            this._context.moveTo(this._x4 = x, this._y4 = y);
            break;
          case 2:
            this._point = 3;
            this._x5 = x, this._y5 = y;
            break;
          default:
            (0, _catmullRom.point)(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
      }
      catmullRom.alpha = function(alpha2) {
        return custom(+alpha2);
      };
      return catmullRom;
    }(0.5);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRomOpen.js
var require_catmullRomOpen = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/catmullRomOpen.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _cardinalOpen = require_cardinalOpen();
    var _catmullRom = require_catmullRom();
    function CatmullRomOpen(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }
    CatmullRomOpen.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function() {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) {
          var x23 = this._x2 - x, y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }
        switch (this._point) {
          case 0:
            this._point = 1;
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
            break;
          case 3:
            this._point = 4;
          // falls through
          default:
            (0, _catmullRom.point)(this, x, y);
            break;
        }
        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };
    var _default = function custom(alpha) {
      function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
      }
      catmullRom.alpha = function(alpha2) {
        return custom(+alpha2);
      };
      return catmullRom;
    }(0.5);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/linearClosed.js
var require_linearClosed = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/linearClosed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _noop = _interopRequireDefault(require_noop());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function LinearClosed(context) {
      this._context = context;
    }
    LinearClosed.prototype = {
      areaStart: _noop.default,
      areaEnd: _noop.default,
      lineStart: function() {
        this._point = 0;
      },
      lineEnd: function() {
        if (this._point) this._context.closePath();
      },
      point: function(x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);
        else this._point = 1, this._context.moveTo(x, y);
      }
    };
    function _default(context) {
      return new LinearClosed(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/monotone.js
var require_monotone = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/monotone.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.monotoneX = monotoneX;
    exports.monotoneY = monotoneY;
    function sign(x) {
      return x < 0 ? -1 : 1;
    }
    function slope3(that, x2, y2) {
      var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
      return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
    }
    function slope2(that, t) {
      var h = that._x1 - that._x0;
      return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
    }
    function point(that, t0, t1) {
      var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
      that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
    }
    function MonotoneX(context) {
      this._context = context;
    }
    MonotoneX.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x1, this._y1);
            break;
          case 3:
            point(this, this._t0, slope2(this, this._t0));
            break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function(x, y) {
        var t1 = NaN;
        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
            break;
          case 2:
            this._point = 3;
            point(this, slope2(this, t1 = slope3(this, x, y)), t1);
            break;
          default:
            point(this, this._t0, t1 = slope3(this, x, y));
            break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
      }
    };
    function MonotoneY(context) {
      this._context = new ReflectContext(context);
    }
    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
      MonotoneX.prototype.point.call(this, y, x);
    };
    function ReflectContext(context) {
      this._context = context;
    }
    ReflectContext.prototype = {
      moveTo: function(x, y) {
        this._context.moveTo(y, x);
      },
      closePath: function() {
        this._context.closePath();
      },
      lineTo: function(x, y) {
        this._context.lineTo(y, x);
      },
      bezierCurveTo: function(x1, y1, x2, y2, x, y) {
        this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
      }
    };
    function monotoneX(context) {
      return new MonotoneX(context);
    }
    function monotoneY(context) {
      return new MonotoneY(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/natural.js
var require_natural = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/natural.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function Natural(context) {
      this._context = context;
    }
    Natural.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = [];
        this._y = [];
      },
      lineEnd: function() {
        var x = this._x, y = this._y, n = x.length;
        if (n) {
          this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
          if (n === 2) {
            this._context.lineTo(x[1], y[1]);
          } else {
            var px = controlPoints(x), py = controlPoints(y);
            for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
              this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
          }
        }
        if (this._line || this._line !== 0 && n === 1) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
      },
      point: function(x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };
    function controlPoints(x) {
      var i, n = x.length - 1, m, a = new Array(n), b = new Array(n), r = new Array(n);
      a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
      for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
      a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
      for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
      a[n - 1] = r[n - 1] / b[n - 1];
      for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
      b[n - 1] = (x[n] + a[n - 1]) / 2;
      for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
      return [a, b];
    }
    function _default(context) {
      return new Natural(context);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/step.js
var require_step = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/curve/step.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.stepAfter = stepAfter;
    exports.stepBefore = stepBefore;
    function Step(context, t) {
      this._context = context;
      this._t = t;
    }
    Step.prototype = {
      areaStart: function() {
        this._line = 0;
      },
      areaEnd: function() {
        this._line = NaN;
      },
      lineStart: function() {
        this._x = this._y = NaN;
        this._point = 0;
      },
      lineEnd: function() {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
      },
      point: function(x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;
            this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
            break;
          case 1:
            this._point = 2;
          // falls through
          default: {
            if (this._t <= 0) {
              this._context.lineTo(this._x, y);
              this._context.lineTo(x, y);
            } else {
              var x1 = this._x * (1 - this._t) + x * this._t;
              this._context.lineTo(x1, this._y);
              this._context.lineTo(x1, y);
            }
            break;
          }
        }
        this._x = x, this._y = y;
      }
    };
    function _default(context) {
      return new Step(context, 0.5);
    }
    function stepBefore(context) {
      return new Step(context, 0);
    }
    function stepAfter(context) {
      return new Step(context, 1);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/none.js
var require_none = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/none.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(series, order) {
      if (!((n = series.length) > 1)) return;
      for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
        s0 = s1, s1 = series[order[i]];
        for (j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/none.js
var require_none2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/none.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(series) {
      var n = series.length, o = new Array(n);
      while (--n >= 0) o[n] = n;
      return o;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/stack.js
var require_stack = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/stack.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _array = _interopRequireDefault(require_array());
    var _constant = _interopRequireDefault(require_constant());
    var _none = _interopRequireDefault(require_none());
    var _none2 = _interopRequireDefault(require_none2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function stackValue(d, key) {
      return d[key];
    }
    function stackSeries(key) {
      const series = [];
      series.key = key;
      return series;
    }
    function _default() {
      var keys = (0, _constant.default)([]), order = _none2.default, offset = _none.default, value = stackValue;
      function stack(data) {
        var sz = Array.from(keys.apply(this, arguments), stackSeries), i, n = sz.length, j = -1, oz;
        for (const d of data) {
          for (i = 0, ++j; i < n; ++i) {
            (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
          }
        }
        for (i = 0, oz = (0, _array.default)(order(sz)); i < n; ++i) {
          sz[oz[i]].index = i;
        }
        offset(sz, oz);
        return sz;
      }
      stack.keys = function(_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : keys;
      };
      stack.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
      };
      stack.order = function(_) {
        return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : order;
      };
      stack.offset = function(_) {
        return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
      };
      return stack;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/expand.js
var require_expand = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/expand.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _none = _interopRequireDefault(require_none());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
        for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
        if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
      }
      (0, _none.default)(series, order);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/diverging.js
var require_diverging = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/diverging.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
        for (yp = yn = 0, i = 0; i < n; ++i) {
          if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
            d[0] = yp, d[1] = yp += dy;
          } else if (dy < 0) {
            d[1] = yn, d[0] = yn += dy;
          } else {
            d[0] = 0, d[1] = dy;
          }
        }
      }
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/silhouette.js
var require_silhouette = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/silhouette.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _none = _interopRequireDefault(require_none());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series, order) {
      if (!((n = series.length) > 0)) return;
      for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
        for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
      }
      (0, _none.default)(series, order);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/wiggle.js
var require_wiggle = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/offset/wiggle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _none = _interopRequireDefault(require_none());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series, order) {
      if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
      for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
        for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
          var si = series[order[i]], sij0 = si[j][1] || 0, sij1 = si[j - 1][1] || 0, s3 = (sij0 - sij1) / 2;
          for (var k = 0; k < i; ++k) {
            var sk = series[order[k]], skj0 = sk[j][1] || 0, skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      (0, _none.default)(series, order);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/appearance.js
var require_appearance = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/appearance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _none = _interopRequireDefault(require_none2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series) {
      var peaks = series.map(peak);
      return (0, _none.default)(series).sort(function(a, b) {
        return peaks[a] - peaks[b];
      });
    }
    function peak(series) {
      var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
      while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
      return j;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/ascending.js
var require_ascending = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/ascending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.sum = sum;
    var _none = _interopRequireDefault(require_none2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series) {
      var sums = series.map(sum);
      return (0, _none.default)(series).sort(function(a, b) {
        return sums[a] - sums[b];
      });
    }
    function sum(series) {
      var s = 0, i = -1, n = series.length, v;
      while (++i < n) if (v = +series[i][1]) s += v;
      return s;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/descending.js
var require_descending2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/descending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _ascending = _interopRequireDefault(require_ascending());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series) {
      return (0, _ascending.default)(series).reverse();
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/insideOut.js
var require_insideOut = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/insideOut.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _appearance = _interopRequireDefault(require_appearance());
    var _ascending = require_ascending();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series) {
      var n = series.length, i, j, sums = series.map(_ascending.sum), order = (0, _appearance.default)(series), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = order[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/order/reverse.js
var require_reverse = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/order/reverse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _none = _interopRequireDefault(require_none2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(series) {
      return (0, _none.default)(series).reverse();
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-shape/src/index.js
var require_src2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-shape/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "arc", {
      enumerable: true,
      get: function() {
        return _arc.default;
      }
    });
    Object.defineProperty(exports, "area", {
      enumerable: true,
      get: function() {
        return _area.default;
      }
    });
    Object.defineProperty(exports, "areaRadial", {
      enumerable: true,
      get: function() {
        return _areaRadial.default;
      }
    });
    Object.defineProperty(exports, "curveBasis", {
      enumerable: true,
      get: function() {
        return _basis.default;
      }
    });
    Object.defineProperty(exports, "curveBasisClosed", {
      enumerable: true,
      get: function() {
        return _basisClosed.default;
      }
    });
    Object.defineProperty(exports, "curveBasisOpen", {
      enumerable: true,
      get: function() {
        return _basisOpen.default;
      }
    });
    Object.defineProperty(exports, "curveBumpX", {
      enumerable: true,
      get: function() {
        return _bump.bumpX;
      }
    });
    Object.defineProperty(exports, "curveBumpY", {
      enumerable: true,
      get: function() {
        return _bump.bumpY;
      }
    });
    Object.defineProperty(exports, "curveBundle", {
      enumerable: true,
      get: function() {
        return _bundle.default;
      }
    });
    Object.defineProperty(exports, "curveCardinal", {
      enumerable: true,
      get: function() {
        return _cardinal.default;
      }
    });
    Object.defineProperty(exports, "curveCardinalClosed", {
      enumerable: true,
      get: function() {
        return _cardinalClosed.default;
      }
    });
    Object.defineProperty(exports, "curveCardinalOpen", {
      enumerable: true,
      get: function() {
        return _cardinalOpen.default;
      }
    });
    Object.defineProperty(exports, "curveCatmullRom", {
      enumerable: true,
      get: function() {
        return _catmullRom.default;
      }
    });
    Object.defineProperty(exports, "curveCatmullRomClosed", {
      enumerable: true,
      get: function() {
        return _catmullRomClosed.default;
      }
    });
    Object.defineProperty(exports, "curveCatmullRomOpen", {
      enumerable: true,
      get: function() {
        return _catmullRomOpen.default;
      }
    });
    Object.defineProperty(exports, "curveLinear", {
      enumerable: true,
      get: function() {
        return _linear.default;
      }
    });
    Object.defineProperty(exports, "curveLinearClosed", {
      enumerable: true,
      get: function() {
        return _linearClosed.default;
      }
    });
    Object.defineProperty(exports, "curveMonotoneX", {
      enumerable: true,
      get: function() {
        return _monotone.monotoneX;
      }
    });
    Object.defineProperty(exports, "curveMonotoneY", {
      enumerable: true,
      get: function() {
        return _monotone.monotoneY;
      }
    });
    Object.defineProperty(exports, "curveNatural", {
      enumerable: true,
      get: function() {
        return _natural.default;
      }
    });
    Object.defineProperty(exports, "curveStep", {
      enumerable: true,
      get: function() {
        return _step.default;
      }
    });
    Object.defineProperty(exports, "curveStepAfter", {
      enumerable: true,
      get: function() {
        return _step.stepAfter;
      }
    });
    Object.defineProperty(exports, "curveStepBefore", {
      enumerable: true,
      get: function() {
        return _step.stepBefore;
      }
    });
    Object.defineProperty(exports, "line", {
      enumerable: true,
      get: function() {
        return _line.default;
      }
    });
    Object.defineProperty(exports, "lineRadial", {
      enumerable: true,
      get: function() {
        return _lineRadial.default;
      }
    });
    Object.defineProperty(exports, "link", {
      enumerable: true,
      get: function() {
        return _link.link;
      }
    });
    Object.defineProperty(exports, "linkHorizontal", {
      enumerable: true,
      get: function() {
        return _link.linkHorizontal;
      }
    });
    Object.defineProperty(exports, "linkRadial", {
      enumerable: true,
      get: function() {
        return _link.linkRadial;
      }
    });
    Object.defineProperty(exports, "linkVertical", {
      enumerable: true,
      get: function() {
        return _link.linkVertical;
      }
    });
    Object.defineProperty(exports, "pie", {
      enumerable: true,
      get: function() {
        return _pie.default;
      }
    });
    Object.defineProperty(exports, "pointRadial", {
      enumerable: true,
      get: function() {
        return _pointRadial.default;
      }
    });
    Object.defineProperty(exports, "radialArea", {
      enumerable: true,
      get: function() {
        return _areaRadial.default;
      }
    });
    Object.defineProperty(exports, "radialLine", {
      enumerable: true,
      get: function() {
        return _lineRadial.default;
      }
    });
    Object.defineProperty(exports, "stack", {
      enumerable: true,
      get: function() {
        return _stack.default;
      }
    });
    Object.defineProperty(exports, "stackOffsetDiverging", {
      enumerable: true,
      get: function() {
        return _diverging.default;
      }
    });
    Object.defineProperty(exports, "stackOffsetExpand", {
      enumerable: true,
      get: function() {
        return _expand.default;
      }
    });
    Object.defineProperty(exports, "stackOffsetNone", {
      enumerable: true,
      get: function() {
        return _none.default;
      }
    });
    Object.defineProperty(exports, "stackOffsetSilhouette", {
      enumerable: true,
      get: function() {
        return _silhouette.default;
      }
    });
    Object.defineProperty(exports, "stackOffsetWiggle", {
      enumerable: true,
      get: function() {
        return _wiggle.default;
      }
    });
    Object.defineProperty(exports, "stackOrderAppearance", {
      enumerable: true,
      get: function() {
        return _appearance.default;
      }
    });
    Object.defineProperty(exports, "stackOrderAscending", {
      enumerable: true,
      get: function() {
        return _ascending.default;
      }
    });
    Object.defineProperty(exports, "stackOrderDescending", {
      enumerable: true,
      get: function() {
        return _descending.default;
      }
    });
    Object.defineProperty(exports, "stackOrderInsideOut", {
      enumerable: true,
      get: function() {
        return _insideOut.default;
      }
    });
    Object.defineProperty(exports, "stackOrderNone", {
      enumerable: true,
      get: function() {
        return _none2.default;
      }
    });
    Object.defineProperty(exports, "stackOrderReverse", {
      enumerable: true,
      get: function() {
        return _reverse.default;
      }
    });
    Object.defineProperty(exports, "symbol", {
      enumerable: true,
      get: function() {
        return _symbol.default;
      }
    });
    Object.defineProperty(exports, "symbolAsterisk", {
      enumerable: true,
      get: function() {
        return _asterisk.default;
      }
    });
    Object.defineProperty(exports, "symbolCircle", {
      enumerable: true,
      get: function() {
        return _circle.default;
      }
    });
    Object.defineProperty(exports, "symbolCross", {
      enumerable: true,
      get: function() {
        return _cross.default;
      }
    });
    Object.defineProperty(exports, "symbolDiamond", {
      enumerable: true,
      get: function() {
        return _diamond.default;
      }
    });
    Object.defineProperty(exports, "symbolDiamond2", {
      enumerable: true,
      get: function() {
        return _diamond2.default;
      }
    });
    Object.defineProperty(exports, "symbolPlus", {
      enumerable: true,
      get: function() {
        return _plus.default;
      }
    });
    Object.defineProperty(exports, "symbolSquare", {
      enumerable: true,
      get: function() {
        return _square.default;
      }
    });
    Object.defineProperty(exports, "symbolSquare2", {
      enumerable: true,
      get: function() {
        return _square2.default;
      }
    });
    Object.defineProperty(exports, "symbolStar", {
      enumerable: true,
      get: function() {
        return _star.default;
      }
    });
    Object.defineProperty(exports, "symbolTriangle", {
      enumerable: true,
      get: function() {
        return _triangle.default;
      }
    });
    Object.defineProperty(exports, "symbolTriangle2", {
      enumerable: true,
      get: function() {
        return _triangle2.default;
      }
    });
    Object.defineProperty(exports, "symbolWye", {
      enumerable: true,
      get: function() {
        return _wye.default;
      }
    });
    Object.defineProperty(exports, "symbolX", {
      enumerable: true,
      get: function() {
        return _x.default;
      }
    });
    Object.defineProperty(exports, "symbols", {
      enumerable: true,
      get: function() {
        return _symbol.symbolsFill;
      }
    });
    Object.defineProperty(exports, "symbolsFill", {
      enumerable: true,
      get: function() {
        return _symbol.symbolsFill;
      }
    });
    Object.defineProperty(exports, "symbolsStroke", {
      enumerable: true,
      get: function() {
        return _symbol.symbolsStroke;
      }
    });
    var _arc = _interopRequireDefault(require_arc());
    var _area = _interopRequireDefault(require_area());
    var _line = _interopRequireDefault(require_line());
    var _pie = _interopRequireDefault(require_pie());
    var _areaRadial = _interopRequireDefault(require_areaRadial());
    var _lineRadial = _interopRequireDefault(require_lineRadial());
    var _pointRadial = _interopRequireDefault(require_pointRadial());
    var _link = require_link();
    var _symbol = _interopRequireWildcard(require_symbol());
    var _asterisk = _interopRequireDefault(require_asterisk());
    var _circle = _interopRequireDefault(require_circle());
    var _cross = _interopRequireDefault(require_cross());
    var _diamond = _interopRequireDefault(require_diamond());
    var _diamond2 = _interopRequireDefault(require_diamond2());
    var _plus = _interopRequireDefault(require_plus());
    var _square = _interopRequireDefault(require_square());
    var _square2 = _interopRequireDefault(require_square2());
    var _star = _interopRequireDefault(require_star());
    var _triangle = _interopRequireDefault(require_triangle());
    var _triangle2 = _interopRequireDefault(require_triangle2());
    var _wye = _interopRequireDefault(require_wye());
    var _x = _interopRequireDefault(require_x());
    var _basisClosed = _interopRequireDefault(require_basisClosed());
    var _basisOpen = _interopRequireDefault(require_basisOpen());
    var _basis = _interopRequireDefault(require_basis());
    var _bump = require_bump();
    var _bundle = _interopRequireDefault(require_bundle());
    var _cardinalClosed = _interopRequireDefault(require_cardinalClosed());
    var _cardinalOpen = _interopRequireDefault(require_cardinalOpen());
    var _cardinal = _interopRequireDefault(require_cardinal());
    var _catmullRomClosed = _interopRequireDefault(require_catmullRomClosed());
    var _catmullRomOpen = _interopRequireDefault(require_catmullRomOpen());
    var _catmullRom = _interopRequireDefault(require_catmullRom());
    var _linearClosed = _interopRequireDefault(require_linearClosed());
    var _linear = _interopRequireDefault(require_linear());
    var _monotone = require_monotone();
    var _natural = _interopRequireDefault(require_natural());
    var _step = _interopRequireWildcard(require_step());
    var _stack = _interopRequireDefault(require_stack());
    var _expand = _interopRequireDefault(require_expand());
    var _diverging = _interopRequireDefault(require_diverging());
    var _none = _interopRequireDefault(require_none());
    var _silhouette = _interopRequireDefault(require_silhouette());
    var _wiggle = _interopRequireDefault(require_wiggle());
    var _appearance = _interopRequireDefault(require_appearance());
    var _ascending = _interopRequireDefault(require_ascending());
    var _descending = _interopRequireDefault(require_descending2());
    var _insideOut = _interopRequireDefault(require_insideOut());
    var _none2 = _interopRequireDefault(require_none2());
    var _reverse = _interopRequireDefault(require_reverse());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/victory-vendor/lib/d3-shape.js
var require_d3_shape = __commonJS({
  "node_modules/victory-vendor/lib/d3-shape.js"(exports, module) {
    module.exports = require_src2();
  }
});

// node_modules/recharts/lib/shape/Symbols.js
var require_Symbols = __commonJS({
  "node_modules/recharts/lib/shape/Symbols.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Symbols = void 0;
    var _react = _interopRequireDefault(require_react());
    var _upperFirst = _interopRequireDefault(require_upperFirst());
    var _d3Shape = require_d3_shape();
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["type", "size", "sizeType"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    var symbolFactories = {
      symbolCircle: _d3Shape.symbolCircle,
      symbolCross: _d3Shape.symbolCross,
      symbolDiamond: _d3Shape.symbolDiamond,
      symbolSquare: _d3Shape.symbolSquare,
      symbolStar: _d3Shape.symbolStar,
      symbolTriangle: _d3Shape.symbolTriangle,
      symbolWye: _d3Shape.symbolWye
    };
    var RADIAN = Math.PI / 180;
    var getSymbolFactory = function getSymbolFactory2(type) {
      var name = "symbol".concat((0, _upperFirst["default"])(type));
      return symbolFactories[name] || _d3Shape.symbolCircle;
    };
    var calculateAreaSize = function calculateAreaSize2(size, sizeType, type) {
      if (sizeType === "area") {
        return size;
      }
      switch (type) {
        case "cross":
          return 5 * size * size / 9;
        case "diamond":
          return 0.5 * size * size / Math.sqrt(3);
        case "square":
          return size * size;
        case "star": {
          var angle = 18 * RADIAN;
          return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));
        }
        case "triangle":
          return Math.sqrt(3) * size * size / 4;
        case "wye":
          return (21 - 10 * Math.sqrt(3)) * size * size / 8;
        default:
          return Math.PI * size * size / 4;
      }
    };
    var registerSymbol = function registerSymbol2(key, factory) {
      symbolFactories["symbol".concat((0, _upperFirst["default"])(key))] = factory;
    };
    var Symbols = exports.Symbols = function Symbols2(_ref) {
      var _ref$type = _ref.type, type = _ref$type === void 0 ? "circle" : _ref$type, _ref$size = _ref.size, size = _ref$size === void 0 ? 64 : _ref$size, _ref$sizeType = _ref.sizeType, sizeType = _ref$sizeType === void 0 ? "area" : _ref$sizeType, rest = _objectWithoutProperties(_ref, _excluded);
      var props = _objectSpread(_objectSpread({}, rest), {}, {
        type,
        size,
        sizeType
      });
      var getPath = function getPath2() {
        var symbolFactory = getSymbolFactory(type);
        var symbol = (0, _d3Shape.symbol)().type(symbolFactory).size(calculateAreaSize(size, sizeType, type));
        return symbol();
      };
      var className = props.className, cx = props.cx, cy = props.cy;
      var filteredProps = (0, _ReactUtils.filterProps)(props, true);
      if (cx === +cx && cy === +cy && size === +size) {
        return _react["default"].createElement("path", _extends({}, filteredProps, {
          className: (0, _clsx["default"])("recharts-symbols", className),
          transform: "translate(".concat(cx, ", ").concat(cy, ")"),
          d: getPath()
        }));
      }
      return null;
    };
    Symbols.registerSymbol = registerSymbol;
  }
});

// node_modules/recharts/lib/component/DefaultLegendContent.js
var require_DefaultLegendContent = __commonJS({
  "node_modules/recharts/lib/component/DefaultLegendContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DefaultLegendContent = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx2 = _interopRequireDefault(require_clsx());
    var _LogUtils = require_LogUtils();
    var _Surface = require_Surface();
    var _Symbols = require_Symbols();
    var _types = require_types();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var SIZE = 32;
    var DefaultLegendContent = exports.DefaultLegendContent = function(_PureComponent) {
      function DefaultLegendContent2() {
        _classCallCheck(this, DefaultLegendContent2);
        return _callSuper(this, DefaultLegendContent2, arguments);
      }
      _inherits(DefaultLegendContent2, _PureComponent);
      return _createClass(DefaultLegendContent2, [{
        key: "renderIcon",
        value: (
          /**
           * Render the path of icon
           * @param {Object} data Data of each legend item
           * @return {String} Path element
           */
          function renderIcon(data) {
            var inactiveColor = this.props.inactiveColor;
            var halfSize = SIZE / 2;
            var sixthSize = SIZE / 6;
            var thirdSize = SIZE / 3;
            var color = data.inactive ? inactiveColor : data.color;
            if (data.type === "plainline") {
              return _react["default"].createElement("line", {
                strokeWidth: 4,
                fill: "none",
                stroke: color,
                strokeDasharray: data.payload.strokeDasharray,
                x1: 0,
                y1: halfSize,
                x2: SIZE,
                y2: halfSize,
                className: "recharts-legend-icon"
              });
            }
            if (data.type === "line") {
              return _react["default"].createElement("path", {
                strokeWidth: 4,
                fill: "none",
                stroke: color,
                d: "M0,".concat(halfSize, "h").concat(thirdSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(2 * thirdSize, ",").concat(halfSize, "\n            H").concat(SIZE, "M").concat(2 * thirdSize, ",").concat(halfSize, "\n            A").concat(sixthSize, ",").concat(sixthSize, ",0,1,1,").concat(thirdSize, ",").concat(halfSize),
                className: "recharts-legend-icon"
              });
            }
            if (data.type === "rect") {
              return _react["default"].createElement("path", {
                stroke: "none",
                fill: color,
                d: "M0,".concat(SIZE / 8, "h").concat(SIZE, "v").concat(SIZE * 3 / 4, "h").concat(-SIZE, "z"),
                className: "recharts-legend-icon"
              });
            }
            if (_react["default"].isValidElement(data.legendIcon)) {
              var iconProps = _objectSpread({}, data);
              delete iconProps.legendIcon;
              return _react["default"].cloneElement(data.legendIcon, iconProps);
            }
            return _react["default"].createElement(_Symbols.Symbols, {
              fill: color,
              cx: halfSize,
              cy: halfSize,
              size: SIZE,
              sizeType: "diameter",
              type: data.type
            });
          }
        )
        /**
         * Draw items of legend
         * @return {ReactElement} Items
         */
      }, {
        key: "renderItems",
        value: function renderItems() {
          var _this = this;
          var _this$props = this.props, payload = _this$props.payload, iconSize = _this$props.iconSize, layout = _this$props.layout, formatter = _this$props.formatter, inactiveColor = _this$props.inactiveColor;
          var viewBox = {
            x: 0,
            y: 0,
            width: SIZE,
            height: SIZE
          };
          var itemStyle = {
            display: layout === "horizontal" ? "inline-block" : "block",
            marginRight: 10
          };
          var svgStyle = {
            display: "inline-block",
            verticalAlign: "middle",
            marginRight: 4
          };
          return payload.map(function(entry, i) {
            var finalFormatter = entry.formatter || formatter;
            var className = (0, _clsx2["default"])(_defineProperty(_defineProperty({
              "recharts-legend-item": true
            }, "legend-item-".concat(i), true), "inactive", entry.inactive));
            if (entry.type === "none") {
              return null;
            }
            var entryValue = !(0, _isFunction["default"])(entry.value) ? entry.value : null;
            (0, _LogUtils.warn)(
              !(0, _isFunction["default"])(entry.value),
              `The name property is also required when using a function for the dataKey of a chart's cartesian components. Ex: <Bar name="Name of my Data"/>`
              // eslint-disable-line max-len
            );
            var color = entry.inactive ? inactiveColor : entry.color;
            return _react["default"].createElement("li", _extends({
              className,
              style: itemStyle,
              key: "legend-item-".concat(i)
            }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), _react["default"].createElement(_Surface.Surface, {
              width: iconSize,
              height: iconSize,
              viewBox,
              style: svgStyle
            }, _this.renderIcon(entry)), _react["default"].createElement("span", {
              className: "recharts-legend-item-text",
              style: {
                color
              }
            }, finalFormatter ? finalFormatter(entryValue, entry, i) : entryValue));
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, payload = _this$props2.payload, layout = _this$props2.layout, align = _this$props2.align;
          if (!payload || !payload.length) {
            return null;
          }
          var finalStyle = {
            padding: 0,
            margin: 0,
            textAlign: layout === "horizontal" ? align : "left"
          };
          return _react["default"].createElement("ul", {
            className: "recharts-default-legend",
            style: finalStyle
          }, this.renderItems());
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(DefaultLegendContent, "displayName", "Legend");
    _defineProperty(DefaultLegendContent, "defaultProps", {
      iconSize: 14,
      layout: "horizontal",
      align: "center",
      verticalAlign: "middle",
      inactiveColor: "#ccc"
    });
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER2 = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER2 : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER2 = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView2 = getNative(root, "DataView");
    module.exports = DataView2;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView2 = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/identity.js
var require_identity2 = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity2();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "node_modules/lodash/_baseIsNaN.js"(exports, module) {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "node_modules/lodash/_strictIndexOf.js"(exports, module) {
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "node_modules/lodash/_baseIndexOf.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// node_modules/lodash/_arrayIncludes.js
var require_arrayIncludes = __commonJS({
  "node_modules/lodash/_arrayIncludes.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    module.exports = arrayIncludes;
  }
});

// node_modules/lodash/_arrayIncludesWith.js
var require_arrayIncludesWith = __commonJS({
  "node_modules/lodash/_arrayIncludesWith.js"(exports, module) {
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    module.exports = arrayIncludesWith;
  }
});

// node_modules/lodash/noop.js
var require_noop2 = __commonJS({
  "node_modules/lodash/noop.js"(exports, module) {
    function noop() {
    }
    module.exports = noop;
  }
});

// node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "node_modules/lodash/_createSet.js"(exports, module) {
    var Set2 = require_Set();
    var noop = require_noop2();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set2(values);
    };
    module.exports = createSet;
  }
});

// node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "node_modules/lodash/_baseUniq.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// node_modules/lodash/uniqBy.js
var require_uniqBy = __commonJS({
  "node_modules/lodash/uniqBy.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var baseUniq = require_baseUniq();
    function uniqBy(array, iteratee) {
      return array && array.length ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }
    module.exports = uniqBy;
  }
});

// node_modules/recharts/lib/util/payload/getUniqPayload.js
var require_getUniqPayload = __commonJS({
  "node_modules/recharts/lib/util/payload/getUniqPayload.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getUniqPayload = getUniqPayload;
    var _uniqBy = _interopRequireDefault(require_uniqBy());
    var _isFunction = _interopRequireDefault(require_isFunction());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function getUniqPayload(payload, option, defaultUniqBy) {
      if (option === true) {
        return (0, _uniqBy["default"])(payload, defaultUniqBy);
      }
      if ((0, _isFunction["default"])(option)) {
        return (0, _uniqBy["default"])(payload, option);
      }
      return payload;
    }
  }
});

// node_modules/recharts/lib/component/Legend.js
var require_Legend = __commonJS({
  "node_modules/recharts/lib/component/Legend.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Legend = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _DefaultLegendContent = require_DefaultLegendContent();
    var _DataUtils = require_DataUtils();
    var _getUniqPayload = require_getUniqPayload();
    var _excluded = ["ref"];
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function defaultUniqBy(entry) {
      return entry.value;
    }
    function renderContent(content, props) {
      if (_react["default"].isValidElement(content)) {
        return _react["default"].cloneElement(content, props);
      }
      if (typeof content === "function") {
        return _react["default"].createElement(content, props);
      }
      var ref = props.ref, otherProps = _objectWithoutProperties(props, _excluded);
      return _react["default"].createElement(_DefaultLegendContent.DefaultLegendContent, otherProps);
    }
    var EPS = 1;
    var Legend = exports.Legend = function(_PureComponent) {
      function Legend2() {
        var _this;
        _classCallCheck(this, Legend2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Legend2, [].concat(args));
        _defineProperty(_this, "lastBoundingBox", {
          width: -1,
          height: -1
        });
        return _this;
      }
      _inherits(Legend2, _PureComponent);
      return _createClass(Legend2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.updateBBox();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          this.updateBBox();
        }
      }, {
        key: "getBBox",
        value: function getBBox() {
          if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
            var box = this.wrapperNode.getBoundingClientRect();
            box.height = this.wrapperNode.offsetHeight;
            box.width = this.wrapperNode.offsetWidth;
            return box;
          }
          return null;
        }
      }, {
        key: "updateBBox",
        value: function updateBBox() {
          var onBBoxUpdate = this.props.onBBoxUpdate;
          var box = this.getBBox();
          if (box) {
            if (Math.abs(box.width - this.lastBoundingBox.width) > EPS || Math.abs(box.height - this.lastBoundingBox.height) > EPS) {
              this.lastBoundingBox.width = box.width;
              this.lastBoundingBox.height = box.height;
              if (onBBoxUpdate) {
                onBBoxUpdate(box);
              }
            }
          } else if (this.lastBoundingBox.width !== -1 || this.lastBoundingBox.height !== -1) {
            this.lastBoundingBox.width = -1;
            this.lastBoundingBox.height = -1;
            if (onBBoxUpdate) {
              onBBoxUpdate(null);
            }
          }
        }
      }, {
        key: "getBBoxSnapshot",
        value: function getBBoxSnapshot() {
          if (this.lastBoundingBox.width >= 0 && this.lastBoundingBox.height >= 0) {
            return _objectSpread({}, this.lastBoundingBox);
          }
          return {
            width: 0,
            height: 0
          };
        }
      }, {
        key: "getDefaultPosition",
        value: function getDefaultPosition(style) {
          var _this$props = this.props, layout = _this$props.layout, align = _this$props.align, verticalAlign = _this$props.verticalAlign, margin = _this$props.margin, chartWidth = _this$props.chartWidth, chartHeight = _this$props.chartHeight;
          var hPos, vPos;
          if (!style || (style.left === void 0 || style.left === null) && (style.right === void 0 || style.right === null)) {
            if (align === "center" && layout === "vertical") {
              var box = this.getBBoxSnapshot();
              hPos = {
                left: ((chartWidth || 0) - box.width) / 2
              };
            } else {
              hPos = align === "right" ? {
                right: margin && margin.right || 0
              } : {
                left: margin && margin.left || 0
              };
            }
          }
          if (!style || (style.top === void 0 || style.top === null) && (style.bottom === void 0 || style.bottom === null)) {
            if (verticalAlign === "middle") {
              var _box = this.getBBoxSnapshot();
              vPos = {
                top: ((chartHeight || 0) - _box.height) / 2
              };
            } else {
              vPos = verticalAlign === "bottom" ? {
                bottom: margin && margin.bottom || 0
              } : {
                top: margin && margin.top || 0
              };
            }
          }
          return _objectSpread(_objectSpread({}, hPos), vPos);
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _this$props2 = this.props, content = _this$props2.content, width = _this$props2.width, height = _this$props2.height, wrapperStyle = _this$props2.wrapperStyle, payloadUniqBy = _this$props2.payloadUniqBy, payload = _this$props2.payload;
          var outerStyle = _objectSpread(_objectSpread({
            position: "absolute",
            width: width || "auto",
            height: height || "auto"
          }, this.getDefaultPosition(wrapperStyle)), wrapperStyle);
          return _react["default"].createElement("div", {
            className: "recharts-legend-wrapper",
            style: outerStyle,
            ref: function ref(node) {
              _this2.wrapperNode = node;
            }
          }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {
            payload: (0, _getUniqPayload.getUniqPayload)(payload, payloadUniqBy, defaultUniqBy)
          })));
        }
      }], [{
        key: "getWithHeight",
        value: function getWithHeight(item, chartWidth) {
          var _this$defaultProps$it = _objectSpread(_objectSpread({}, this.defaultProps), item.props), layout = _this$defaultProps$it.layout;
          if (layout === "vertical" && (0, _DataUtils.isNumber)(item.props.height)) {
            return {
              height: item.props.height
            };
          }
          if (layout === "horizontal") {
            return {
              width: item.props.width || chartWidth
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Legend, "displayName", "Legend");
    _defineProperty(Legend, "defaultProps", {
      iconSize: 14,
      layout: "horizontal",
      align: "center",
      verticalAlign: "bottom"
    });
  }
});

// node_modules/lodash/_isFlattenable.js
var require_isFlattenable = __commonJS({
  "node_modules/lodash/_isFlattenable.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    module.exports = isFlattenable;
  }
});

// node_modules/lodash/_baseFlatten.js
var require_baseFlatten = __commonJS({
  "node_modules/lodash/_baseFlatten.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isFlattenable = require_isFlattenable();
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    module.exports = baseFlatten;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module) {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/_baseSortBy.js
var require_baseSortBy = __commonJS({
  "node_modules/lodash/_baseSortBy.js"(exports, module) {
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    module.exports = baseSortBy;
  }
});

// node_modules/lodash/_compareAscending.js
var require_compareAscending = __commonJS({
  "node_modules/lodash/_compareAscending.js"(exports, module) {
    var isSymbol = require_isSymbol();
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }
    module.exports = compareAscending;
  }
});

// node_modules/lodash/_compareMultiple.js
var require_compareMultiple = __commonJS({
  "node_modules/lodash/_compareMultiple.js"(exports, module) {
    var compareAscending = require_compareAscending();
    function compareMultiple(object, other, orders) {
      var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == "desc" ? -1 : 1);
        }
      }
      return object.index - other.index;
    }
    module.exports = compareMultiple;
  }
});

// node_modules/lodash/_baseOrderBy.js
var require_baseOrderBy = __commonJS({
  "node_modules/lodash/_baseOrderBy.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseGet = require_baseGet();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var baseSortBy = require_baseSortBy();
    var baseUnary = require_baseUnary();
    var compareMultiple = require_compareMultiple();
    var identity = require_identity2();
    var isArray = require_isArray();
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            };
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }
      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
      var result = baseMap(collection, function(value, key, collection2) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { "criteria": criteria, "index": ++index, "value": value };
      });
      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    module.exports = baseOrderBy;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant2 = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    var constant = require_constant2();
    var defineProperty = require_defineProperty();
    var identity = require_identity2();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_baseRest.js
var require_baseRest = __commonJS({
  "node_modules/lodash/_baseRest.js"(exports, module) {
    var identity = require_identity2();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + "");
    }
    module.exports = baseRest;
  }
});

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/sortBy.js
var require_sortBy = __commonJS({
  "node_modules/lodash/sortBy.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var baseOrderBy = require_baseOrderBy();
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    module.exports = sortBy;
  }
});

// node_modules/recharts/lib/component/DefaultTooltipContent.js
var require_DefaultTooltipContent = __commonJS({
  "node_modules/recharts/lib/component/DefaultTooltipContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DefaultTooltipContent = void 0;
    var _react = _interopRequireDefault(require_react());
    var _sortBy = _interopRequireDefault(require_sortBy());
    var _isNil = _interopRequireDefault(require_isNil());
    var _clsx = _interopRequireDefault(require_clsx());
    var _DataUtils = require_DataUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function defaultFormatter(value) {
      return Array.isArray(value) && (0, _DataUtils.isNumOrStr)(value[0]) && (0, _DataUtils.isNumOrStr)(value[1]) ? value.join(" ~ ") : value;
    }
    var DefaultTooltipContent = exports.DefaultTooltipContent = function DefaultTooltipContent2(props) {
      var _props$separator = props.separator, separator = _props$separator === void 0 ? " : " : _props$separator, _props$contentStyle = props.contentStyle, contentStyle = _props$contentStyle === void 0 ? {} : _props$contentStyle, _props$itemStyle = props.itemStyle, itemStyle = _props$itemStyle === void 0 ? {} : _props$itemStyle, _props$labelStyle = props.labelStyle, labelStyle = _props$labelStyle === void 0 ? {} : _props$labelStyle, payload = props.payload, formatter = props.formatter, itemSorter = props.itemSorter, wrapperClassName = props.wrapperClassName, labelClassName = props.labelClassName, label = props.label, labelFormatter = props.labelFormatter, _props$accessibilityL = props.accessibilityLayer, accessibilityLayer = _props$accessibilityL === void 0 ? false : _props$accessibilityL;
      var renderContent = function renderContent2() {
        if (payload && payload.length) {
          var listStyle = {
            padding: 0,
            margin: 0
          };
          var items = (itemSorter ? (0, _sortBy["default"])(payload, itemSorter) : payload).map(function(entry, i) {
            if (entry.type === "none") {
              return null;
            }
            var finalItemStyle = _objectSpread({
              display: "block",
              paddingTop: 4,
              paddingBottom: 4,
              color: entry.color || "#000"
            }, itemStyle);
            var finalFormatter = entry.formatter || formatter || defaultFormatter;
            var value = entry.value, name = entry.name;
            var finalValue = value;
            var finalName = name;
            if (finalFormatter && finalValue != null && finalName != null) {
              var formatted = finalFormatter(value, name, entry, i, payload);
              if (Array.isArray(formatted)) {
                var _formatted = _slicedToArray(formatted, 2);
                finalValue = _formatted[0];
                finalName = _formatted[1];
              } else {
                finalValue = formatted;
              }
            }
            return (
              // eslint-disable-next-line react/no-array-index-key
              _react["default"].createElement("li", {
                className: "recharts-tooltip-item",
                key: "tooltip-item-".concat(i),
                style: finalItemStyle
              }, (0, _DataUtils.isNumOrStr)(finalName) ? _react["default"].createElement("span", {
                className: "recharts-tooltip-item-name"
              }, finalName) : null, (0, _DataUtils.isNumOrStr)(finalName) ? _react["default"].createElement("span", {
                className: "recharts-tooltip-item-separator"
              }, separator) : null, _react["default"].createElement("span", {
                className: "recharts-tooltip-item-value"
              }, finalValue), _react["default"].createElement("span", {
                className: "recharts-tooltip-item-unit"
              }, entry.unit || ""))
            );
          });
          return _react["default"].createElement("ul", {
            className: "recharts-tooltip-item-list",
            style: listStyle
          }, items);
        }
        return null;
      };
      var finalStyle = _objectSpread({
        margin: 0,
        padding: 10,
        backgroundColor: "#fff",
        border: "1px solid #ccc",
        whiteSpace: "nowrap"
      }, contentStyle);
      var finalLabelStyle = _objectSpread({
        margin: 0
      }, labelStyle);
      var hasLabel = !(0, _isNil["default"])(label);
      var finalLabel = hasLabel ? label : "";
      var wrapperCN = (0, _clsx["default"])("recharts-default-tooltip", wrapperClassName);
      var labelCN = (0, _clsx["default"])("recharts-tooltip-label", labelClassName);
      if (hasLabel && labelFormatter && payload !== void 0 && payload !== null) {
        finalLabel = labelFormatter(label, payload);
      }
      var accessibilityAttributes = accessibilityLayer ? {
        role: "status",
        "aria-live": "assertive"
      } : {};
      return _react["default"].createElement("div", _extends({
        className: wrapperCN,
        style: finalStyle
      }, accessibilityAttributes), _react["default"].createElement("p", {
        className: labelCN,
        style: finalLabelStyle
      }, _react["default"].isValidElement(finalLabel) ? finalLabel : "".concat(finalLabel)), renderContent());
    };
  }
});

// node_modules/recharts/lib/util/tooltip/translate.js
var require_translate = __commonJS({
  "node_modules/recharts/lib/util/tooltip/translate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getTooltipCSSClassName = getTooltipCSSClassName;
    exports.getTooltipTranslate = getTooltipTranslate;
    exports.getTooltipTranslateXY = getTooltipTranslateXY;
    exports.getTransformStyle = getTransformStyle;
    var _clsx2 = _interopRequireDefault(require_clsx());
    var _DataUtils = require_DataUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var CSS_CLASS_PREFIX = "recharts-tooltip-wrapper";
    var TOOLTIP_HIDDEN = {
      visibility: "hidden"
    };
    function getTooltipCSSClassName(_ref) {
      var coordinate = _ref.coordinate, translateX = _ref.translateX, translateY = _ref.translateY;
      return (0, _clsx2["default"])(CSS_CLASS_PREFIX, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(CSS_CLASS_PREFIX, "-right"), (0, _DataUtils.isNumber)(translateX) && coordinate && (0, _DataUtils.isNumber)(coordinate.x) && translateX >= coordinate.x), "".concat(CSS_CLASS_PREFIX, "-left"), (0, _DataUtils.isNumber)(translateX) && coordinate && (0, _DataUtils.isNumber)(coordinate.x) && translateX < coordinate.x), "".concat(CSS_CLASS_PREFIX, "-bottom"), (0, _DataUtils.isNumber)(translateY) && coordinate && (0, _DataUtils.isNumber)(coordinate.y) && translateY >= coordinate.y), "".concat(CSS_CLASS_PREFIX, "-top"), (0, _DataUtils.isNumber)(translateY) && coordinate && (0, _DataUtils.isNumber)(coordinate.y) && translateY < coordinate.y));
    }
    function getTooltipTranslateXY(_ref2) {
      var allowEscapeViewBox = _ref2.allowEscapeViewBox, coordinate = _ref2.coordinate, key = _ref2.key, offsetTopLeft = _ref2.offsetTopLeft, position = _ref2.position, reverseDirection = _ref2.reverseDirection, tooltipDimension = _ref2.tooltipDimension, viewBox = _ref2.viewBox, viewBoxDimension = _ref2.viewBoxDimension;
      if (position && (0, _DataUtils.isNumber)(position[key])) {
        return position[key];
      }
      var negative = coordinate[key] - tooltipDimension - offsetTopLeft;
      var positive = coordinate[key] + offsetTopLeft;
      if (allowEscapeViewBox[key]) {
        return reverseDirection[key] ? negative : positive;
      }
      if (reverseDirection[key]) {
        var _tooltipBoundary = negative;
        var _viewBoxBoundary = viewBox[key];
        if (_tooltipBoundary < _viewBoxBoundary) {
          return Math.max(positive, viewBox[key]);
        }
        return Math.max(negative, viewBox[key]);
      }
      var tooltipBoundary = positive + tooltipDimension;
      var viewBoxBoundary = viewBox[key] + viewBoxDimension;
      if (tooltipBoundary > viewBoxBoundary) {
        return Math.max(negative, viewBox[key]);
      }
      return Math.max(positive, viewBox[key]);
    }
    function getTransformStyle(_ref3) {
      var translateX = _ref3.translateX, translateY = _ref3.translateY, useTranslate3d = _ref3.useTranslate3d;
      return {
        transform: useTranslate3d ? "translate3d(".concat(translateX, "px, ").concat(translateY, "px, 0)") : "translate(".concat(translateX, "px, ").concat(translateY, "px)")
      };
    }
    function getTooltipTranslate(_ref4) {
      var allowEscapeViewBox = _ref4.allowEscapeViewBox, coordinate = _ref4.coordinate, offsetTopLeft = _ref4.offsetTopLeft, position = _ref4.position, reverseDirection = _ref4.reverseDirection, tooltipBox = _ref4.tooltipBox, useTranslate3d = _ref4.useTranslate3d, viewBox = _ref4.viewBox;
      var cssProperties, translateX, translateY;
      if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {
        translateX = getTooltipTranslateXY({
          allowEscapeViewBox,
          coordinate,
          key: "x",
          offsetTopLeft,
          position,
          reverseDirection,
          tooltipDimension: tooltipBox.width,
          viewBox,
          viewBoxDimension: viewBox.width
        });
        translateY = getTooltipTranslateXY({
          allowEscapeViewBox,
          coordinate,
          key: "y",
          offsetTopLeft,
          position,
          reverseDirection,
          tooltipDimension: tooltipBox.height,
          viewBox,
          viewBoxDimension: viewBox.height
        });
        cssProperties = getTransformStyle({
          translateX,
          translateY,
          useTranslate3d
        });
      } else {
        cssProperties = TOOLTIP_HIDDEN;
      }
      return {
        cssProperties,
        cssClasses: getTooltipCSSClassName({
          translateX,
          translateY,
          coordinate
        })
      };
    }
  }
});

// node_modules/recharts/lib/component/TooltipBoundingBox.js
var require_TooltipBoundingBox = __commonJS({
  "node_modules/recharts/lib/component/TooltipBoundingBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.TooltipBoundingBox = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _translate = require_translate();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var EPSILON = 1;
    var TooltipBoundingBox = exports.TooltipBoundingBox = function(_PureComponent) {
      function TooltipBoundingBox2() {
        var _this;
        _classCallCheck(this, TooltipBoundingBox2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, TooltipBoundingBox2, [].concat(args));
        _defineProperty(_this, "state", {
          dismissed: false,
          dismissedAtCoordinate: {
            x: 0,
            y: 0
          },
          lastBoundingBox: {
            width: -1,
            height: -1
          }
        });
        _defineProperty(_this, "handleKeyDown", function(event) {
          if (event.key === "Escape") {
            var _this$props$coordinat, _this$props$coordinat2, _this$props$coordinat3, _this$props$coordinat4;
            _this.setState({
              dismissed: true,
              dismissedAtCoordinate: {
                x: (_this$props$coordinat = (_this$props$coordinat2 = _this.props.coordinate) === null || _this$props$coordinat2 === void 0 ? void 0 : _this$props$coordinat2.x) !== null && _this$props$coordinat !== void 0 ? _this$props$coordinat : 0,
                y: (_this$props$coordinat3 = (_this$props$coordinat4 = _this.props.coordinate) === null || _this$props$coordinat4 === void 0 ? void 0 : _this$props$coordinat4.y) !== null && _this$props$coordinat3 !== void 0 ? _this$props$coordinat3 : 0
              }
            });
          }
        });
        return _this;
      }
      _inherits(TooltipBoundingBox2, _PureComponent);
      return _createClass(TooltipBoundingBox2, [{
        key: "updateBBox",
        value: function updateBBox() {
          if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {
            var box = this.wrapperNode.getBoundingClientRect();
            if (Math.abs(box.width - this.state.lastBoundingBox.width) > EPSILON || Math.abs(box.height - this.state.lastBoundingBox.height) > EPSILON) {
              this.setState({
                lastBoundingBox: {
                  width: box.width,
                  height: box.height
                }
              });
            }
          } else if (this.state.lastBoundingBox.width !== -1 || this.state.lastBoundingBox.height !== -1) {
            this.setState({
              lastBoundingBox: {
                width: -1,
                height: -1
              }
            });
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          document.addEventListener("keydown", this.handleKeyDown);
          this.updateBBox();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          document.removeEventListener("keydown", this.handleKeyDown);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          var _this$props$coordinat5, _this$props$coordinat6;
          if (this.props.active) {
            this.updateBBox();
          }
          if (!this.state.dismissed) {
            return;
          }
          if (((_this$props$coordinat5 = this.props.coordinate) === null || _this$props$coordinat5 === void 0 ? void 0 : _this$props$coordinat5.x) !== this.state.dismissedAtCoordinate.x || ((_this$props$coordinat6 = this.props.coordinate) === null || _this$props$coordinat6 === void 0 ? void 0 : _this$props$coordinat6.y) !== this.state.dismissedAtCoordinate.y) {
            this.state.dismissed = false;
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, children = _this$props.children, coordinate = _this$props.coordinate, hasPayload = _this$props.hasPayload, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
          var _getTooltipTranslate = (0, _translate.getTooltipTranslate)({
            allowEscapeViewBox,
            coordinate,
            offsetTopLeft: offset,
            position,
            reverseDirection,
            tooltipBox: this.state.lastBoundingBox,
            useTranslate3d,
            viewBox
          }), cssClasses = _getTooltipTranslate.cssClasses, cssProperties = _getTooltipTranslate.cssProperties;
          var outerStyle = _objectSpread(_objectSpread({
            transition: isAnimationActive && active ? "transform ".concat(animationDuration, "ms ").concat(animationEasing) : void 0
          }, cssProperties), {}, {
            pointerEvents: "none",
            visibility: !this.state.dismissed && active && hasPayload ? "visible" : "hidden",
            position: "absolute",
            top: 0,
            left: 0
          }, wrapperStyle);
          return (
            // This element allow listening to the `Escape` key.
            // See https://github.com/recharts/recharts/pull/2925
            _react["default"].createElement("div", {
              tabIndex: -1,
              className: cssClasses,
              style: outerStyle,
              ref: function ref(node) {
                _this2.wrapperNode = node;
              }
            }, children)
          );
        }
      }]);
    }(_react.PureComponent);
  }
});

// node_modules/recharts/lib/util/Global.js
var require_Global = __commonJS({
  "node_modules/recharts/lib/util/Global.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Global = void 0;
    var parseIsSsrByDefault = function parseIsSsrByDefault2() {
      return !(typeof window !== "undefined" && window.document && window.document.createElement && window.setTimeout);
    };
    var Global = exports.Global = {
      isSsr: parseIsSsrByDefault(),
      get: function get(key) {
        return Global[key];
      },
      set: function set(key, value) {
        if (typeof key === "string") {
          Global[key] = value;
        } else {
          var keys = Object.keys(key);
          if (keys && keys.length) {
            keys.forEach(function(k) {
              Global[k] = key[k];
            });
          }
        }
      }
    };
  }
});

// node_modules/recharts/lib/component/Tooltip.js
var require_Tooltip = __commonJS({
  "node_modules/recharts/lib/component/Tooltip.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Tooltip = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _DefaultTooltipContent = require_DefaultTooltipContent();
    var _TooltipBoundingBox = require_TooltipBoundingBox();
    var _Global = require_Global();
    var _getUniqPayload = require_getUniqPayload();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function defaultUniqBy(entry) {
      return entry.dataKey;
    }
    function renderContent(content, props) {
      if (_react["default"].isValidElement(content)) {
        return _react["default"].cloneElement(content, props);
      }
      if (typeof content === "function") {
        return _react["default"].createElement(content, props);
      }
      return _react["default"].createElement(_DefaultTooltipContent.DefaultTooltipContent, props);
    }
    var Tooltip = exports.Tooltip = function(_PureComponent) {
      function Tooltip2() {
        _classCallCheck(this, Tooltip2);
        return _callSuper(this, Tooltip2, arguments);
      }
      _inherits(Tooltip2, _PureComponent);
      return _createClass(Tooltip2, [{
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, content = _this$props.content, coordinate = _this$props.coordinate, filterNull = _this$props.filterNull, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, payload = _this$props.payload, payloadUniqBy = _this$props.payloadUniqBy, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;
          var finalPayload = payload !== null && payload !== void 0 ? payload : [];
          if (filterNull && finalPayload.length) {
            finalPayload = (0, _getUniqPayload.getUniqPayload)(payload.filter(function(entry) {
              return entry.value != null && (entry.hide !== true || _this.props.includeHidden);
            }), payloadUniqBy, defaultUniqBy);
          }
          var hasPayload = finalPayload.length > 0;
          return _react["default"].createElement(_TooltipBoundingBox.TooltipBoundingBox, {
            allowEscapeViewBox,
            animationDuration,
            animationEasing,
            isAnimationActive,
            active,
            coordinate,
            hasPayload,
            offset,
            position,
            reverseDirection,
            useTranslate3d,
            viewBox,
            wrapperStyle
          }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {
            payload: finalPayload
          })));
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Tooltip, "displayName", "Tooltip");
    _defineProperty(Tooltip, "defaultProps", {
      accessibilityLayer: false,
      allowEscapeViewBox: {
        x: false,
        y: false
      },
      animationDuration: 400,
      animationEasing: "ease",
      contentStyle: {},
      coordinate: {
        x: 0,
        y: 0
      },
      cursor: true,
      cursorStyle: {},
      filterNull: true,
      isAnimationActive: !_Global.Global.isSsr,
      itemStyle: {},
      labelStyle: {},
      offset: 10,
      reverseDirection: {
        x: false,
        y: false
      },
      separator: " : ",
      trigger: "hover",
      useTranslate3d: false,
      viewBox: {
        x: 0,
        y: 0,
        height: 0,
        width: 0
      },
      wrapperStyle: {}
    });
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    var debounce = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle;
  }
});

// node_modules/recharts/lib/component/ResponsiveContainer.js
var require_ResponsiveContainer = __commonJS({
  "node_modules/recharts/lib/component/ResponsiveContainer.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ResponsiveContainer = void 0;
    var _clsx = _interopRequireDefault(require_clsx());
    var _react = _interopRequireWildcard(require_react());
    var _throttle = _interopRequireDefault(require_throttle());
    var _DataUtils = require_DataUtils();
    var _LogUtils = require_LogUtils();
    var _ReactUtils = require_ReactUtils();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var ResponsiveContainer = exports.ResponsiveContainer = (0, _react.forwardRef)(function(_ref, ref) {
      var aspect = _ref.aspect, _ref$initialDimension = _ref.initialDimension, initialDimension = _ref$initialDimension === void 0 ? {
        width: -1,
        height: -1
      } : _ref$initialDimension, _ref$width = _ref.width, width = _ref$width === void 0 ? "100%" : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? "100%" : _ref$height, _ref$minWidth = _ref.minWidth, minWidth = _ref$minWidth === void 0 ? 0 : _ref$minWidth, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, children = _ref.children, _ref$debounce = _ref.debounce, debounce = _ref$debounce === void 0 ? 0 : _ref$debounce, id = _ref.id, className = _ref.className, onResize = _ref.onResize, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style;
      var containerRef = (0, _react.useRef)(null);
      var onResizeRef = (0, _react.useRef)();
      onResizeRef.current = onResize;
      (0, _react.useImperativeHandle)(ref, function() {
        return Object.defineProperty(containerRef.current, "current", {
          get: function get() {
            console.warn("The usage of ref.current.current is deprecated and will no longer be supported.");
            return containerRef.current;
          },
          configurable: true
        });
      });
      var _useState = (0, _react.useState)({
        containerWidth: initialDimension.width,
        containerHeight: initialDimension.height
      }), _useState2 = _slicedToArray(_useState, 2), sizes = _useState2[0], setSizes = _useState2[1];
      var setContainerSize = (0, _react.useCallback)(function(newWidth, newHeight) {
        setSizes(function(prevState) {
          var roundedWidth = Math.round(newWidth);
          var roundedHeight = Math.round(newHeight);
          if (prevState.containerWidth === roundedWidth && prevState.containerHeight === roundedHeight) {
            return prevState;
          }
          return {
            containerWidth: roundedWidth,
            containerHeight: roundedHeight
          };
        });
      }, []);
      (0, _react.useEffect)(function() {
        var callback = function callback2(entries) {
          var _onResizeRef$current;
          var _entries$0$contentRec = entries[0].contentRect, containerWidth2 = _entries$0$contentRec.width, containerHeight2 = _entries$0$contentRec.height;
          setContainerSize(containerWidth2, containerHeight2);
          (_onResizeRef$current = onResizeRef.current) === null || _onResizeRef$current === void 0 || _onResizeRef$current.call(onResizeRef, containerWidth2, containerHeight2);
        };
        if (debounce > 0) {
          callback = (0, _throttle["default"])(callback, debounce, {
            trailing: true,
            leading: false
          });
        }
        var observer = new ResizeObserver(callback);
        var _containerRef$current = containerRef.current.getBoundingClientRect(), containerWidth = _containerRef$current.width, containerHeight = _containerRef$current.height;
        setContainerSize(containerWidth, containerHeight);
        observer.observe(containerRef.current);
        return function() {
          observer.disconnect();
        };
      }, [setContainerSize, debounce]);
      var chartContent = (0, _react.useMemo)(function() {
        var containerWidth = sizes.containerWidth, containerHeight = sizes.containerHeight;
        if (containerWidth < 0 || containerHeight < 0) {
          return null;
        }
        (0, _LogUtils.warn)((0, _DataUtils.isPercent)(width) || (0, _DataUtils.isPercent)(height), "The width(%s) and height(%s) are both fixed numbers,\n       maybe you don't need to use a ResponsiveContainer.", width, height);
        (0, _LogUtils.warn)(!aspect || aspect > 0, "The aspect(%s) must be greater than zero.", aspect);
        var calculatedWidth = (0, _DataUtils.isPercent)(width) ? containerWidth : width;
        var calculatedHeight = (0, _DataUtils.isPercent)(height) ? containerHeight : height;
        if (aspect && aspect > 0) {
          if (calculatedWidth) {
            calculatedHeight = calculatedWidth / aspect;
          } else if (calculatedHeight) {
            calculatedWidth = calculatedHeight * aspect;
          }
          if (maxHeight && calculatedHeight > maxHeight) {
            calculatedHeight = maxHeight;
          }
        }
        (0, _LogUtils.warn)(calculatedWidth > 0 || calculatedHeight > 0, "The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.", calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);
        var isCharts = !Array.isArray(children) && (0, _ReactUtils.getDisplayName)(children.type).endsWith("Chart");
        return _react["default"].Children.map(children, function(child) {
          if (_react["default"].isValidElement(child)) {
            return (0, _react.cloneElement)(child, _objectSpread({
              width: calculatedWidth,
              height: calculatedHeight
            }, isCharts ? {
              style: _objectSpread({
                height: "100%",
                width: "100%",
                maxHeight: calculatedHeight,
                maxWidth: calculatedWidth
              }, child.props.style)
            } : {}));
          }
          return child;
        });
      }, [aspect, children, height, maxHeight, minHeight, minWidth, sizes, width]);
      return _react["default"].createElement("div", {
        id: id ? "".concat(id) : void 0,
        className: (0, _clsx["default"])("recharts-responsive-container", className),
        style: _objectSpread(_objectSpread({}, style), {}, {
          width,
          height,
          minWidth,
          minHeight,
          maxHeight
        }),
        ref: containerRef
      }, chartContent);
    });
  }
});

// node_modules/recharts/lib/component/Cell.js
var require_Cell = __commonJS({
  "node_modules/recharts/lib/component/Cell.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Cell = void 0;
    var Cell = exports.Cell = function Cell2(_props) {
      return null;
    };
    Cell.displayName = "Cell";
  }
});

// node_modules/recharts/lib/util/DOMUtils.js
var require_DOMUtils = __commonJS({
  "node_modules/recharts/lib/util/DOMUtils.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getStyleString = exports.getStringSize = exports.getOffset = void 0;
    var _Global = require_Global();
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var stringCache = {
      widthCache: {},
      cacheCount: 0
    };
    var MAX_CACHE_NUM = 2e3;
    var SPAN_STYLE = {
      position: "absolute",
      top: "-20000px",
      left: 0,
      padding: 0,
      margin: 0,
      border: "none",
      whiteSpace: "pre"
    };
    var STYLE_LIST = ["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height", "top", "left", "fontSize", "lineHeight", "padding", "margin", "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom"];
    var MEASUREMENT_SPAN_ID = "recharts_measurement_span";
    function autoCompleteStyle(name, value) {
      if (STYLE_LIST.indexOf(name) >= 0 && value === +value) {
        return "".concat(value, "px");
      }
      return value;
    }
    function camelToMiddleLine(text) {
      var strs = text.split("");
      var formatStrs = strs.reduce(function(result, entry) {
        if (entry === entry.toUpperCase()) {
          return [].concat(_toConsumableArray(result), ["-", entry.toLowerCase()]);
        }
        return [].concat(_toConsumableArray(result), [entry]);
      }, []);
      return formatStrs.join("");
    }
    var getStyleString = exports.getStyleString = function getStyleString2(style) {
      return Object.keys(style).reduce(function(result, s) {
        return "".concat(result).concat(camelToMiddleLine(s), ":").concat(autoCompleteStyle(s, style[s]), ";");
      }, "");
    };
    function removeInvalidKeys(obj) {
      var copyObj = _objectSpread({}, obj);
      Object.keys(copyObj).forEach(function(key) {
        if (!copyObj[key]) {
          delete copyObj[key];
        }
      });
      return copyObj;
    }
    var getStringSize = exports.getStringSize = function getStringSize2(text) {
      var style = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (text === void 0 || text === null || _Global.Global.isSsr) {
        return {
          width: 0,
          height: 0
        };
      }
      var copyStyle = removeInvalidKeys(style);
      var cacheKey = JSON.stringify({
        text,
        copyStyle
      });
      if (stringCache.widthCache[cacheKey]) {
        return stringCache.widthCache[cacheKey];
      }
      try {
        var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);
        if (!measurementSpan) {
          measurementSpan = document.createElement("span");
          measurementSpan.setAttribute("id", MEASUREMENT_SPAN_ID);
          measurementSpan.setAttribute("aria-hidden", "true");
          document.body.appendChild(measurementSpan);
        }
        var measurementSpanStyle = _objectSpread(_objectSpread({}, SPAN_STYLE), copyStyle);
        Object.assign(measurementSpan.style, measurementSpanStyle);
        measurementSpan.textContent = "".concat(text);
        var rect = measurementSpan.getBoundingClientRect();
        var result = {
          width: rect.width,
          height: rect.height
        };
        stringCache.widthCache[cacheKey] = result;
        if (++stringCache.cacheCount > MAX_CACHE_NUM) {
          stringCache.cacheCount = 0;
          stringCache.widthCache = {};
        }
        return result;
      } catch (e) {
        return {
          width: 0,
          height: 0
        };
      }
    };
    var getOffset = exports.getOffset = function getOffset2(rect) {
      return {
        top: rect.top + window.scrollY - document.documentElement.clientTop,
        left: rect.left + window.scrollX - document.documentElement.clientLeft
      };
    };
  }
});

// node_modules/recharts/lib/util/ReduceCSSCalc.js
var require_ReduceCSSCalc = __commonJS({
  "node_modules/recharts/lib/util/ReduceCSSCalc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.reduceCSSCalc = reduceCSSCalc;
    exports.safeEvaluateExpression = safeEvaluateExpression;
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var MULTIPLY_OR_DIVIDE_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([*/])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
    var ADD_OR_SUBTRACT_REGEX = /(-?\d+(?:\.\d+)?[a-zA-Z%]*)([+-])(-?\d+(?:\.\d+)?[a-zA-Z%]*)/;
    var CSS_LENGTH_UNIT_REGEX = /^px|cm|vh|vw|em|rem|%|mm|in|pt|pc|ex|ch|vmin|vmax|Q$/;
    var NUM_SPLIT_REGEX = /(-?\d+(?:\.\d+)?)([a-zA-Z%]+)?/;
    var CONVERSION_RATES = {
      cm: 96 / 2.54,
      mm: 96 / 25.4,
      pt: 96 / 72,
      pc: 96 / 6,
      "in": 96,
      Q: 96 / (2.54 * 40),
      px: 1
    };
    var FIXED_CSS_LENGTH_UNITS = Object.keys(CONVERSION_RATES);
    var STR_NAN = "NaN";
    function convertToPx(value, unit) {
      return value * CONVERSION_RATES[unit];
    }
    var DecimalCSS = function() {
      function DecimalCSS2(num, unit) {
        _classCallCheck(this, DecimalCSS2);
        this.num = num;
        this.unit = unit;
        this.num = num;
        this.unit = unit;
        if (Number.isNaN(num)) {
          this.unit = "";
        }
        if (unit !== "" && !CSS_LENGTH_UNIT_REGEX.test(unit)) {
          this.num = NaN;
          this.unit = "";
        }
        if (FIXED_CSS_LENGTH_UNITS.includes(unit)) {
          this.num = convertToPx(num, unit);
          this.unit = "px";
        }
      }
      return _createClass(DecimalCSS2, [{
        key: "add",
        value: function add2(other) {
          if (this.unit !== other.unit) {
            return new DecimalCSS2(NaN, "");
          }
          return new DecimalCSS2(this.num + other.num, this.unit);
        }
      }, {
        key: "subtract",
        value: function subtract2(other) {
          if (this.unit !== other.unit) {
            return new DecimalCSS2(NaN, "");
          }
          return new DecimalCSS2(this.num - other.num, this.unit);
        }
      }, {
        key: "multiply",
        value: function multiply(other) {
          if (this.unit !== "" && other.unit !== "" && this.unit !== other.unit) {
            return new DecimalCSS2(NaN, "");
          }
          return new DecimalCSS2(this.num * other.num, this.unit || other.unit);
        }
      }, {
        key: "divide",
        value: function divide2(other) {
          if (this.unit !== "" && other.unit !== "" && this.unit !== other.unit) {
            return new DecimalCSS2(NaN, "");
          }
          return new DecimalCSS2(this.num / other.num, this.unit || other.unit);
        }
      }, {
        key: "toString",
        value: function toString2() {
          return "".concat(this.num).concat(this.unit);
        }
      }, {
        key: "isNaN",
        value: function isNaN2() {
          return Number.isNaN(this.num);
        }
      }], [{
        key: "parse",
        value: function parse(str) {
          var _NUM_SPLIT_REGEX$exec;
          var _ref = (_NUM_SPLIT_REGEX$exec = NUM_SPLIT_REGEX.exec(str)) !== null && _NUM_SPLIT_REGEX$exec !== void 0 ? _NUM_SPLIT_REGEX$exec : [], _ref2 = _slicedToArray(_ref, 3), numStr = _ref2[1], unit = _ref2[2];
          return new DecimalCSS2(parseFloat(numStr), unit !== null && unit !== void 0 ? unit : "");
        }
      }]);
    }();
    function calculateArithmetic(expr) {
      if (expr.includes(STR_NAN)) {
        return STR_NAN;
      }
      var newExpr = expr;
      while (newExpr.includes("*") || newExpr.includes("/")) {
        var _MULTIPLY_OR_DIVIDE_R;
        var _ref3 = (_MULTIPLY_OR_DIVIDE_R = MULTIPLY_OR_DIVIDE_REGEX.exec(newExpr)) !== null && _MULTIPLY_OR_DIVIDE_R !== void 0 ? _MULTIPLY_OR_DIVIDE_R : [], _ref4 = _slicedToArray(_ref3, 4), leftOperand = _ref4[1], operator = _ref4[2], rightOperand = _ref4[3];
        var lTs = DecimalCSS.parse(leftOperand !== null && leftOperand !== void 0 ? leftOperand : "");
        var rTs = DecimalCSS.parse(rightOperand !== null && rightOperand !== void 0 ? rightOperand : "");
        var result = operator === "*" ? lTs.multiply(rTs) : lTs.divide(rTs);
        if (result.isNaN()) {
          return STR_NAN;
        }
        newExpr = newExpr.replace(MULTIPLY_OR_DIVIDE_REGEX, result.toString());
      }
      while (newExpr.includes("+") || /.-\d+(?:\.\d+)?/.test(newExpr)) {
        var _ADD_OR_SUBTRACT_REGE;
        var _ref5 = (_ADD_OR_SUBTRACT_REGE = ADD_OR_SUBTRACT_REGEX.exec(newExpr)) !== null && _ADD_OR_SUBTRACT_REGE !== void 0 ? _ADD_OR_SUBTRACT_REGE : [], _ref6 = _slicedToArray(_ref5, 4), _leftOperand = _ref6[1], _operator = _ref6[2], _rightOperand = _ref6[3];
        var _lTs = DecimalCSS.parse(_leftOperand !== null && _leftOperand !== void 0 ? _leftOperand : "");
        var _rTs = DecimalCSS.parse(_rightOperand !== null && _rightOperand !== void 0 ? _rightOperand : "");
        var _result = _operator === "+" ? _lTs.add(_rTs) : _lTs.subtract(_rTs);
        if (_result.isNaN()) {
          return STR_NAN;
        }
        newExpr = newExpr.replace(ADD_OR_SUBTRACT_REGEX, _result.toString());
      }
      return newExpr;
    }
    var PARENTHESES_REGEX = /\(([^()]*)\)/;
    function calculateParentheses(expr) {
      var newExpr = expr;
      while (newExpr.includes("(")) {
        var _PARENTHESES_REGEX$ex = PARENTHESES_REGEX.exec(newExpr), _PARENTHESES_REGEX$ex2 = _slicedToArray(_PARENTHESES_REGEX$ex, 2), parentheticalExpression = _PARENTHESES_REGEX$ex2[1];
        newExpr = newExpr.replace(PARENTHESES_REGEX, calculateArithmetic(parentheticalExpression));
      }
      return newExpr;
    }
    function evaluateExpression(expression) {
      var newExpr = expression.replace(/\s+/g, "");
      newExpr = calculateParentheses(newExpr);
      newExpr = calculateArithmetic(newExpr);
      return newExpr;
    }
    function safeEvaluateExpression(expression) {
      try {
        return evaluateExpression(expression);
      } catch (e) {
        return STR_NAN;
      }
    }
    function reduceCSSCalc(expression) {
      var result = safeEvaluateExpression(expression.slice(5, -1));
      if (result === STR_NAN) {
        return "";
      }
      return result;
    }
  }
});

// node_modules/recharts/lib/component/Text.js
var require_Text = __commonJS({
  "node_modules/recharts/lib/component/Text.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Text = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _isNil = _interopRequireDefault(require_isNil());
    var _clsx = _interopRequireDefault(require_clsx());
    var _DataUtils = require_DataUtils();
    var _Global = require_Global();
    var _ReactUtils = require_ReactUtils();
    var _DOMUtils = require_DOMUtils();
    var _ReduceCSSCalc = require_ReduceCSSCalc();
    var _excluded = ["x", "y", "lineHeight", "capHeight", "scaleToFit", "textAnchor", "verticalAnchor", "fill"];
    var _excluded2 = ["dx", "dy", "angle", "className", "breakAll"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var BREAKING_SPACES = /[ \f\n\r\t\v\u2028\u2029]+/;
    var calculateWordWidths = function calculateWordWidths2(_ref) {
      var children = _ref.children, breakAll = _ref.breakAll, style = _ref.style;
      try {
        var words = [];
        if (!(0, _isNil["default"])(children)) {
          if (breakAll) {
            words = children.toString().split("");
          } else {
            words = children.toString().split(BREAKING_SPACES);
          }
        }
        var wordsWithComputedWidth = words.map(function(word) {
          return {
            word,
            width: (0, _DOMUtils.getStringSize)(word, style).width
          };
        });
        var spaceWidth = breakAll ? 0 : (0, _DOMUtils.getStringSize)(" ", style).width;
        return {
          wordsWithComputedWidth,
          spaceWidth
        };
      } catch (e) {
        return null;
      }
    };
    var calculateWordsByLines = function calculateWordsByLines2(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {
      var maxLines = _ref2.maxLines, children = _ref2.children, style = _ref2.style, breakAll = _ref2.breakAll;
      var shouldLimitLines = (0, _DataUtils.isNumber)(maxLines);
      var text = children;
      var calculate = function calculate2() {
        var words = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        return words.reduce(function(result2, _ref3) {
          var word = _ref3.word, width = _ref3.width;
          var currentLine = result2[result2.length - 1];
          if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {
            currentLine.words.push(word);
            currentLine.width += width + spaceWidth;
          } else {
            var newLine = {
              words: [word],
              width
            };
            result2.push(newLine);
          }
          return result2;
        }, []);
      };
      var originalResult = calculate(initialWordsWithComputedWith);
      var findLongestLine = function findLongestLine2(words) {
        return words.reduce(function(a, b) {
          return a.width > b.width ? a : b;
        });
      };
      if (!shouldLimitLines) {
        return originalResult;
      }
      var suffix = "…";
      var checkOverflow = function checkOverflow2(index) {
        var tempText = text.slice(0, index);
        var words = calculateWordWidths({
          breakAll,
          style,
          children: tempText + suffix
        }).wordsWithComputedWidth;
        var result2 = calculate(words);
        var doesOverflow = result2.length > maxLines || findLongestLine(result2).width > Number(lineWidth);
        return [doesOverflow, result2];
      };
      var start = 0;
      var end = text.length - 1;
      var iterations = 0;
      var trimmedResult;
      while (start <= end && iterations <= text.length - 1) {
        var middle = Math.floor((start + end) / 2);
        var prev = middle - 1;
        var _checkOverflow = checkOverflow(prev), _checkOverflow2 = _slicedToArray(_checkOverflow, 2), doesPrevOverflow = _checkOverflow2[0], result = _checkOverflow2[1];
        var _checkOverflow3 = checkOverflow(middle), _checkOverflow4 = _slicedToArray(_checkOverflow3, 1), doesMiddleOverflow = _checkOverflow4[0];
        if (!doesPrevOverflow && !doesMiddleOverflow) {
          start = middle + 1;
        }
        if (doesPrevOverflow && doesMiddleOverflow) {
          end = middle - 1;
        }
        if (!doesPrevOverflow && doesMiddleOverflow) {
          trimmedResult = result;
          break;
        }
        iterations++;
      }
      return trimmedResult || originalResult;
    };
    var getWordsWithoutCalculate = function getWordsWithoutCalculate2(children) {
      var words = !(0, _isNil["default"])(children) ? children.toString().split(BREAKING_SPACES) : [];
      return [{
        words
      }];
    };
    var getWordsByLines = function getWordsByLines2(_ref4) {
      var width = _ref4.width, scaleToFit = _ref4.scaleToFit, children = _ref4.children, style = _ref4.style, breakAll = _ref4.breakAll, maxLines = _ref4.maxLines;
      if ((width || scaleToFit) && !_Global.Global.isSsr) {
        var wordsWithComputedWidth, spaceWidth;
        var wordWidths = calculateWordWidths({
          breakAll,
          children,
          style
        });
        if (wordWidths) {
          var wcw = wordWidths.wordsWithComputedWidth, sw = wordWidths.spaceWidth;
          wordsWithComputedWidth = wcw;
          spaceWidth = sw;
        } else {
          return getWordsWithoutCalculate(children);
        }
        return calculateWordsByLines({
          breakAll,
          children,
          maxLines,
          style
        }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);
      }
      return getWordsWithoutCalculate(children);
    };
    var DEFAULT_FILL = "#808080";
    var Text = exports.Text = function Text2(_ref5) {
      var _ref5$x = _ref5.x, propsX = _ref5$x === void 0 ? 0 : _ref5$x, _ref5$y = _ref5.y, propsY = _ref5$y === void 0 ? 0 : _ref5$y, _ref5$lineHeight = _ref5.lineHeight, lineHeight = _ref5$lineHeight === void 0 ? "1em" : _ref5$lineHeight, _ref5$capHeight = _ref5.capHeight, capHeight = _ref5$capHeight === void 0 ? "0.71em" : _ref5$capHeight, _ref5$scaleToFit = _ref5.scaleToFit, scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit, _ref5$textAnchor = _ref5.textAnchor, textAnchor = _ref5$textAnchor === void 0 ? "start" : _ref5$textAnchor, _ref5$verticalAnchor = _ref5.verticalAnchor, verticalAnchor = _ref5$verticalAnchor === void 0 ? "end" : _ref5$verticalAnchor, _ref5$fill = _ref5.fill, fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill, props = _objectWithoutProperties(_ref5, _excluded);
      var wordsByLines = (0, _react.useMemo)(function() {
        return getWordsByLines({
          breakAll: props.breakAll,
          children: props.children,
          maxLines: props.maxLines,
          scaleToFit,
          style: props.style,
          width: props.width
        });
      }, [props.breakAll, props.children, props.maxLines, scaleToFit, props.style, props.width]);
      var dx = props.dx, dy = props.dy, angle = props.angle, className = props.className, breakAll = props.breakAll, textProps = _objectWithoutProperties(props, _excluded2);
      if (!(0, _DataUtils.isNumOrStr)(propsX) || !(0, _DataUtils.isNumOrStr)(propsY)) {
        return null;
      }
      var x = propsX + ((0, _DataUtils.isNumber)(dx) ? dx : 0);
      var y = propsY + ((0, _DataUtils.isNumber)(dy) ? dy : 0);
      var startDy;
      switch (verticalAnchor) {
        case "start":
          startDy = (0, _ReduceCSSCalc.reduceCSSCalc)("calc(".concat(capHeight, ")"));
          break;
        case "middle":
          startDy = (0, _ReduceCSSCalc.reduceCSSCalc)("calc(".concat((wordsByLines.length - 1) / 2, " * -").concat(lineHeight, " + (").concat(capHeight, " / 2))"));
          break;
        default:
          startDy = (0, _ReduceCSSCalc.reduceCSSCalc)("calc(".concat(wordsByLines.length - 1, " * -").concat(lineHeight, ")"));
          break;
      }
      var transforms = [];
      if (scaleToFit) {
        var lineWidth = wordsByLines[0].width;
        var width = props.width;
        transforms.push("scale(".concat(((0, _DataUtils.isNumber)(width) ? width / lineWidth : 1) / lineWidth, ")"));
      }
      if (angle) {
        transforms.push("rotate(".concat(angle, ", ").concat(x, ", ").concat(y, ")"));
      }
      if (transforms.length) {
        textProps.transform = transforms.join(" ");
      }
      return _react["default"].createElement("text", _extends({}, (0, _ReactUtils.filterProps)(textProps, true), {
        x,
        y,
        className: (0, _clsx["default"])("recharts-text", className),
        textAnchor,
        fill: fill.includes("url") ? DEFAULT_FILL : fill
      }), wordsByLines.map(function(line, index) {
        var words = line.words.join(breakAll ? "" : " ");
        return (
          // duplicate words will cause duplicate keys
          // eslint-disable-next-line react/no-array-index-key
          _react["default"].createElement("tspan", {
            x,
            dy: index === 0 ? startDy : lineHeight,
            key: "".concat(words, "-").concat(index)
          }, words)
        );
      }));
    };
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/ascending.js
var require_ascending2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/ascending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = ascending;
    function ascending(a, b) {
      return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/descending.js
var require_descending3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/descending.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = descending;
    function descending(a, b) {
      return a == null || b == null ? NaN : b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/bisector.js
var require_bisector = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/bisector.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = bisector;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _descending = _interopRequireDefault(require_descending3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function bisector(f) {
      let compare1, compare2, delta;
      if (f.length !== 2) {
        compare1 = _ascending.default;
        compare2 = (d, x) => (0, _ascending.default)(f(d), x);
        delta = (d, x) => f(d) - x;
      } else {
        compare1 = f === _ascending.default || f === _descending.default ? f : zero;
        compare2 = f;
        delta = f;
      }
      function left(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
          if (compare1(x, x) !== 0) return hi;
          do {
            const mid = lo + hi >>> 1;
            if (compare2(a[mid], x) < 0) lo = mid + 1;
            else hi = mid;
          } while (lo < hi);
        }
        return lo;
      }
      function right(a, x, lo = 0, hi = a.length) {
        if (lo < hi) {
          if (compare1(x, x) !== 0) return hi;
          do {
            const mid = lo + hi >>> 1;
            if (compare2(a[mid], x) <= 0) lo = mid + 1;
            else hi = mid;
          } while (lo < hi);
        }
        return lo;
      }
      function center(a, x, lo = 0, hi = a.length) {
        const i = left(a, x, lo, hi - 1);
        return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
      }
      return {
        left,
        center,
        right
      };
    }
    function zero() {
      return 0;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/number.js
var require_number = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = number;
    exports.numbers = numbers;
    function number(x) {
      return x === null ? NaN : +x;
    }
    function* numbers(values, valueof) {
      if (valueof === void 0) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            yield value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            yield value;
          }
        }
      }
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/bisect.js
var require_bisect = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/bisect.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.bisectRight = exports.bisectLeft = exports.bisectCenter = void 0;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _bisector = _interopRequireDefault(require_bisector());
    var _number = _interopRequireDefault(require_number());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var ascendingBisect = (0, _bisector.default)(_ascending.default);
    var bisectRight = ascendingBisect.right;
    exports.bisectRight = bisectRight;
    var bisectLeft = ascendingBisect.left;
    exports.bisectLeft = bisectLeft;
    var bisectCenter = (0, _bisector.default)(_number.default).center;
    exports.bisectCenter = bisectCenter;
    var _default = bisectRight;
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/count.js
var require_count = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/count.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = count;
    function count(values, valueof) {
      let count2 = 0;
      if (valueof === void 0) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            ++count2;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            ++count2;
          }
        }
      }
      return count2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/cross.js
var require_cross2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/cross.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cross;
    function length(array) {
      return array.length | 0;
    }
    function empty(length2) {
      return !(length2 > 0);
    }
    function arrayify(values) {
      return typeof values !== "object" || "length" in values ? values : Array.from(values);
    }
    function reducer(reduce) {
      return (values) => reduce(...values);
    }
    function cross(...values) {
      const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
      values = values.map(arrayify);
      const lengths = values.map(length);
      const j = values.length - 1;
      const index = new Array(j + 1).fill(0);
      const product = [];
      if (j < 0 || lengths.some(empty)) return product;
      while (true) {
        product.push(index.map((j2, i2) => values[i2][j2]));
        let i = j;
        while (++index[i] === lengths[i]) {
          if (i === 0) return reduce ? product.map(reduce) : product;
          index[i--] = 0;
        }
      }
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/cumsum.js
var require_cumsum = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/cumsum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cumsum;
    function cumsum(values, valueof) {
      var sum = 0, index = 0;
      return Float64Array.from(values, valueof === void 0 ? (v) => sum += +v || 0 : (v) => sum += +valueof(v, index++, values) || 0);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/variance.js
var require_variance = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/variance.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = variance;
    function variance(values, valueof) {
      let count = 0;
      let delta;
      let mean = 0;
      let sum = 0;
      if (valueof === void 0) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            delta = value - mean;
            mean += delta / ++count;
            sum += delta * (value - mean);
          }
        }
      }
      if (count > 1) return sum / (count - 1);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/deviation.js
var require_deviation = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/deviation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = deviation;
    var _variance = _interopRequireDefault(require_variance());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function deviation(values, valueof) {
      const v = (0, _variance.default)(values, valueof);
      return v ? Math.sqrt(v) : v;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/extent.js
var require_extent = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/extent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = extent;
    function extent(values, valueof) {
      let min;
      let max;
      if (valueof === void 0) {
        for (const value of values) {
          if (value != null) {
            if (min === void 0) {
              if (value >= value) min = max = value;
            } else {
              if (min > value) min = value;
              if (max < value) max = value;
            }
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null) {
            if (min === void 0) {
              if (value >= value) min = max = value;
            } else {
              if (min > value) min = value;
              if (max < value) max = value;
            }
          }
        }
      }
      return [min, max];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/fsum.js
var require_fsum = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/fsum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Adder = void 0;
    exports.fcumsum = fcumsum;
    exports.fsum = fsum;
    var Adder = class {
      constructor() {
        this._partials = new Float64Array(32);
        this._n = 0;
      }
      add(x) {
        const p = this._partials;
        let i = 0;
        for (let j = 0; j < this._n && j < 32; j++) {
          const y = p[j], hi = x + y, lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
          if (lo) p[i++] = lo;
          x = hi;
        }
        p[i] = x;
        this._n = i + 1;
        return this;
      }
      valueOf() {
        const p = this._partials;
        let n = this._n, x, y, lo, hi = 0;
        if (n > 0) {
          hi = p[--n];
          while (n > 0) {
            x = hi;
            y = p[--n];
            hi = x + y;
            lo = y - (hi - x);
            if (lo) break;
          }
          if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
            y = lo * 2;
            x = hi + y;
            if (y == x - hi) hi = x;
          }
        }
        return hi;
      }
    };
    exports.Adder = Adder;
    function fsum(values, valueof) {
      const adder = new Adder();
      if (valueof === void 0) {
        for (let value of values) {
          if (value = +value) {
            adder.add(value);
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if (value = +valueof(value, ++index, values)) {
            adder.add(value);
          }
        }
      }
      return +adder;
    }
    function fcumsum(values, valueof) {
      const adder = new Adder();
      let index = -1;
      return Float64Array.from(values, valueof === void 0 ? (v) => adder.add(+v || 0) : (v) => adder.add(+valueof(v, ++index, values) || 0));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/internmap/src/index.js
var require_src3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/internmap/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.InternSet = exports.InternMap = void 0;
    var InternMap = class extends Map {
      constructor(entries, key = keyof) {
        super();
        Object.defineProperties(this, {
          _intern: {
            value: /* @__PURE__ */ new Map()
          },
          _key: {
            value: key
          }
        });
        if (entries != null) for (const [key2, value] of entries) this.set(key2, value);
      }
      get(key) {
        return super.get(intern_get(this, key));
      }
      has(key) {
        return super.has(intern_get(this, key));
      }
      set(key, value) {
        return super.set(intern_set(this, key), value);
      }
      delete(key) {
        return super.delete(intern_delete(this, key));
      }
    };
    exports.InternMap = InternMap;
    var InternSet = class extends Set {
      constructor(values, key = keyof) {
        super();
        Object.defineProperties(this, {
          _intern: {
            value: /* @__PURE__ */ new Map()
          },
          _key: {
            value: key
          }
        });
        if (values != null) for (const value of values) this.add(value);
      }
      has(value) {
        return super.has(intern_get(this, value));
      }
      add(value) {
        return super.add(intern_set(this, value));
      }
      delete(value) {
        return super.delete(intern_delete(this, value));
      }
    };
    exports.InternSet = InternSet;
    function intern_get({
      _intern,
      _key
    }, value) {
      const key = _key(value);
      return _intern.has(key) ? _intern.get(key) : value;
    }
    function intern_set({
      _intern,
      _key
    }, value) {
      const key = _key(value);
      if (_intern.has(key)) return _intern.get(key);
      _intern.set(key, value);
      return value;
    }
    function intern_delete({
      _intern,
      _key
    }, value) {
      const key = _key(value);
      if (_intern.has(key)) {
        value = _intern.get(key);
        _intern.delete(key);
      }
      return value;
    }
    function keyof(value) {
      return value !== null && typeof value === "object" ? value.valueOf() : value;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/identity.js
var require_identity3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/identity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = identity;
    function identity(x) {
      return x;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/group.js
var require_group = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/group.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = group;
    exports.flatGroup = flatGroup;
    exports.flatRollup = flatRollup;
    exports.groups = groups;
    exports.index = index;
    exports.indexes = indexes;
    exports.rollup = rollup;
    exports.rollups = rollups;
    var _index = require_src3();
    var _identity = _interopRequireDefault(require_identity3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function group(values, ...keys) {
      return nest(values, _identity.default, _identity.default, keys);
    }
    function groups(values, ...keys) {
      return nest(values, Array.from, _identity.default, keys);
    }
    function flatten(groups2, keys) {
      for (let i = 1, n = keys.length; i < n; ++i) {
        groups2 = groups2.flatMap((g) => g.pop().map(([key, value]) => [...g, key, value]));
      }
      return groups2;
    }
    function flatGroup(values, ...keys) {
      return flatten(groups(values, ...keys), keys);
    }
    function flatRollup(values, reduce, ...keys) {
      return flatten(rollups(values, reduce, ...keys), keys);
    }
    function rollup(values, reduce, ...keys) {
      return nest(values, _identity.default, reduce, keys);
    }
    function rollups(values, reduce, ...keys) {
      return nest(values, Array.from, reduce, keys);
    }
    function index(values, ...keys) {
      return nest(values, _identity.default, unique, keys);
    }
    function indexes(values, ...keys) {
      return nest(values, Array.from, unique, keys);
    }
    function unique(values) {
      if (values.length !== 1) throw new Error("duplicate key");
      return values[0];
    }
    function nest(values, map, reduce, keys) {
      return function regroup(values2, i) {
        if (i >= keys.length) return reduce(values2);
        const groups2 = new _index.InternMap();
        const keyof = keys[i++];
        let index2 = -1;
        for (const value of values2) {
          const key = keyof(value, ++index2, values2);
          const group2 = groups2.get(key);
          if (group2) group2.push(value);
          else groups2.set(key, [value]);
        }
        for (const [key, values3] of groups2) {
          groups2.set(key, regroup(values3, i));
        }
        return map(groups2);
      }(values, 0);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/permute.js
var require_permute = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/permute.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = permute;
    function permute(source, keys) {
      return Array.from(keys, (key) => source[key]);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/sort.js
var require_sort = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/sort.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ascendingDefined = ascendingDefined;
    exports.compareDefined = compareDefined;
    exports.default = sort;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _permute = _interopRequireDefault(require_permute());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function sort(values, ...F) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      values = Array.from(values);
      let [f] = F;
      if (f && f.length !== 2 || F.length > 1) {
        const index = Uint32Array.from(values, (d, i) => i);
        if (F.length > 1) {
          F = F.map((f2) => values.map(f2));
          index.sort((i, j) => {
            for (const f2 of F) {
              const c = ascendingDefined(f2[i], f2[j]);
              if (c) return c;
            }
          });
        } else {
          f = values.map(f);
          index.sort((i, j) => ascendingDefined(f[i], f[j]));
        }
        return (0, _permute.default)(values, index);
      }
      return values.sort(compareDefined(f));
    }
    function compareDefined(compare = _ascending.default) {
      if (compare === _ascending.default) return ascendingDefined;
      if (typeof compare !== "function") throw new TypeError("compare is not a function");
      return (a, b) => {
        const x = compare(a, b);
        if (x || x === 0) return x;
        return (compare(b, b) === 0) - (compare(a, a) === 0);
      };
    }
    function ascendingDefined(a, b) {
      return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/groupSort.js
var require_groupSort = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/groupSort.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = groupSort;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _group = _interopRequireWildcard(require_group());
    var _sort = _interopRequireDefault(require_sort());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function groupSort(values, reduce, key) {
      return (reduce.length !== 2 ? (0, _sort.default)((0, _group.rollup)(values, reduce, key), ([ak, av], [bk, bv]) => (0, _ascending.default)(av, bv) || (0, _ascending.default)(ak, bk)) : (0, _sort.default)((0, _group.default)(values, key), ([ak, av], [bk, bv]) => reduce(av, bv) || (0, _ascending.default)(ak, bk))).map(([key2]) => key2);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/array.js
var require_array2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/array.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.slice = exports.map = void 0;
    var array = Array.prototype;
    var slice = array.slice;
    exports.slice = slice;
    var map = array.map;
    exports.map = map;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/constant.js
var require_constant3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/constant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = constant;
    function constant(x) {
      return () => x;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/ticks.js
var require_ticks = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/ticks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = ticks;
    exports.tickIncrement = tickIncrement;
    exports.tickStep = tickStep;
    var e10 = Math.sqrt(50);
    var e5 = Math.sqrt(10);
    var e2 = Math.sqrt(2);
    function ticks(start, stop, count) {
      var reverse, i = -1, n, ticks2, step;
      stop = +stop, start = +start, count = +count;
      if (start === stop && count > 0) return [start];
      if (reverse = stop < start) n = start, start = stop, stop = n;
      if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];
      if (step > 0) {
        let r0 = Math.round(start / step), r1 = Math.round(stop / step);
        if (r0 * step < start) ++r0;
        if (r1 * step > stop) --r1;
        ticks2 = new Array(n = r1 - r0 + 1);
        while (++i < n) ticks2[i] = (r0 + i) * step;
      } else {
        step = -step;
        let r0 = Math.round(start * step), r1 = Math.round(stop * step);
        if (r0 / step < start) ++r0;
        if (r1 / step > stop) --r1;
        ticks2 = new Array(n = r1 - r0 + 1);
        while (++i < n) ticks2[i] = (r0 + i) / step;
      }
      if (reverse) ticks2.reverse();
      return ticks2;
    }
    function tickIncrement(start, stop, count) {
      var step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
      return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
    }
    function tickStep(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
      if (error >= e10) step1 *= 10;
      else if (error >= e5) step1 *= 5;
      else if (error >= e2) step1 *= 2;
      return stop < start ? -step1 : step1;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/nice.js
var require_nice = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/nice.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nice;
    var _ticks = require_ticks();
    function nice(start, stop, count) {
      let prestep;
      while (true) {
        const step = (0, _ticks.tickIncrement)(start, stop, count);
        if (step === prestep || step === 0 || !isFinite(step)) {
          return [start, stop];
        } else if (step > 0) {
          start = Math.floor(start / step) * step;
          stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
          start = Math.ceil(start * step) / step;
          stop = Math.floor(stop * step) / step;
        }
        prestep = step;
      }
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/sturges.js
var require_sturges = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/sturges.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = thresholdSturges;
    var _count = _interopRequireDefault(require_count());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function thresholdSturges(values) {
      return Math.ceil(Math.log((0, _count.default)(values)) / Math.LN2) + 1;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/bin.js
var require_bin = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/bin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = bin;
    var _array = require_array2();
    var _bisect = _interopRequireDefault(require_bisect());
    var _constant = _interopRequireDefault(require_constant3());
    var _extent = _interopRequireDefault(require_extent());
    var _identity = _interopRequireDefault(require_identity3());
    var _nice = _interopRequireDefault(require_nice());
    var _ticks = _interopRequireWildcard(require_ticks());
    var _sturges = _interopRequireDefault(require_sturges());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function bin() {
      var value = _identity.default, domain = _extent.default, threshold = _sturges.default;
      function histogram(data) {
        if (!Array.isArray(data)) data = Array.from(data);
        var i, n = data.length, x, step, values = new Array(n);
        for (i = 0; i < n; ++i) {
          values[i] = value(data[i], i, data);
        }
        var xz = domain(values), x0 = xz[0], x1 = xz[1], tz = threshold(values, x0, x1);
        if (!Array.isArray(tz)) {
          const max = x1, tn = +tz;
          if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);
          tz = (0, _ticks.default)(x0, x1, tn);
          if (tz[0] <= x0) step = (0, _ticks.tickIncrement)(x0, x1, tn);
          if (tz[tz.length - 1] >= x1) {
            if (max >= x1 && domain === _extent.default) {
              const step2 = (0, _ticks.tickIncrement)(x0, x1, tn);
              if (isFinite(step2)) {
                if (step2 > 0) {
                  x1 = (Math.floor(x1 / step2) + 1) * step2;
                } else if (step2 < 0) {
                  x1 = (Math.ceil(x1 * -step2) + 1) / -step2;
                }
              }
            } else {
              tz.pop();
            }
          }
        }
        var m = tz.length;
        while (tz[0] <= x0) tz.shift(), --m;
        while (tz[m - 1] > x1) tz.pop(), --m;
        var bins = new Array(m + 1), bin2;
        for (i = 0; i <= m; ++i) {
          bin2 = bins[i] = [];
          bin2.x0 = i > 0 ? tz[i - 1] : x0;
          bin2.x1 = i < m ? tz[i] : x1;
        }
        if (isFinite(step)) {
          if (step > 0) {
            for (i = 0; i < n; ++i) {
              if ((x = values[i]) != null && x0 <= x && x <= x1) {
                bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);
              }
            }
          } else if (step < 0) {
            for (i = 0; i < n; ++i) {
              if ((x = values[i]) != null && x0 <= x && x <= x1) {
                const j = Math.floor((x0 - x) * step);
                bins[Math.min(m, j + (tz[j] <= x))].push(data[i]);
              }
            }
          }
        } else {
          for (i = 0; i < n; ++i) {
            if ((x = values[i]) != null && x0 <= x && x <= x1) {
              bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
            }
          }
        }
        return bins;
      }
      histogram.value = function(_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
      };
      histogram.domain = function(_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
      };
      histogram.thresholds = function(_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
      };
      return histogram;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/max.js
var require_max = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/max.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = max;
    function max(values, valueof) {
      let max2;
      if (valueof === void 0) {
        for (const value of values) {
          if (value != null && (max2 < value || max2 === void 0 && value >= value)) {
            max2 = value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (max2 < value || max2 === void 0 && value >= value)) {
            max2 = value;
          }
        }
      }
      return max2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/min.js
var require_min = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/min.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = min;
    function min(values, valueof) {
      let min2;
      if (valueof === void 0) {
        for (const value of values) {
          if (value != null && (min2 > value || min2 === void 0 && value >= value)) {
            min2 = value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (min2 > value || min2 === void 0 && value >= value)) {
            min2 = value;
          }
        }
      }
      return min2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/quickselect.js
var require_quickselect = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/quickselect.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quickselect;
    var _sort = require_sort();
    function quickselect(array, k, left = 0, right = array.length - 1, compare) {
      compare = compare === void 0 ? _sort.ascendingDefined : (0, _sort.compareDefined)(compare);
      while (right > left) {
        if (right - left > 600) {
          const n = right - left + 1;
          const m = k - left + 1;
          const z = Math.log(n);
          const s = 0.5 * Math.exp(2 * z / 3);
          const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
          const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
          const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
          quickselect(array, k, newLeft, newRight, compare);
        }
        const t = array[k];
        let i = left;
        let j = right;
        swap(array, left, k);
        if (compare(array[right], t) > 0) swap(array, left, right);
        while (i < j) {
          swap(array, i, j), ++i, --j;
          while (compare(array[i], t) < 0) ++i;
          while (compare(array[j], t) > 0) --j;
        }
        if (compare(array[left], t) === 0) swap(array, left, j);
        else ++j, swap(array, j, right);
        if (j <= k) left = j + 1;
        if (k <= j) right = j - 1;
      }
      return array;
    }
    function swap(array, i, j) {
      const t = array[i];
      array[i] = array[j];
      array[j] = t;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/quantile.js
var require_quantile = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/quantile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quantile;
    exports.quantileSorted = quantileSorted;
    var _max = _interopRequireDefault(require_max());
    var _min = _interopRequireDefault(require_min());
    var _quickselect = _interopRequireDefault(require_quickselect());
    var _number = _interopRequireWildcard(require_number());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function quantile(values, p, valueof) {
      values = Float64Array.from((0, _number.numbers)(values, valueof));
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return (0, _min.default)(values);
      if (p >= 1) return (0, _max.default)(values);
      var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = (0, _max.default)((0, _quickselect.default)(values, i0).subarray(0, i0 + 1)), value1 = (0, _min.default)(values.subarray(i0 + 1));
      return value0 + (value1 - value0) * (i - i0);
    }
    function quantileSorted(values, p, valueof = _number.default) {
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
      if (p >= 1) return +valueof(values[n - 1], n - 1, values);
      var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = +valueof(values[i0], i0, values), value1 = +valueof(values[i0 + 1], i0 + 1, values);
      return value0 + (value1 - value0) * (i - i0);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/freedmanDiaconis.js
var require_freedmanDiaconis = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/freedmanDiaconis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = thresholdFreedmanDiaconis;
    var _count = _interopRequireDefault(require_count());
    var _quantile = _interopRequireDefault(require_quantile());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function thresholdFreedmanDiaconis(values, min, max) {
      return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow((0, _count.default)(values), -1 / 3)));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/scott.js
var require_scott = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/threshold/scott.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = thresholdScott;
    var _count = _interopRequireDefault(require_count());
    var _deviation = _interopRequireDefault(require_deviation());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function thresholdScott(values, min, max) {
      return Math.ceil((max - min) * Math.cbrt((0, _count.default)(values)) / (3.49 * (0, _deviation.default)(values)));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/maxIndex.js
var require_maxIndex = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/maxIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = maxIndex;
    function maxIndex(values, valueof) {
      let max;
      let maxIndex2 = -1;
      let index = -1;
      if (valueof === void 0) {
        for (const value of values) {
          ++index;
          if (value != null && (max < value || max === void 0 && value >= value)) {
            max = value, maxIndex2 = index;
          }
        }
      } else {
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (max < value || max === void 0 && value >= value)) {
            max = value, maxIndex2 = index;
          }
        }
      }
      return maxIndex2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/mean.js
var require_mean = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/mean.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = mean;
    function mean(values, valueof) {
      let count = 0;
      let sum = 0;
      if (valueof === void 0) {
        for (let value of values) {
          if (value != null && (value = +value) >= value) {
            ++count, sum += value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
            ++count, sum += value;
          }
        }
      }
      if (count) return sum / count;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/median.js
var require_median = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/median.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = median;
    var _quantile = _interopRequireDefault(require_quantile());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function median(values, valueof) {
      return (0, _quantile.default)(values, 0.5, valueof);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/merge.js
var require_merge = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/merge.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = merge;
    function* flatten(arrays) {
      for (const array of arrays) {
        yield* array;
      }
    }
    function merge(arrays) {
      return Array.from(flatten(arrays));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/minIndex.js
var require_minIndex = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/minIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = minIndex;
    function minIndex(values, valueof) {
      let min;
      let minIndex2 = -1;
      let index = -1;
      if (valueof === void 0) {
        for (const value of values) {
          ++index;
          if (value != null && (min > value || min === void 0 && value >= value)) {
            min = value, minIndex2 = index;
          }
        }
      } else {
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && (min > value || min === void 0 && value >= value)) {
            min = value, minIndex2 = index;
          }
        }
      }
      return minIndex2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/mode.js
var require_mode = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/mode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = mode;
    var _index = require_src3();
    function mode(values, valueof) {
      const counts = new _index.InternMap();
      if (valueof === void 0) {
        for (let value of values) {
          if (value != null && value >= value) {
            counts.set(value, (counts.get(value) || 0) + 1);
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if ((value = valueof(value, ++index, values)) != null && value >= value) {
            counts.set(value, (counts.get(value) || 0) + 1);
          }
        }
      }
      let modeValue;
      let modeCount = 0;
      for (const [value, count] of counts) {
        if (count > modeCount) {
          modeCount = count;
          modeValue = value;
        }
      }
      return modeValue;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/pairs.js
var require_pairs = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/pairs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = pairs;
    exports.pair = pair;
    function pairs(values, pairof = pair) {
      const pairs2 = [];
      let previous;
      let first = false;
      for (const value of values) {
        if (first) pairs2.push(pairof(previous, value));
        previous = value;
        first = true;
      }
      return pairs2;
    }
    function pair(a, b) {
      return [a, b];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/range.js
var require_range = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/range.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = range;
    function range(start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
      var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range2 = new Array(n);
      while (++i < n) {
        range2[i] = start + i * step;
      }
      return range2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/rank.js
var require_rank = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/rank.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = rank;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _sort = require_sort();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function rank(values, valueof = _ascending.default) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      let V = Array.from(values);
      const R = new Float64Array(V.length);
      if (valueof.length !== 2) V = V.map(valueof), valueof = _ascending.default;
      const compareIndex = (i, j) => valueof(V[i], V[j]);
      let k, r;
      Uint32Array.from(V, (_, i) => i).sort(valueof === _ascending.default ? (i, j) => (0, _sort.ascendingDefined)(V[i], V[j]) : (0, _sort.compareDefined)(compareIndex)).forEach((j, i) => {
        const c = compareIndex(j, k === void 0 ? j : k);
        if (c >= 0) {
          if (k === void 0 || c > 0) k = j, r = i;
          R[j] = r;
        } else {
          R[j] = NaN;
        }
      });
      return R;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/least.js
var require_least = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/least.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = least;
    var _ascending = _interopRequireDefault(require_ascending2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function least(values, compare = _ascending.default) {
      let min;
      let defined = false;
      if (compare.length === 1) {
        let minValue;
        for (const element of values) {
          const value = compare(element);
          if (defined ? (0, _ascending.default)(value, minValue) < 0 : (0, _ascending.default)(value, value) === 0) {
            min = element;
            minValue = value;
            defined = true;
          }
        }
      } else {
        for (const value of values) {
          if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {
            min = value;
            defined = true;
          }
        }
      }
      return min;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/leastIndex.js
var require_leastIndex = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/leastIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = leastIndex;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _minIndex = _interopRequireDefault(require_minIndex());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function leastIndex(values, compare = _ascending.default) {
      if (compare.length === 1) return (0, _minIndex.default)(values, compare);
      let minValue;
      let min = -1;
      let index = -1;
      for (const value of values) {
        ++index;
        if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {
          minValue = value;
          min = index;
        }
      }
      return min;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/greatest.js
var require_greatest = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/greatest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = greatest;
    var _ascending = _interopRequireDefault(require_ascending2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function greatest(values, compare = _ascending.default) {
      let max;
      let defined = false;
      if (compare.length === 1) {
        let maxValue;
        for (const element of values) {
          const value = compare(element);
          if (defined ? (0, _ascending.default)(value, maxValue) > 0 : (0, _ascending.default)(value, value) === 0) {
            max = element;
            maxValue = value;
            defined = true;
          }
        }
      } else {
        for (const value of values) {
          if (defined ? compare(value, max) > 0 : compare(value, value) === 0) {
            max = value;
            defined = true;
          }
        }
      }
      return max;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/greatestIndex.js
var require_greatestIndex = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/greatestIndex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = greatestIndex;
    var _ascending = _interopRequireDefault(require_ascending2());
    var _maxIndex = _interopRequireDefault(require_maxIndex());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function greatestIndex(values, compare = _ascending.default) {
      if (compare.length === 1) return (0, _maxIndex.default)(values, compare);
      let maxValue;
      let max = -1;
      let index = -1;
      for (const value of values) {
        ++index;
        if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {
          maxValue = value;
          max = index;
        }
      }
      return max;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/scan.js
var require_scan = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/scan.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = scan;
    var _leastIndex = _interopRequireDefault(require_leastIndex());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function scan(values, compare) {
      const index = (0, _leastIndex.default)(values, compare);
      return index < 0 ? void 0 : index;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/shuffle.js
var require_shuffle = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/shuffle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    exports.shuffler = shuffler;
    var _default = shuffler(Math.random);
    exports.default = _default;
    function shuffler(random) {
      return function shuffle(array, i0 = 0, i1 = array.length) {
        let m = i1 - (i0 = +i0);
        while (m) {
          const i = random() * m-- | 0, t = array[m + i0];
          array[m + i0] = array[i + i0];
          array[i + i0] = t;
        }
        return array;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/sum.js
var require_sum = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/sum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sum;
    function sum(values, valueof) {
      let sum2 = 0;
      if (valueof === void 0) {
        for (let value of values) {
          if (value = +value) {
            sum2 += value;
          }
        }
      } else {
        let index = -1;
        for (let value of values) {
          if (value = +valueof(value, ++index, values)) {
            sum2 += value;
          }
        }
      }
      return sum2;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/transpose.js
var require_transpose = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/transpose.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = transpose;
    var _min = _interopRequireDefault(require_min());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function transpose(matrix) {
      if (!(n = matrix.length)) return [];
      for (var i = -1, m = (0, _min.default)(matrix, length), transpose2 = new Array(m); ++i < m; ) {
        for (var j = -1, n, row = transpose2[i] = new Array(n); ++j < n; ) {
          row[j] = matrix[j][i];
        }
      }
      return transpose2;
    }
    function length(d) {
      return d.length;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/zip.js
var require_zip = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/zip.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = zip;
    var _transpose = _interopRequireDefault(require_transpose());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function zip() {
      return (0, _transpose.default)(arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/every.js
var require_every = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/every.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = every;
    function every(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      let index = -1;
      for (const value of values) {
        if (!test(value, ++index, values)) {
          return false;
        }
      }
      return true;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/some.js
var require_some = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/some.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = some;
    function some(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      let index = -1;
      for (const value of values) {
        if (test(value, ++index, values)) {
          return true;
        }
      }
      return false;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/filter.js
var require_filter = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/filter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = filter;
    function filter(values, test) {
      if (typeof test !== "function") throw new TypeError("test is not a function");
      const array = [];
      let index = -1;
      for (const value of values) {
        if (test(value, ++index, values)) {
          array.push(value);
        }
      }
      return array;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/map.js
var require_map = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/map.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = map;
    function map(values, mapper) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
      return Array.from(values, (value, index) => mapper(value, index, values));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/reduce.js
var require_reduce = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/reduce.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = reduce;
    function reduce(values, reducer, value) {
      if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
      const iterator = values[Symbol.iterator]();
      let done, next, index = -1;
      if (arguments.length < 3) {
        ({
          done,
          value
        } = iterator.next());
        if (done) return;
        ++index;
      }
      while ({
        done,
        value: next
      } = iterator.next(), !done) {
        value = reducer(value, next, ++index, values);
      }
      return value;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/reverse.js
var require_reverse2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/reverse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = reverse;
    function reverse(values) {
      if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
      return Array.from(values).reverse();
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/difference.js
var require_difference = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/difference.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = difference;
    var _index = require_src3();
    function difference(values, ...others) {
      values = new _index.InternSet(values);
      for (const other of others) {
        for (const value of other) {
          values.delete(value);
        }
      }
      return values;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/disjoint.js
var require_disjoint = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/disjoint.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = disjoint;
    var _index = require_src3();
    function disjoint(values, other) {
      const iterator = other[Symbol.iterator](), set = new _index.InternSet();
      for (const v of values) {
        if (set.has(v)) return false;
        let value, done;
        while ({
          value,
          done
        } = iterator.next()) {
          if (done) break;
          if (Object.is(v, value)) return false;
          set.add(value);
        }
      }
      return true;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/intersection.js
var require_intersection = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/intersection.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = intersection;
    var _index = require_src3();
    function intersection(values, ...others) {
      values = new _index.InternSet(values);
      others = others.map(set);
      out: for (const value of values) {
        for (const other of others) {
          if (!other.has(value)) {
            values.delete(value);
            continue out;
          }
        }
      }
      return values;
    }
    function set(values) {
      return values instanceof _index.InternSet ? values : new _index.InternSet(values);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/superset.js
var require_superset = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/superset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = superset;
    function superset(values, other) {
      const iterator = values[Symbol.iterator](), set = /* @__PURE__ */ new Set();
      for (const o of other) {
        const io = intern(o);
        if (set.has(io)) continue;
        let value, done;
        while ({
          value,
          done
        } = iterator.next()) {
          if (done) return false;
          const ivalue = intern(value);
          set.add(ivalue);
          if (Object.is(io, ivalue)) break;
        }
      }
      return true;
    }
    function intern(value) {
      return value !== null && typeof value === "object" ? value.valueOf() : value;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/subset.js
var require_subset = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/subset.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = subset;
    var _superset = _interopRequireDefault(require_superset());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function subset(values, other) {
      return (0, _superset.default)(other, values);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/union.js
var require_union = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/union.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = union;
    var _index = require_src3();
    function union(...others) {
      const set = new _index.InternSet();
      for (const other of others) {
        for (const o of other) {
          set.add(o);
        }
      }
      return set;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-array/src/index.js
var require_src4 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-array/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "Adder", {
      enumerable: true,
      get: function() {
        return _fsum.Adder;
      }
    });
    Object.defineProperty(exports, "InternMap", {
      enumerable: true,
      get: function() {
        return _index.InternMap;
      }
    });
    Object.defineProperty(exports, "InternSet", {
      enumerable: true,
      get: function() {
        return _index.InternSet;
      }
    });
    Object.defineProperty(exports, "ascending", {
      enumerable: true,
      get: function() {
        return _ascending.default;
      }
    });
    Object.defineProperty(exports, "bin", {
      enumerable: true,
      get: function() {
        return _bin.default;
      }
    });
    Object.defineProperty(exports, "bisect", {
      enumerable: true,
      get: function() {
        return _bisect.default;
      }
    });
    Object.defineProperty(exports, "bisectCenter", {
      enumerable: true,
      get: function() {
        return _bisect.bisectCenter;
      }
    });
    Object.defineProperty(exports, "bisectLeft", {
      enumerable: true,
      get: function() {
        return _bisect.bisectLeft;
      }
    });
    Object.defineProperty(exports, "bisectRight", {
      enumerable: true,
      get: function() {
        return _bisect.bisectRight;
      }
    });
    Object.defineProperty(exports, "bisector", {
      enumerable: true,
      get: function() {
        return _bisector.default;
      }
    });
    Object.defineProperty(exports, "count", {
      enumerable: true,
      get: function() {
        return _count.default;
      }
    });
    Object.defineProperty(exports, "cross", {
      enumerable: true,
      get: function() {
        return _cross.default;
      }
    });
    Object.defineProperty(exports, "cumsum", {
      enumerable: true,
      get: function() {
        return _cumsum.default;
      }
    });
    Object.defineProperty(exports, "descending", {
      enumerable: true,
      get: function() {
        return _descending.default;
      }
    });
    Object.defineProperty(exports, "deviation", {
      enumerable: true,
      get: function() {
        return _deviation.default;
      }
    });
    Object.defineProperty(exports, "difference", {
      enumerable: true,
      get: function() {
        return _difference.default;
      }
    });
    Object.defineProperty(exports, "disjoint", {
      enumerable: true,
      get: function() {
        return _disjoint.default;
      }
    });
    Object.defineProperty(exports, "every", {
      enumerable: true,
      get: function() {
        return _every.default;
      }
    });
    Object.defineProperty(exports, "extent", {
      enumerable: true,
      get: function() {
        return _extent.default;
      }
    });
    Object.defineProperty(exports, "fcumsum", {
      enumerable: true,
      get: function() {
        return _fsum.fcumsum;
      }
    });
    Object.defineProperty(exports, "filter", {
      enumerable: true,
      get: function() {
        return _filter.default;
      }
    });
    Object.defineProperty(exports, "flatGroup", {
      enumerable: true,
      get: function() {
        return _group.flatGroup;
      }
    });
    Object.defineProperty(exports, "flatRollup", {
      enumerable: true,
      get: function() {
        return _group.flatRollup;
      }
    });
    Object.defineProperty(exports, "fsum", {
      enumerable: true,
      get: function() {
        return _fsum.fsum;
      }
    });
    Object.defineProperty(exports, "greatest", {
      enumerable: true,
      get: function() {
        return _greatest.default;
      }
    });
    Object.defineProperty(exports, "greatestIndex", {
      enumerable: true,
      get: function() {
        return _greatestIndex.default;
      }
    });
    Object.defineProperty(exports, "group", {
      enumerable: true,
      get: function() {
        return _group.default;
      }
    });
    Object.defineProperty(exports, "groupSort", {
      enumerable: true,
      get: function() {
        return _groupSort.default;
      }
    });
    Object.defineProperty(exports, "groups", {
      enumerable: true,
      get: function() {
        return _group.groups;
      }
    });
    Object.defineProperty(exports, "histogram", {
      enumerable: true,
      get: function() {
        return _bin.default;
      }
    });
    Object.defineProperty(exports, "index", {
      enumerable: true,
      get: function() {
        return _group.index;
      }
    });
    Object.defineProperty(exports, "indexes", {
      enumerable: true,
      get: function() {
        return _group.indexes;
      }
    });
    Object.defineProperty(exports, "intersection", {
      enumerable: true,
      get: function() {
        return _intersection.default;
      }
    });
    Object.defineProperty(exports, "least", {
      enumerable: true,
      get: function() {
        return _least.default;
      }
    });
    Object.defineProperty(exports, "leastIndex", {
      enumerable: true,
      get: function() {
        return _leastIndex.default;
      }
    });
    Object.defineProperty(exports, "map", {
      enumerable: true,
      get: function() {
        return _map.default;
      }
    });
    Object.defineProperty(exports, "max", {
      enumerable: true,
      get: function() {
        return _max.default;
      }
    });
    Object.defineProperty(exports, "maxIndex", {
      enumerable: true,
      get: function() {
        return _maxIndex.default;
      }
    });
    Object.defineProperty(exports, "mean", {
      enumerable: true,
      get: function() {
        return _mean.default;
      }
    });
    Object.defineProperty(exports, "median", {
      enumerable: true,
      get: function() {
        return _median.default;
      }
    });
    Object.defineProperty(exports, "merge", {
      enumerable: true,
      get: function() {
        return _merge.default;
      }
    });
    Object.defineProperty(exports, "min", {
      enumerable: true,
      get: function() {
        return _min.default;
      }
    });
    Object.defineProperty(exports, "minIndex", {
      enumerable: true,
      get: function() {
        return _minIndex.default;
      }
    });
    Object.defineProperty(exports, "mode", {
      enumerable: true,
      get: function() {
        return _mode.default;
      }
    });
    Object.defineProperty(exports, "nice", {
      enumerable: true,
      get: function() {
        return _nice.default;
      }
    });
    Object.defineProperty(exports, "pairs", {
      enumerable: true,
      get: function() {
        return _pairs.default;
      }
    });
    Object.defineProperty(exports, "permute", {
      enumerable: true,
      get: function() {
        return _permute.default;
      }
    });
    Object.defineProperty(exports, "quantile", {
      enumerable: true,
      get: function() {
        return _quantile.default;
      }
    });
    Object.defineProperty(exports, "quantileSorted", {
      enumerable: true,
      get: function() {
        return _quantile.quantileSorted;
      }
    });
    Object.defineProperty(exports, "quickselect", {
      enumerable: true,
      get: function() {
        return _quickselect.default;
      }
    });
    Object.defineProperty(exports, "range", {
      enumerable: true,
      get: function() {
        return _range.default;
      }
    });
    Object.defineProperty(exports, "rank", {
      enumerable: true,
      get: function() {
        return _rank.default;
      }
    });
    Object.defineProperty(exports, "reduce", {
      enumerable: true,
      get: function() {
        return _reduce.default;
      }
    });
    Object.defineProperty(exports, "reverse", {
      enumerable: true,
      get: function() {
        return _reverse.default;
      }
    });
    Object.defineProperty(exports, "rollup", {
      enumerable: true,
      get: function() {
        return _group.rollup;
      }
    });
    Object.defineProperty(exports, "rollups", {
      enumerable: true,
      get: function() {
        return _group.rollups;
      }
    });
    Object.defineProperty(exports, "scan", {
      enumerable: true,
      get: function() {
        return _scan.default;
      }
    });
    Object.defineProperty(exports, "shuffle", {
      enumerable: true,
      get: function() {
        return _shuffle.default;
      }
    });
    Object.defineProperty(exports, "shuffler", {
      enumerable: true,
      get: function() {
        return _shuffle.shuffler;
      }
    });
    Object.defineProperty(exports, "some", {
      enumerable: true,
      get: function() {
        return _some.default;
      }
    });
    Object.defineProperty(exports, "sort", {
      enumerable: true,
      get: function() {
        return _sort.default;
      }
    });
    Object.defineProperty(exports, "subset", {
      enumerable: true,
      get: function() {
        return _subset.default;
      }
    });
    Object.defineProperty(exports, "sum", {
      enumerable: true,
      get: function() {
        return _sum.default;
      }
    });
    Object.defineProperty(exports, "superset", {
      enumerable: true,
      get: function() {
        return _superset.default;
      }
    });
    Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
      enumerable: true,
      get: function() {
        return _freedmanDiaconis.default;
      }
    });
    Object.defineProperty(exports, "thresholdScott", {
      enumerable: true,
      get: function() {
        return _scott.default;
      }
    });
    Object.defineProperty(exports, "thresholdSturges", {
      enumerable: true,
      get: function() {
        return _sturges.default;
      }
    });
    Object.defineProperty(exports, "tickIncrement", {
      enumerable: true,
      get: function() {
        return _ticks.tickIncrement;
      }
    });
    Object.defineProperty(exports, "tickStep", {
      enumerable: true,
      get: function() {
        return _ticks.tickStep;
      }
    });
    Object.defineProperty(exports, "ticks", {
      enumerable: true,
      get: function() {
        return _ticks.default;
      }
    });
    Object.defineProperty(exports, "transpose", {
      enumerable: true,
      get: function() {
        return _transpose.default;
      }
    });
    Object.defineProperty(exports, "union", {
      enumerable: true,
      get: function() {
        return _union.default;
      }
    });
    Object.defineProperty(exports, "variance", {
      enumerable: true,
      get: function() {
        return _variance.default;
      }
    });
    Object.defineProperty(exports, "zip", {
      enumerable: true,
      get: function() {
        return _zip.default;
      }
    });
    var _bisect = _interopRequireWildcard(require_bisect());
    var _ascending = _interopRequireDefault(require_ascending2());
    var _bisector = _interopRequireDefault(require_bisector());
    var _count = _interopRequireDefault(require_count());
    var _cross = _interopRequireDefault(require_cross2());
    var _cumsum = _interopRequireDefault(require_cumsum());
    var _descending = _interopRequireDefault(require_descending3());
    var _deviation = _interopRequireDefault(require_deviation());
    var _extent = _interopRequireDefault(require_extent());
    var _fsum = require_fsum();
    var _group = _interopRequireWildcard(require_group());
    var _groupSort = _interopRequireDefault(require_groupSort());
    var _bin = _interopRequireDefault(require_bin());
    var _freedmanDiaconis = _interopRequireDefault(require_freedmanDiaconis());
    var _scott = _interopRequireDefault(require_scott());
    var _sturges = _interopRequireDefault(require_sturges());
    var _max = _interopRequireDefault(require_max());
    var _maxIndex = _interopRequireDefault(require_maxIndex());
    var _mean = _interopRequireDefault(require_mean());
    var _median = _interopRequireDefault(require_median());
    var _merge = _interopRequireDefault(require_merge());
    var _min = _interopRequireDefault(require_min());
    var _minIndex = _interopRequireDefault(require_minIndex());
    var _mode = _interopRequireDefault(require_mode());
    var _nice = _interopRequireDefault(require_nice());
    var _pairs = _interopRequireDefault(require_pairs());
    var _permute = _interopRequireDefault(require_permute());
    var _quantile = _interopRequireWildcard(require_quantile());
    var _quickselect = _interopRequireDefault(require_quickselect());
    var _range = _interopRequireDefault(require_range());
    var _rank = _interopRequireDefault(require_rank());
    var _least = _interopRequireDefault(require_least());
    var _leastIndex = _interopRequireDefault(require_leastIndex());
    var _greatest = _interopRequireDefault(require_greatest());
    var _greatestIndex = _interopRequireDefault(require_greatestIndex());
    var _scan = _interopRequireDefault(require_scan());
    var _shuffle = _interopRequireWildcard(require_shuffle());
    var _sum = _interopRequireDefault(require_sum());
    var _ticks = _interopRequireWildcard(require_ticks());
    var _transpose = _interopRequireDefault(require_transpose());
    var _variance = _interopRequireDefault(require_variance());
    var _zip = _interopRequireDefault(require_zip());
    var _every = _interopRequireDefault(require_every());
    var _some = _interopRequireDefault(require_some());
    var _filter = _interopRequireDefault(require_filter());
    var _map = _interopRequireDefault(require_map());
    var _reduce = _interopRequireDefault(require_reduce());
    var _reverse = _interopRequireDefault(require_reverse2());
    var _sort = _interopRequireDefault(require_sort());
    var _difference = _interopRequireDefault(require_difference());
    var _disjoint = _interopRequireDefault(require_disjoint());
    var _intersection = _interopRequireDefault(require_intersection());
    var _subset = _interopRequireDefault(require_subset());
    var _superset = _interopRequireDefault(require_superset());
    var _union = _interopRequireDefault(require_union());
    var _index = require_src3();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/init.js
var require_init = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/init.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.initInterpolator = initInterpolator;
    exports.initRange = initRange;
    function initRange(domain, range) {
      switch (arguments.length) {
        case 0:
          break;
        case 1:
          this.range(domain);
          break;
        default:
          this.range(range).domain(domain);
          break;
      }
      return this;
    }
    function initInterpolator(domain, interpolator) {
      switch (arguments.length) {
        case 0:
          break;
        case 1: {
          if (typeof domain === "function") this.interpolator(domain);
          else this.range(domain);
          break;
        }
        default: {
          this.domain(domain);
          if (typeof interpolator === "function") this.interpolator(interpolator);
          else this.range(interpolator);
          break;
        }
      }
      return this;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/ordinal.js
var require_ordinal = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/ordinal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = ordinal;
    exports.implicit = void 0;
    var _index = require_src4();
    var _init = require_init();
    var implicit = Symbol("implicit");
    exports.implicit = implicit;
    function ordinal() {
      var index = new _index.InternMap(), domain = [], range = [], unknown = implicit;
      function scale(d) {
        let i = index.get(d);
        if (i === void 0) {
          if (unknown !== implicit) return unknown;
          index.set(d, i = domain.push(d) - 1);
        }
        return range[i % range.length];
      }
      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = new _index.InternMap();
        for (const value of _) {
          if (index.has(value)) continue;
          index.set(value, domain.push(value) - 1);
        }
        return scale;
      };
      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), scale) : range.slice();
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.copy = function() {
        return ordinal(domain, range).unknown(unknown);
      };
      _init.initRange.apply(scale, arguments);
      return scale;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/band.js
var require_band = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/band.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = band;
    exports.point = point;
    var _index = require_src4();
    var _init = require_init();
    var _ordinal = _interopRequireDefault(require_ordinal());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function band() {
      var scale = (0, _ordinal.default)().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round2 = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
      delete scale.unknown;
      function rescale() {
        var n = domain().length, reverse = r1 < r0, start = reverse ? r1 : r0, stop = reverse ? r0 : r1;
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round2) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round2) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = (0, _index.range)(n).map(function(i) {
          return start + step * i;
        });
        return ordinalRange(reverse ? values.reverse() : values);
      }
      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };
      scale.range = function(_) {
        return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
      };
      scale.rangeRound = function(_) {
        return [r0, r1] = _, r0 = +r0, r1 = +r1, round2 = true, rescale();
      };
      scale.bandwidth = function() {
        return bandwidth;
      };
      scale.step = function() {
        return step;
      };
      scale.round = function(_) {
        return arguments.length ? (round2 = !!_, rescale()) : round2;
      };
      scale.padding = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
      };
      scale.paddingInner = function(_) {
        return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
      };
      scale.paddingOuter = function(_) {
        return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
      };
      scale.align = function(_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
      };
      scale.copy = function() {
        return band(domain(), [r0, r1]).round(round2).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
      };
      return _init.initRange.apply(rescale(), arguments);
    }
    function pointish(scale) {
      var copy = scale.copy;
      scale.padding = scale.paddingOuter;
      delete scale.paddingInner;
      delete scale.paddingOuter;
      scale.copy = function() {
        return pointish(copy());
      };
      return scale;
    }
    function point() {
      return pointish(band.apply(null, arguments).paddingInner(1));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/define.js
var require_define = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/define.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.extend = extend;
    function _default(constructor, factory, prototype) {
      constructor.prototype = factory.prototype = prototype;
      prototype.constructor = constructor;
    }
    function extend(parent, definition) {
      var prototype = Object.create(parent.prototype);
      for (var key in definition) prototype[key] = definition[key];
      return prototype;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/color.js
var require_color = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Color = Color;
    exports.Rgb = Rgb;
    exports.darker = exports.brighter = void 0;
    exports.default = color;
    exports.hsl = hsl;
    exports.hslConvert = hslConvert;
    exports.rgb = rgb;
    exports.rgbConvert = rgbConvert;
    var _define = _interopRequireWildcard(require_define());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function Color() {
    }
    var darker = 0.7;
    exports.darker = darker;
    var brighter = 1 / darker;
    exports.brighter = brighter;
    var reI = "\\s*([+-]?\\d+)\\s*";
    var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
    var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
    var reHex = /^#([0-9a-f]{3,8})$/;
    var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
    var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
    var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
    var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
    var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
    var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
    var named = {
      aliceblue: 15792383,
      antiquewhite: 16444375,
      aqua: 65535,
      aquamarine: 8388564,
      azure: 15794175,
      beige: 16119260,
      bisque: 16770244,
      black: 0,
      blanchedalmond: 16772045,
      blue: 255,
      blueviolet: 9055202,
      brown: 10824234,
      burlywood: 14596231,
      cadetblue: 6266528,
      chartreuse: 8388352,
      chocolate: 13789470,
      coral: 16744272,
      cornflowerblue: 6591981,
      cornsilk: 16775388,
      crimson: 14423100,
      cyan: 65535,
      darkblue: 139,
      darkcyan: 35723,
      darkgoldenrod: 12092939,
      darkgray: 11119017,
      darkgreen: 25600,
      darkgrey: 11119017,
      darkkhaki: 12433259,
      darkmagenta: 9109643,
      darkolivegreen: 5597999,
      darkorange: 16747520,
      darkorchid: 10040012,
      darkred: 9109504,
      darksalmon: 15308410,
      darkseagreen: 9419919,
      darkslateblue: 4734347,
      darkslategray: 3100495,
      darkslategrey: 3100495,
      darkturquoise: 52945,
      darkviolet: 9699539,
      deeppink: 16716947,
      deepskyblue: 49151,
      dimgray: 6908265,
      dimgrey: 6908265,
      dodgerblue: 2003199,
      firebrick: 11674146,
      floralwhite: 16775920,
      forestgreen: 2263842,
      fuchsia: 16711935,
      gainsboro: 14474460,
      ghostwhite: 16316671,
      gold: 16766720,
      goldenrod: 14329120,
      gray: 8421504,
      green: 32768,
      greenyellow: 11403055,
      grey: 8421504,
      honeydew: 15794160,
      hotpink: 16738740,
      indianred: 13458524,
      indigo: 4915330,
      ivory: 16777200,
      khaki: 15787660,
      lavender: 15132410,
      lavenderblush: 16773365,
      lawngreen: 8190976,
      lemonchiffon: 16775885,
      lightblue: 11393254,
      lightcoral: 15761536,
      lightcyan: 14745599,
      lightgoldenrodyellow: 16448210,
      lightgray: 13882323,
      lightgreen: 9498256,
      lightgrey: 13882323,
      lightpink: 16758465,
      lightsalmon: 16752762,
      lightseagreen: 2142890,
      lightskyblue: 8900346,
      lightslategray: 7833753,
      lightslategrey: 7833753,
      lightsteelblue: 11584734,
      lightyellow: 16777184,
      lime: 65280,
      limegreen: 3329330,
      linen: 16445670,
      magenta: 16711935,
      maroon: 8388608,
      mediumaquamarine: 6737322,
      mediumblue: 205,
      mediumorchid: 12211667,
      mediumpurple: 9662683,
      mediumseagreen: 3978097,
      mediumslateblue: 8087790,
      mediumspringgreen: 64154,
      mediumturquoise: 4772300,
      mediumvioletred: 13047173,
      midnightblue: 1644912,
      mintcream: 16121850,
      mistyrose: 16770273,
      moccasin: 16770229,
      navajowhite: 16768685,
      navy: 128,
      oldlace: 16643558,
      olive: 8421376,
      olivedrab: 7048739,
      orange: 16753920,
      orangered: 16729344,
      orchid: 14315734,
      palegoldenrod: 15657130,
      palegreen: 10025880,
      paleturquoise: 11529966,
      palevioletred: 14381203,
      papayawhip: 16773077,
      peachpuff: 16767673,
      peru: 13468991,
      pink: 16761035,
      plum: 14524637,
      powderblue: 11591910,
      purple: 8388736,
      rebeccapurple: 6697881,
      red: 16711680,
      rosybrown: 12357519,
      royalblue: 4286945,
      saddlebrown: 9127187,
      salmon: 16416882,
      sandybrown: 16032864,
      seagreen: 3050327,
      seashell: 16774638,
      sienna: 10506797,
      silver: 12632256,
      skyblue: 8900331,
      slateblue: 6970061,
      slategray: 7372944,
      slategrey: 7372944,
      snow: 16775930,
      springgreen: 65407,
      steelblue: 4620980,
      tan: 13808780,
      teal: 32896,
      thistle: 14204888,
      tomato: 16737095,
      turquoise: 4251856,
      violet: 15631086,
      wheat: 16113331,
      white: 16777215,
      whitesmoke: 16119285,
      yellow: 16776960,
      yellowgreen: 10145074
    };
    (0, _define.default)(Color, color, {
      copy(channels) {
        return Object.assign(new this.constructor(), this, channels);
      },
      displayable() {
        return this.rgb().displayable();
      },
      hex: color_formatHex,
      // Deprecated! Use color.formatHex.
      formatHex: color_formatHex,
      formatHex8: color_formatHex8,
      formatHsl: color_formatHsl,
      formatRgb: color_formatRgb,
      toString: color_formatRgb
    });
    function color_formatHex() {
      return this.rgb().formatHex();
    }
    function color_formatHex8() {
      return this.rgb().formatHex8();
    }
    function color_formatHsl() {
      return hslConvert(this).formatHsl();
    }
    function color_formatRgb() {
      return this.rgb().formatRgb();
    }
    function color(format) {
      var m, l;
      format = (format + "").trim().toLowerCase();
      return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format) ? rgbn(named[format]) : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
    }
    function rgbn(n) {
      return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
    }
    function rgba(r, g, b, a) {
      if (a <= 0) r = g = b = NaN;
      return new Rgb(r, g, b, a);
    }
    function rgbConvert(o) {
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Rgb();
      o = o.rgb();
      return new Rgb(o.r, o.g, o.b, o.opacity);
    }
    function rgb(r, g, b, opacity) {
      return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }
    function Rgb(r, g, b, opacity) {
      this.r = +r;
      this.g = +g;
      this.b = +b;
      this.opacity = +opacity;
    }
    (0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
      brighter(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb() {
        return this;
      },
      clamp() {
        return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
      },
      displayable() {
        return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
      },
      hex: rgb_formatHex,
      // Deprecated! Use color.formatHex.
      formatHex: rgb_formatHex,
      formatHex8: rgb_formatHex8,
      formatRgb: rgb_formatRgb,
      toString: rgb_formatRgb
    }));
    function rgb_formatHex() {
      return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
    }
    function rgb_formatHex8() {
      return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
    }
    function rgb_formatRgb() {
      const a = clampa(this.opacity);
      return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
    }
    function clampa(opacity) {
      return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
    }
    function clampi(value) {
      return Math.max(0, Math.min(255, Math.round(value) || 0));
    }
    function hex(value) {
      value = clampi(value);
      return (value < 16 ? "0" : "") + value.toString(16);
    }
    function hsla(h, s, l, a) {
      if (a <= 0) h = s = l = NaN;
      else if (l <= 0 || l >= 1) h = s = NaN;
      else if (s <= 0) h = NaN;
      return new Hsl(h, s, l, a);
    }
    function hslConvert(o) {
      if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Hsl();
      if (o instanceof Hsl) return o;
      o = o.rgb();
      var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
      if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;
        else if (g === max) h = (b - r) / s + 2;
        else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
      } else {
        s = l > 0 && l < 1 ? 0 : h;
      }
      return new Hsl(h, s, l, o.opacity);
    }
    function hsl(h, s, l, opacity) {
      return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }
    function Hsl(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }
    (0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
      brighter(k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker(k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb() {
        var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
      },
      clamp() {
        return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
      },
      displayable() {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
      },
      formatHsl() {
        const a = clampa(this.opacity);
        return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
      }
    }));
    function clamph(value) {
      value = (value || 0) % 360;
      return value < 0 ? value + 360 : value;
    }
    function clampt(value) {
      return Math.max(0, Math.min(1, value || 0));
    }
    function hsl2rgb(h, m1, m2) {
      return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/math.js
var require_math2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/math.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.radians = exports.degrees = void 0;
    var radians = Math.PI / 180;
    exports.radians = radians;
    var degrees = 180 / Math.PI;
    exports.degrees = degrees;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/lab.js
var require_lab = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/lab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Hcl = Hcl;
    exports.Lab = Lab;
    exports.default = lab;
    exports.gray = gray;
    exports.hcl = hcl;
    exports.lch = lch;
    var _define = _interopRequireWildcard(require_define());
    var _color = require_color();
    var _math = require_math2();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var K = 18;
    var Xn = 0.96422;
    var Yn = 1;
    var Zn = 0.82521;
    var t0 = 4 / 29;
    var t1 = 6 / 29;
    var t2 = 3 * t1 * t1;
    var t3 = t1 * t1 * t1;
    function labConvert(o) {
      if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
      if (o instanceof Hcl) return hcl2lab(o);
      if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
      var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
      if (r === g && g === b) x = z = y;
      else {
        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
      }
      return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
    }
    function gray(l, opacity) {
      return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
    }
    function lab(l, a, b, opacity) {
      return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
    }
    function Lab(l, a, b, opacity) {
      this.l = +l;
      this.a = +a;
      this.b = +b;
      this.opacity = +opacity;
    }
    (0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
      brighter(k) {
        return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      darker(k) {
        return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      rgb() {
        var y = (this.l + 16) / 116, x = isNaN(this.a) ? y : y + this.a / 500, z = isNaN(this.b) ? y : y - this.b / 200;
        x = Xn * lab2xyz(x);
        y = Yn * lab2xyz(y);
        z = Zn * lab2xyz(z);
        return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.033454 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
      }
    }));
    function xyz2lab(t) {
      return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
    }
    function lab2xyz(t) {
      return t > t1 ? t * t * t : t2 * (t - t0);
    }
    function lrgb2rgb(x) {
      return 255 * (x <= 31308e-7 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
    }
    function rgb2lrgb(x) {
      return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
    }
    function hclConvert(o) {
      if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
      if (!(o instanceof Lab)) o = labConvert(o);
      if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
      var h = Math.atan2(o.b, o.a) * _math.degrees;
      return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
    }
    function lch(l, c, h, opacity) {
      return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }
    function hcl(h, c, l, opacity) {
      return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }
    function Hcl(h, c, l, opacity) {
      this.h = +h;
      this.c = +c;
      this.l = +l;
      this.opacity = +opacity;
    }
    function hcl2lab(o) {
      if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
      var h = o.h * _math.radians;
      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
    }
    (0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
      brighter(k) {
        return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
      },
      darker(k) {
        return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
      },
      rgb() {
        return hcl2lab(this).rgb();
      }
    }));
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/cubehelix.js
var require_cubehelix = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/cubehelix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Cubehelix = Cubehelix;
    exports.default = cubehelix;
    var _define = _interopRequireWildcard(require_define());
    var _color = require_color();
    var _math = require_math2();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var A = -0.14861;
    var B = 1.78277;
    var C = -0.29227;
    var D = -0.90649;
    var E = 1.97294;
    var ED = E * D;
    var EB = E * B;
    var BC_DA = B * C - D * A;
    function cubehelixConvert(o) {
      if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
      var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB), bl = b - l, k = (E * (g - l) - C * bl) / D, s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), h = s ? Math.atan2(k, bl) * _math.degrees - 120 : NaN;
      return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
    }
    function cubehelix(h, s, l, opacity) {
      return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
    }
    function Cubehelix(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }
    (0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
      brighter(k) {
        k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      darker(k) {
        k = k == null ? _color.darker : Math.pow(_color.darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      rgb() {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.radians, l = +this.l, a = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);
        return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
      }
    }));
  }
});

// node_modules/victory-vendor/lib-vendor/d3-color/src/index.js
var require_src5 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-color/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "color", {
      enumerable: true,
      get: function() {
        return _color.default;
      }
    });
    Object.defineProperty(exports, "cubehelix", {
      enumerable: true,
      get: function() {
        return _cubehelix.default;
      }
    });
    Object.defineProperty(exports, "gray", {
      enumerable: true,
      get: function() {
        return _lab.gray;
      }
    });
    Object.defineProperty(exports, "hcl", {
      enumerable: true,
      get: function() {
        return _lab.hcl;
      }
    });
    Object.defineProperty(exports, "hsl", {
      enumerable: true,
      get: function() {
        return _color.hsl;
      }
    });
    Object.defineProperty(exports, "lab", {
      enumerable: true,
      get: function() {
        return _lab.default;
      }
    });
    Object.defineProperty(exports, "lch", {
      enumerable: true,
      get: function() {
        return _lab.lch;
      }
    });
    Object.defineProperty(exports, "rgb", {
      enumerable: true,
      get: function() {
        return _color.rgb;
      }
    });
    var _color = _interopRequireWildcard(require_color());
    var _lab = _interopRequireWildcard(require_lab());
    var _cubehelix = _interopRequireDefault(require_cubehelix());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/basis.js
var require_basis2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/basis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.basis = basis;
    exports.default = _default;
    function basis(t1, v0, v1, v2, v3) {
      var t2 = t1 * t1, t3 = t2 * t1;
      return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
    }
    function _default(values) {
      var n = values.length - 1;
      return function(t) {
        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = i > 0 ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/basisClosed.js
var require_basisClosed2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/basisClosed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _basis = require_basis2();
    function _default(values) {
      var n = values.length;
      return function(t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
        return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/constant.js
var require_constant4 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/constant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _default = (x) => () => x;
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/color.js
var require_color2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nogamma;
    exports.gamma = gamma;
    exports.hue = hue;
    var _constant = _interopRequireDefault(require_constant4());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function linear(a, d) {
      return function(t) {
        return a + t * d;
      };
    }
    function exponential(a, b, y) {
      return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
        return Math.pow(a + t * b, y);
      };
    }
    function hue(a, b) {
      var d = b - a;
      return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
    }
    function gamma(y) {
      return (y = +y) === 1 ? nogamma : function(a, b) {
        return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
      };
    }
    function nogamma(a, b) {
      var d = b - a;
      return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/rgb.js
var require_rgb = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/rgb.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;
    var _index = require_src5();
    var _basis = _interopRequireDefault(require_basis2());
    var _basisClosed = _interopRequireDefault(require_basisClosed2());
    var _color = _interopRequireWildcard(require_color2());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = function rgbGamma(y) {
      var color = (0, _color.gamma)(y);
      function rgb(start, end) {
        var r = color((start = (0, _index.rgb)(start)).r, (end = (0, _index.rgb)(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }
      rgb.gamma = rgbGamma;
      return rgb;
    }(1);
    exports.default = _default;
    function rgbSpline(spline) {
      return function(colors) {
        var n = colors.length, r = new Array(n), g = new Array(n), b = new Array(n), i, color;
        for (i = 0; i < n; ++i) {
          color = (0, _index.rgb)(colors[i]);
          r[i] = color.r || 0;
          g[i] = color.g || 0;
          b[i] = color.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color.opacity = 1;
        return function(t) {
          color.r = r(t);
          color.g = g(t);
          color.b = b(t);
          return color + "";
        };
      };
    }
    var rgbBasis = rgbSpline(_basis.default);
    exports.rgbBasis = rgbBasis;
    var rgbBasisClosed = rgbSpline(_basisClosed.default);
    exports.rgbBasisClosed = rgbBasisClosed;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/numberArray.js
var require_numberArray = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/numberArray.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.isNumberArray = isNumberArray;
    function _default(a, b) {
      if (!b) b = [];
      var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
      return function(t) {
        for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
        return c;
      };
    }
    function isNumberArray(x) {
      return ArrayBuffer.isView(x) && !(x instanceof DataView);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/array.js
var require_array3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/array.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.genericArray = genericArray;
    var _value = _interopRequireDefault(require_value());
    var _numberArray = _interopRequireWildcard(require_numberArray());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(a, b) {
      return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
    }
    function genericArray(a, b) {
      var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
      for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);
      for (; i < nb; ++i) c[i] = b[i];
      return function(t) {
        for (i = 0; i < na; ++i) c[i] = x[i](t);
        return c;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/date.js
var require_date = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/date.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(a, b) {
      var d = /* @__PURE__ */ new Date();
      return a = +a, b = +b, function(t) {
        return d.setTime(a * (1 - t) + b * t), d;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/number.js
var require_number2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(a, b) {
      return a = +a, b = +b, function(t) {
        return a * (1 - t) + b * t;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/object.js
var require_object = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/object.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _value = _interopRequireDefault(require_value());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(a, b) {
      var i = {}, c = {}, k;
      if (a === null || typeof a !== "object") a = {};
      if (b === null || typeof b !== "object") b = {};
      for (k in b) {
        if (k in a) {
          i[k] = (0, _value.default)(a[k], b[k]);
        } else {
          c[k] = b[k];
        }
      }
      return function(t) {
        for (k in i) c[k] = i[k](t);
        return c;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/string.js
var require_string = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _number = _interopRequireDefault(require_number2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
    var reB = new RegExp(reA.source, "g");
    function zero(b) {
      return function() {
        return b;
      };
    }
    function one(b) {
      return function(t) {
        return b(t) + "";
      };
    }
    function _default(a, b) {
      var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
      a = a + "", b = b + "";
      while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
        if ((bs = bm.index) > bi) {
          bs = b.slice(bi, bs);
          if (s[i]) s[i] += bs;
          else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
          if (s[i]) s[i] += bm;
          else s[++i] = bm;
        } else {
          s[++i] = null;
          q.push({
            i,
            x: (0, _number.default)(am, bm)
          });
        }
        bi = reB.lastIndex;
      }
      if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs;
        else s[++i] = bs;
      }
      return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
        for (var i2 = 0, o; i2 < b; ++i2) s[(o = q[i2]).i] = o.x(t);
        return s.join("");
      });
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/value.js
var require_value = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/value.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _index = require_src5();
    var _rgb = _interopRequireDefault(require_rgb());
    var _array = require_array3();
    var _date = _interopRequireDefault(require_date());
    var _number = _interopRequireDefault(require_number2());
    var _object = _interopRequireDefault(require_object());
    var _string = _interopRequireDefault(require_string());
    var _constant = _interopRequireDefault(require_constant4());
    var _numberArray = _interopRequireWildcard(require_numberArray());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(a, b) {
      var t = typeof b, c;
      return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _index.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _index.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/discrete.js
var require_discrete = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/discrete.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(range) {
      var n = range.length;
      return function(t) {
        return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hue.js
var require_hue = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _color = require_color2();
    function _default(a, b) {
      var i = (0, _color.hue)(+a, +b);
      return function(t) {
        var x = i(t);
        return x - 360 * Math.floor(x / 360);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/round.js
var require_round = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/round.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(a, b) {
      return a = +a, b = +b, function(t) {
        return Math.round(a * (1 - t) + b * t);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/decompose.js
var require_decompose = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/decompose.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.identity = void 0;
    var degrees = 180 / Math.PI;
    var identity = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };
    exports.identity = identity;
    function _default(a, b, c, d, e, f) {
      var scaleX, scaleY, skewX;
      if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
      if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
      if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
      if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
      return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX,
        scaleY
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/parse.js
var require_parse = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.parseCss = parseCss;
    exports.parseSvg = parseSvg;
    var _decompose = _interopRequireWildcard(require_decompose());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var svgNode;
    function parseCss(value) {
      const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
      return m.isIdentity ? _decompose.identity : (0, _decompose.default)(m.a, m.b, m.c, m.d, m.e, m.f);
    }
    function parseSvg(value) {
      if (value == null) return _decompose.identity;
      if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
      svgNode.setAttribute("transform", value);
      if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
      value = value.matrix;
      return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/index.js
var require_transform = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/transform/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;
    var _number = _interopRequireDefault(require_number2());
    var _parse = require_parse();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function interpolateTransform(parse, pxComma, pxParen, degParen) {
      function pop(s) {
        return s.length ? s.pop() + " " : "";
      }
      function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push("translate(", null, pxComma, null, pxParen);
          q.push({
            i: i - 4,
            x: (0, _number.default)(xa, xb)
          }, {
            i: i - 2,
            x: (0, _number.default)(ya, yb)
          });
        } else if (xb || yb) {
          s.push("translate(" + xb + pxComma + yb + pxParen);
        }
      }
      function rotate(a, b, s, q) {
        if (a !== b) {
          if (a - b > 180) b += 360;
          else if (b - a > 180) a += 360;
          q.push({
            i: s.push(pop(s) + "rotate(", null, degParen) - 2,
            x: (0, _number.default)(a, b)
          });
        } else if (b) {
          s.push(pop(s) + "rotate(" + b + degParen);
        }
      }
      function skewX(a, b, s, q) {
        if (a !== b) {
          q.push({
            i: s.push(pop(s) + "skewX(", null, degParen) - 2,
            x: (0, _number.default)(a, b)
          });
        } else if (b) {
          s.push(pop(s) + "skewX(" + b + degParen);
        }
      }
      function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push(pop(s) + "scale(", null, ",", null, ")");
          q.push({
            i: i - 4,
            x: (0, _number.default)(xa, xb)
          }, {
            i: i - 2,
            x: (0, _number.default)(ya, yb)
          });
        } else if (xb !== 1 || yb !== 1) {
          s.push(pop(s) + "scale(" + xb + "," + yb + ")");
        }
      }
      return function(a, b) {
        var s = [], q = [];
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null;
        return function(t) {
          var i = -1, n = q.length, o;
          while (++i < n) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        };
      };
    }
    var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
    exports.interpolateTransformCss = interpolateTransformCss;
    var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
    exports.interpolateTransformSvg = interpolateTransformSvg;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/zoom.js
var require_zoom = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/zoom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var epsilon2 = 1e-12;
    function cosh(x) {
      return ((x = Math.exp(x)) + 1 / x) / 2;
    }
    function sinh(x) {
      return ((x = Math.exp(x)) - 1 / x) / 2;
    }
    function tanh(x) {
      return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }
    var _default = function zoomRho(rho, rho2, rho4) {
      function zoom(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
        if (d2 < epsilon2) {
          S = Math.log(w1 / w0) / rho;
          i = function(t) {
            return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
          };
        } else {
          var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
          S = (r1 - r0) / rho;
          i = function(t) {
            var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
            return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
          };
        }
        i.duration = S * 1e3 * rho / Math.SQRT2;
        return i;
      }
      zoom.rho = function(_) {
        var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
        return zoomRho(_1, _2, _4);
      };
      return zoom;
    }(Math.SQRT2, 2, 4);
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hsl.js
var require_hsl = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hsl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hslLong = exports.default = void 0;
    var _index = require_src5();
    var _color = _interopRequireWildcard(require_color2());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function hsl(hue) {
      return function(start, end) {
        var h = hue((start = (0, _index.hsl)(start)).h, (end = (0, _index.hsl)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }
    var _default = hsl(_color.hue);
    exports.default = _default;
    var hslLong = hsl(_color.default);
    exports.hslLong = hslLong;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/lab.js
var require_lab2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/lab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = lab;
    var _index = require_src5();
    var _color = _interopRequireDefault(require_color2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function lab(start, end) {
      var l = (0, _color.default)((start = (0, _index.lab)(start)).l, (end = (0, _index.lab)(end)).l), a = (0, _color.default)(start.a, end.a), b = (0, _color.default)(start.b, end.b), opacity = (0, _color.default)(start.opacity, end.opacity);
      return function(t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hcl.js
var require_hcl = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/hcl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hclLong = exports.default = void 0;
    var _index = require_src5();
    var _color = _interopRequireWildcard(require_color2());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function hcl(hue) {
      return function(start, end) {
        var h = hue((start = (0, _index.hcl)(start)).h, (end = (0, _index.hcl)(end)).h), c = (0, _color.default)(start.c, end.c), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.c = c(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }
    var _default = hcl(_color.hue);
    exports.default = _default;
    var hclLong = hcl(_color.default);
    exports.hclLong = hclLong;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/cubehelix.js
var require_cubehelix2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/cubehelix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.cubehelixLong = void 0;
    var _index = require_src5();
    var _color = _interopRequireWildcard(require_color2());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function cubehelix(hue) {
      return function cubehelixGamma(y) {
        y = +y;
        function cubehelix2(start, end) {
          var h = hue((start = (0, _index.cubehelix)(start)).h, (end = (0, _index.cubehelix)(end)).h), s = (0, _color.default)(start.s, end.s), l = (0, _color.default)(start.l, end.l), opacity = (0, _color.default)(start.opacity, end.opacity);
          return function(t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(Math.pow(t, y));
            start.opacity = opacity(t);
            return start + "";
          };
        }
        cubehelix2.gamma = cubehelixGamma;
        return cubehelix2;
      }(1);
    }
    var _default = cubehelix(_color.hue);
    exports.default = _default;
    var cubehelixLong = cubehelix(_color.default);
    exports.cubehelixLong = cubehelixLong;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/piecewise.js
var require_piecewise = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/piecewise.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = piecewise;
    var _value = _interopRequireDefault(require_value());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function piecewise(interpolate, values) {
      if (values === void 0) values = interpolate, interpolate = _value.default;
      var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
      while (i < n) I[i] = interpolate(v, v = values[++i]);
      return function(t) {
        var i2 = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
        return I[i2](t - i2);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/quantize.js
var require_quantize = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/quantize.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(interpolator, n) {
      var samples = new Array(n);
      for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
      return samples;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-interpolate/src/index.js
var require_src6 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-interpolate/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "interpolate", {
      enumerable: true,
      get: function() {
        return _value.default;
      }
    });
    Object.defineProperty(exports, "interpolateArray", {
      enumerable: true,
      get: function() {
        return _array.default;
      }
    });
    Object.defineProperty(exports, "interpolateBasis", {
      enumerable: true,
      get: function() {
        return _basis.default;
      }
    });
    Object.defineProperty(exports, "interpolateBasisClosed", {
      enumerable: true,
      get: function() {
        return _basisClosed.default;
      }
    });
    Object.defineProperty(exports, "interpolateCubehelix", {
      enumerable: true,
      get: function() {
        return _cubehelix.default;
      }
    });
    Object.defineProperty(exports, "interpolateCubehelixLong", {
      enumerable: true,
      get: function() {
        return _cubehelix.cubehelixLong;
      }
    });
    Object.defineProperty(exports, "interpolateDate", {
      enumerable: true,
      get: function() {
        return _date.default;
      }
    });
    Object.defineProperty(exports, "interpolateDiscrete", {
      enumerable: true,
      get: function() {
        return _discrete.default;
      }
    });
    Object.defineProperty(exports, "interpolateHcl", {
      enumerable: true,
      get: function() {
        return _hcl.default;
      }
    });
    Object.defineProperty(exports, "interpolateHclLong", {
      enumerable: true,
      get: function() {
        return _hcl.hclLong;
      }
    });
    Object.defineProperty(exports, "interpolateHsl", {
      enumerable: true,
      get: function() {
        return _hsl.default;
      }
    });
    Object.defineProperty(exports, "interpolateHslLong", {
      enumerable: true,
      get: function() {
        return _hsl.hslLong;
      }
    });
    Object.defineProperty(exports, "interpolateHue", {
      enumerable: true,
      get: function() {
        return _hue.default;
      }
    });
    Object.defineProperty(exports, "interpolateLab", {
      enumerable: true,
      get: function() {
        return _lab.default;
      }
    });
    Object.defineProperty(exports, "interpolateNumber", {
      enumerable: true,
      get: function() {
        return _number.default;
      }
    });
    Object.defineProperty(exports, "interpolateNumberArray", {
      enumerable: true,
      get: function() {
        return _numberArray.default;
      }
    });
    Object.defineProperty(exports, "interpolateObject", {
      enumerable: true,
      get: function() {
        return _object.default;
      }
    });
    Object.defineProperty(exports, "interpolateRgb", {
      enumerable: true,
      get: function() {
        return _rgb.default;
      }
    });
    Object.defineProperty(exports, "interpolateRgbBasis", {
      enumerable: true,
      get: function() {
        return _rgb.rgbBasis;
      }
    });
    Object.defineProperty(exports, "interpolateRgbBasisClosed", {
      enumerable: true,
      get: function() {
        return _rgb.rgbBasisClosed;
      }
    });
    Object.defineProperty(exports, "interpolateRound", {
      enumerable: true,
      get: function() {
        return _round.default;
      }
    });
    Object.defineProperty(exports, "interpolateString", {
      enumerable: true,
      get: function() {
        return _string.default;
      }
    });
    Object.defineProperty(exports, "interpolateTransformCss", {
      enumerable: true,
      get: function() {
        return _index.interpolateTransformCss;
      }
    });
    Object.defineProperty(exports, "interpolateTransformSvg", {
      enumerable: true,
      get: function() {
        return _index.interpolateTransformSvg;
      }
    });
    Object.defineProperty(exports, "interpolateZoom", {
      enumerable: true,
      get: function() {
        return _zoom.default;
      }
    });
    Object.defineProperty(exports, "piecewise", {
      enumerable: true,
      get: function() {
        return _piecewise.default;
      }
    });
    Object.defineProperty(exports, "quantize", {
      enumerable: true,
      get: function() {
        return _quantize.default;
      }
    });
    var _value = _interopRequireDefault(require_value());
    var _array = _interopRequireDefault(require_array3());
    var _basis = _interopRequireDefault(require_basis2());
    var _basisClosed = _interopRequireDefault(require_basisClosed2());
    var _date = _interopRequireDefault(require_date());
    var _discrete = _interopRequireDefault(require_discrete());
    var _hue = _interopRequireDefault(require_hue());
    var _number = _interopRequireDefault(require_number2());
    var _numberArray = _interopRequireDefault(require_numberArray());
    var _object = _interopRequireDefault(require_object());
    var _round = _interopRequireDefault(require_round());
    var _string = _interopRequireDefault(require_string());
    var _index = require_transform();
    var _zoom = _interopRequireDefault(require_zoom());
    var _rgb = _interopRequireWildcard(require_rgb());
    var _hsl = _interopRequireWildcard(require_hsl());
    var _lab = _interopRequireDefault(require_lab2());
    var _hcl = _interopRequireWildcard(require_hcl());
    var _cubehelix = _interopRequireWildcard(require_cubehelix2());
    var _piecewise = _interopRequireDefault(require_piecewise());
    var _quantize = _interopRequireDefault(require_quantize());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/constant.js
var require_constant5 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/constant.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = constants;
    function constants(x) {
      return function() {
        return x;
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/number.js
var require_number3 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = number;
    function number(x) {
      return +x;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/continuous.js
var require_continuous = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/continuous.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.copy = copy;
    exports.default = continuous;
    exports.identity = identity;
    exports.transformer = transformer;
    var _index = require_src4();
    var _index2 = require_src6();
    var _constant = _interopRequireDefault(require_constant5());
    var _number = _interopRequireDefault(require_number3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var unit = [0, 1];
    function identity(x) {
      return x;
    }
    function normalize(a, b) {
      return (b -= a = +a) ? function(x) {
        return (x - a) / b;
      } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
    }
    function clamper(a, b) {
      var t;
      if (a > b) t = a, a = b, b = t;
      return function(x) {
        return Math.max(a, Math.min(b, x));
      };
    }
    function bimap(domain, range, interpolate) {
      var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
      if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
      else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
      return function(x) {
        return r0(d0(x));
      };
    }
    function polymap(domain, range, interpolate) {
      var j = Math.min(domain.length, range.length) - 1, d = new Array(j), r = new Array(j), i = -1;
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range = range.slice().reverse();
      }
      while (++i < j) {
        d[i] = normalize(domain[i], domain[i + 1]);
        r[i] = interpolate(range[i], range[i + 1]);
      }
      return function(x) {
        var i2 = (0, _index.bisect)(domain, x, 1, j) - 1;
        return r[i2](d[i2](x));
      };
    }
    function copy(source, target) {
      return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
    }
    function transformer() {
      var domain = unit, range = unit, interpolate = _index2.interpolate, transform, untransform, unknown, clamp = identity, piecewise, output, input;
      function rescale() {
        var n = Math.min(domain.length, range.length);
        if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
        piecewise = n > 2 ? polymap : bimap;
        output = input = null;
        return scale;
      }
      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
      }
      scale.invert = function(y) {
        return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));
      };
      scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();
      };
      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
      };
      scale.rangeRound = function(_) {
        return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();
      };
      scale.clamp = function(_) {
        return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
      };
      scale.interpolate = function(_) {
        return arguments.length ? (interpolate = _, rescale()) : interpolate;
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      return function(t, u) {
        transform = t, untransform = u;
        return rescale();
      };
    }
    function continuous() {
      return transformer()(identity, identity);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatDecimal.js
var require_formatDecimal = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatDecimal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.formatDecimalParts = formatDecimalParts;
    function _default(x) {
      return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
    }
    function formatDecimalParts(x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null;
      var i, coefficient = x.slice(0, i);
      return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/exponent.js
var require_exponent = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/exponent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _formatDecimal = require_formatDecimal();
    function _default(x) {
      return x = (0, _formatDecimal.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatGroup.js
var require_formatGroup = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatGroup.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(grouping, thousands) {
      return function(value, width) {
        var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
        while (i > 0 && g > 0) {
          if (length + g + 1 > width) g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width) break;
          g = grouping[j = (j + 1) % grouping.length];
        }
        return t.reverse().join(thousands);
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatNumerals.js
var require_formatNumerals = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatNumerals.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(numerals) {
      return function(value) {
        return value.replace(/[0-9]/g, function(i) {
          return numerals[+i];
        });
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatSpecifier.js
var require_formatSpecifier = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatSpecifier.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FormatSpecifier = FormatSpecifier;
    exports.default = formatSpecifier;
    var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
    function formatSpecifier(specifier) {
      if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
      var match;
      return new FormatSpecifier({
        fill: match[1],
        align: match[2],
        sign: match[3],
        symbol: match[4],
        zero: match[5],
        width: match[6],
        comma: match[7],
        precision: match[8] && match[8].slice(1),
        trim: match[9],
        type: match[10]
      });
    }
    formatSpecifier.prototype = FormatSpecifier.prototype;
    function FormatSpecifier(specifier) {
      this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
      this.align = specifier.align === void 0 ? ">" : specifier.align + "";
      this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
      this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
      this.zero = !!specifier.zero;
      this.width = specifier.width === void 0 ? void 0 : +specifier.width;
      this.comma = !!specifier.comma;
      this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
      this.trim = !!specifier.trim;
      this.type = specifier.type === void 0 ? "" : specifier.type + "";
    }
    FormatSpecifier.prototype.toString = function() {
      return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
    };
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatTrim.js
var require_formatTrim = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatTrim.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(s) {
      out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
        switch (s[i]) {
          case ".":
            i0 = i1 = i;
            break;
          case "0":
            if (i0 === 0) i0 = i;
            i1 = i;
            break;
          default:
            if (!+s[i]) break out;
            if (i0 > 0) i0 = 0;
            break;
        }
      }
      return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatPrefixAuto.js
var require_formatPrefixAuto = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatPrefixAuto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    exports.prefixExponent = void 0;
    var _formatDecimal = require_formatDecimal();
    var prefixExponent;
    exports.prefixExponent = prefixExponent;
    function _default(x, p) {
      var d = (0, _formatDecimal.formatDecimalParts)(x, p);
      if (!d) return x + "";
      var coefficient = d[0], exponent = d[1], i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
      return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.formatDecimalParts)(x, Math.max(0, p + i - 1))[0];
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatRounded.js
var require_formatRounded = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatRounded.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _formatDecimal = require_formatDecimal();
    function _default(x, p) {
      var d = (0, _formatDecimal.formatDecimalParts)(x, p);
      if (!d) return x + "";
      var coefficient = d[0], exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/formatTypes.js
var require_formatTypes = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/formatTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _formatDecimal = _interopRequireDefault(require_formatDecimal());
    var _formatPrefixAuto = _interopRequireDefault(require_formatPrefixAuto());
    var _formatRounded = _interopRequireDefault(require_formatRounded());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = {
      "%": (x, p) => (x * 100).toFixed(p),
      "b": (x) => Math.round(x).toString(2),
      "c": (x) => x + "",
      "d": _formatDecimal.default,
      "e": (x, p) => x.toExponential(p),
      "f": (x, p) => x.toFixed(p),
      "g": (x, p) => x.toPrecision(p),
      "o": (x) => Math.round(x).toString(8),
      "p": (x, p) => (0, _formatRounded.default)(x * 100, p),
      "r": _formatRounded.default,
      "s": _formatPrefixAuto.default,
      "X": (x) => Math.round(x).toString(16).toUpperCase(),
      "x": (x) => Math.round(x).toString(16)
    };
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/identity.js
var require_identity4 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/identity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    function _default(x) {
      return x;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/locale.js
var require_locale = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/locale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _exponent = _interopRequireDefault(require_exponent());
    var _formatGroup = _interopRequireDefault(require_formatGroup());
    var _formatNumerals = _interopRequireDefault(require_formatNumerals());
    var _formatSpecifier = _interopRequireDefault(require_formatSpecifier());
    var _formatTrim = _interopRequireDefault(require_formatTrim());
    var _formatTypes = _interopRequireDefault(require_formatTypes());
    var _formatPrefixAuto = require_formatPrefixAuto();
    var _identity = _interopRequireDefault(require_identity4());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var map = Array.prototype.map;
    var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
    function _default(locale) {
      var group = locale.grouping === void 0 || locale.thousands === void 0 ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""), currencyPrefix = locale.currency === void 0 ? "" : locale.currency[0] + "", currencySuffix = locale.currency === void 0 ? "" : locale.currency[1] + "", decimal = locale.decimal === void 0 ? "." : locale.decimal + "", numerals = locale.numerals === void 0 ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)), percent = locale.percent === void 0 ? "%" : locale.percent + "", minus = locale.minus === void 0 ? "−" : locale.minus + "", nan = locale.nan === void 0 ? "NaN" : locale.nan + "";
      function newFormat(specifier) {
        specifier = (0, _formatSpecifier.default)(specifier);
        var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
        if (type === "n") comma = true, type = "g";
        else if (!_formatTypes.default[type]) precision === void 0 && (precision = 12), trim = true, type = "g";
        if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";
        var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
        var formatType = _formatTypes.default[type], maybeSuffix = /[defgprs%]/.test(type);
        precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
        function format(value) {
          var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;
            var valueNegative = value < 0 || 1 / value < 0;
            value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
            if (trim) value = (0, _formatTrim.default)(value);
            if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;
            valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }
          if (comma && !zero) value = group(value, Infinity);
          var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
          if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
          switch (align) {
            case "<":
              value = valuePrefix + value + valueSuffix + padding;
              break;
            case "=":
              value = valuePrefix + padding + value + valueSuffix;
              break;
            case "^":
              value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
              break;
            default:
              value = padding + valuePrefix + value + valueSuffix;
              break;
          }
          return numerals(value);
        }
        format.toString = function() {
          return specifier + "";
        };
        return format;
      }
      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
        return function(value2) {
          return f(k * value2) + prefix;
        };
      }
      return {
        format: newFormat,
        formatPrefix
      };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/defaultLocale.js
var require_defaultLocale = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/defaultLocale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = defaultLocale;
    exports.formatPrefix = exports.format = void 0;
    var _locale = _interopRequireDefault(require_locale());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale;
    var format;
    exports.format = format;
    var formatPrefix;
    exports.formatPrefix = formatPrefix;
    defaultLocale({
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });
    function defaultLocale(definition) {
      locale = (0, _locale.default)(definition);
      exports.format = format = locale.format;
      exports.formatPrefix = formatPrefix = locale.formatPrefix;
      return locale;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/precisionFixed.js
var require_precisionFixed = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/precisionFixed.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _exponent = _interopRequireDefault(require_exponent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(step) {
      return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/precisionPrefix.js
var require_precisionPrefix = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/precisionPrefix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _exponent = _interopRequireDefault(require_exponent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/precisionRound.js
var require_precisionRound = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/precisionRound.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = _default;
    var _exponent = _interopRequireDefault(require_exponent());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _default(step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-format/src/index.js
var require_src7 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-format/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "FormatSpecifier", {
      enumerable: true,
      get: function() {
        return _formatSpecifier.FormatSpecifier;
      }
    });
    Object.defineProperty(exports, "format", {
      enumerable: true,
      get: function() {
        return _defaultLocale.format;
      }
    });
    Object.defineProperty(exports, "formatDefaultLocale", {
      enumerable: true,
      get: function() {
        return _defaultLocale.default;
      }
    });
    Object.defineProperty(exports, "formatLocale", {
      enumerable: true,
      get: function() {
        return _locale.default;
      }
    });
    Object.defineProperty(exports, "formatPrefix", {
      enumerable: true,
      get: function() {
        return _defaultLocale.formatPrefix;
      }
    });
    Object.defineProperty(exports, "formatSpecifier", {
      enumerable: true,
      get: function() {
        return _formatSpecifier.default;
      }
    });
    Object.defineProperty(exports, "precisionFixed", {
      enumerable: true,
      get: function() {
        return _precisionFixed.default;
      }
    });
    Object.defineProperty(exports, "precisionPrefix", {
      enumerable: true,
      get: function() {
        return _precisionPrefix.default;
      }
    });
    Object.defineProperty(exports, "precisionRound", {
      enumerable: true,
      get: function() {
        return _precisionRound.default;
      }
    });
    var _defaultLocale = _interopRequireWildcard(require_defaultLocale());
    var _locale = _interopRequireDefault(require_locale());
    var _formatSpecifier = _interopRequireWildcard(require_formatSpecifier());
    var _precisionFixed = _interopRequireDefault(require_precisionFixed());
    var _precisionPrefix = _interopRequireDefault(require_precisionPrefix());
    var _precisionRound = _interopRequireDefault(require_precisionRound());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/tickFormat.js
var require_tickFormat = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/tickFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = tickFormat;
    var _index = require_src4();
    var _index2 = require_src7();
    function tickFormat(start, stop, count, specifier) {
      var step = (0, _index.tickStep)(start, stop, count), precision;
      specifier = (0, _index2.formatSpecifier)(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s": {
          var value = Math.max(Math.abs(start), Math.abs(stop));
          if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionPrefix)(step, value))) specifier.precision = precision;
          return (0, _index2.formatPrefix)(specifier, value);
        }
        case "":
        case "e":
        case "g":
        case "p":
        case "r": {
          if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
          break;
        }
        case "f":
        case "%": {
          if (specifier.precision == null && !isNaN(precision = (0, _index2.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
          break;
        }
      }
      return (0, _index2.format)(specifier);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/linear.js
var require_linear2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/linear.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = linear;
    exports.linearish = linearish;
    var _index = require_src4();
    var _continuous = _interopRequireWildcard(require_continuous());
    var _init = require_init();
    var _tickFormat = _interopRequireDefault(require_tickFormat());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function linearish(scale) {
      var domain = scale.domain;
      scale.ticks = function(count) {
        var d = domain();
        return (0, _index.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
      };
      scale.tickFormat = function(count, specifier) {
        var d = domain();
        return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
      };
      scale.nice = function(count) {
        if (count == null) count = 10;
        var d = domain();
        var i0 = 0;
        var i1 = d.length - 1;
        var start = d[i0];
        var stop = d[i1];
        var prestep;
        var step;
        var maxIter = 10;
        if (stop < start) {
          step = start, start = stop, stop = step;
          step = i0, i0 = i1, i1 = step;
        }
        while (maxIter-- > 0) {
          step = (0, _index.tickIncrement)(start, stop, count);
          if (step === prestep) {
            d[i0] = start;
            d[i1] = stop;
            return domain(d);
          } else if (step > 0) {
            start = Math.floor(start / step) * step;
            stop = Math.ceil(stop / step) * step;
          } else if (step < 0) {
            start = Math.ceil(start * step) / step;
            stop = Math.floor(stop * step) / step;
          } else {
            break;
          }
          prestep = step;
        }
        return scale;
      };
      return scale;
    }
    function linear() {
      var scale = (0, _continuous.default)();
      scale.copy = function() {
        return (0, _continuous.copy)(scale, linear());
      };
      _init.initRange.apply(scale, arguments);
      return linearish(scale);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/identity.js
var require_identity5 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/identity.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = identity;
    var _linear = require_linear2();
    var _number = _interopRequireDefault(require_number3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function identity(domain) {
      var unknown;
      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : x;
      }
      scale.invert = scale;
      scale.domain = scale.range = function(_) {
        return arguments.length ? (domain = Array.from(_, _number.default), scale) : domain.slice();
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.copy = function() {
        return identity(domain).unknown(unknown);
      };
      domain = arguments.length ? Array.from(domain, _number.default) : [0, 1];
      return (0, _linear.linearish)(scale);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/nice.js
var require_nice2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/nice.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = nice;
    function nice(domain, interval) {
      domain = domain.slice();
      var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
      if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
      }
      domain[i0] = interval.floor(x0);
      domain[i1] = interval.ceil(x1);
      return domain;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/log.js
var require_log = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/log.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = log;
    exports.loggish = loggish;
    var _index = require_src4();
    var _index2 = require_src7();
    var _nice = _interopRequireDefault(require_nice2());
    var _continuous = require_continuous();
    var _init = require_init();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function transformLog(x) {
      return Math.log(x);
    }
    function transformExp(x) {
      return Math.exp(x);
    }
    function transformLogn(x) {
      return -Math.log(-x);
    }
    function transformExpn(x) {
      return -Math.exp(-x);
    }
    function pow10(x) {
      return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
    }
    function powp(base) {
      return base === 10 ? pow10 : base === Math.E ? Math.exp : (x) => Math.pow(base, x);
    }
    function logp(base) {
      return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x) => Math.log(x) / base);
    }
    function reflect(f) {
      return (x, k) => -f(-x, k);
    }
    function loggish(transform) {
      const scale = transform(transformLog, transformExp);
      const domain = scale.domain;
      let base = 10;
      let logs;
      let pows;
      function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) {
          logs = reflect(logs), pows = reflect(pows);
          transform(transformLogn, transformExpn);
        } else {
          transform(transformLog, transformExp);
        }
        return scale;
      }
      scale.base = function(_) {
        return arguments.length ? (base = +_, rescale()) : base;
      };
      scale.domain = function(_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };
      scale.ticks = (count) => {
        const d = domain();
        let u = d[0];
        let v = d[d.length - 1];
        const r = v < u;
        if (r) [u, v] = [v, u];
        let i = logs(u);
        let j = logs(v);
        let k;
        let t;
        const n = count == null ? 10 : +count;
        let z = [];
        if (!(base % 1) && j - i < n) {
          i = Math.floor(i), j = Math.ceil(j);
          if (u > 0) for (; i <= j; ++i) {
            for (k = 1; k < base; ++k) {
              t = i < 0 ? k / pows(-i) : k * pows(i);
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          }
          else for (; i <= j; ++i) {
            for (k = base - 1; k >= 1; --k) {
              t = i > 0 ? k / pows(-i) : k * pows(i);
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          }
          if (z.length * 2 < n) z = (0, _index.ticks)(u, v, n);
        } else {
          z = (0, _index.ticks)(i, j, Math.min(j - i, n)).map(pows);
        }
        return r ? z.reverse() : z;
      };
      scale.tickFormat = (count, specifier) => {
        if (count == null) count = 10;
        if (specifier == null) specifier = base === 10 ? "s" : ",";
        if (typeof specifier !== "function") {
          if (!(base % 1) && (specifier = (0, _index2.formatSpecifier)(specifier)).precision == null) specifier.trim = true;
          specifier = (0, _index2.format)(specifier);
        }
        if (count === Infinity) return specifier;
        const k = Math.max(1, base * count / scale.ticks().length);
        return (d) => {
          let i = d / pows(Math.round(logs(d)));
          if (i * base < base - 0.5) i *= base;
          return i <= k ? specifier(d) : "";
        };
      };
      scale.nice = () => {
        return domain((0, _nice.default)(domain(), {
          floor: (x) => pows(Math.floor(logs(x))),
          ceil: (x) => pows(Math.ceil(logs(x)))
        }));
      };
      return scale;
    }
    function log() {
      const scale = loggish((0, _continuous.transformer)()).domain([1, 10]);
      scale.copy = () => (0, _continuous.copy)(scale, log()).base(scale.base());
      _init.initRange.apply(scale, arguments);
      return scale;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/symlog.js
var require_symlog = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/symlog.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = symlog;
    exports.symlogish = symlogish;
    var _linear = require_linear2();
    var _continuous = require_continuous();
    var _init = require_init();
    function transformSymlog(c) {
      return function(x) {
        return Math.sign(x) * Math.log1p(Math.abs(x / c));
      };
    }
    function transformSymexp(c) {
      return function(x) {
        return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
      };
    }
    function symlogish(transform) {
      var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));
      scale.constant = function(_) {
        return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
      };
      return (0, _linear.linearish)(scale);
    }
    function symlog() {
      var scale = symlogish((0, _continuous.transformer)());
      scale.copy = function() {
        return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
      };
      return _init.initRange.apply(scale, arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/pow.js
var require_pow = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/pow.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = pow;
    exports.powish = powish;
    exports.sqrt = sqrt;
    var _linear = require_linear2();
    var _continuous = require_continuous();
    var _init = require_init();
    function transformPow(exponent) {
      return function(x) {
        return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
      };
    }
    function transformSqrt(x) {
      return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
    }
    function transformSquare(x) {
      return x < 0 ? -x * x : x * x;
    }
    function powish(transform) {
      var scale = transform(_continuous.identity, _continuous.identity), exponent = 1;
      function rescale() {
        return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
      }
      scale.exponent = function(_) {
        return arguments.length ? (exponent = +_, rescale()) : exponent;
      };
      return (0, _linear.linearish)(scale);
    }
    function pow() {
      var scale = powish((0, _continuous.transformer)());
      scale.copy = function() {
        return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
      };
      _init.initRange.apply(scale, arguments);
      return scale;
    }
    function sqrt() {
      return pow.apply(null, arguments).exponent(0.5);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/radial.js
var require_radial2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/radial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = radial;
    var _continuous = _interopRequireDefault(require_continuous());
    var _init = require_init();
    var _linear = require_linear2();
    var _number = _interopRequireDefault(require_number3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function square(x) {
      return Math.sign(x) * x * x;
    }
    function unsquare(x) {
      return Math.sign(x) * Math.sqrt(Math.abs(x));
    }
    function radial() {
      var squared = (0, _continuous.default)(), range = [0, 1], round2 = false, unknown;
      function scale(x) {
        var y = unsquare(squared(x));
        return isNaN(y) ? unknown : round2 ? Math.round(y) : y;
      }
      scale.invert = function(y) {
        return squared.invert(square(y));
      };
      scale.domain = function(_) {
        return arguments.length ? (squared.domain(_), scale) : squared.domain();
      };
      scale.range = function(_) {
        return arguments.length ? (squared.range((range = Array.from(_, _number.default)).map(square)), scale) : range.slice();
      };
      scale.rangeRound = function(_) {
        return scale.range(_).round(true);
      };
      scale.round = function(_) {
        return arguments.length ? (round2 = !!_, scale) : round2;
      };
      scale.clamp = function(_) {
        return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.copy = function() {
        return radial(squared.domain(), range).round(round2).clamp(squared.clamp()).unknown(unknown);
      };
      _init.initRange.apply(scale, arguments);
      return (0, _linear.linearish)(scale);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/quantile.js
var require_quantile2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/quantile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quantile;
    var _index = require_src4();
    var _init = require_init();
    function quantile() {
      var domain = [], range = [], thresholds = [], unknown;
      function rescale() {
        var i = 0, n = Math.max(1, range.length);
        thresholds = new Array(n - 1);
        while (++i < n) thresholds[i - 1] = (0, _index.quantileSorted)(domain, i / n);
        return scale;
      }
      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : range[(0, _index.bisect)(thresholds, x)];
      }
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
      };
      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return rescale();
      };
      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.quantiles = function() {
        return thresholds.slice();
      };
      scale.copy = function() {
        return quantile().domain(domain).range(range).unknown(unknown);
      };
      return _init.initRange.apply(scale, arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/quantize.js
var require_quantize2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/quantize.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = quantize;
    var _index = require_src4();
    var _linear = require_linear2();
    var _init = require_init();
    function quantize() {
      var x0 = 0, x1 = 1, n = 1, domain = [0.5], range = [0, 1], unknown;
      function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
      }
      function rescale() {
        var i = -1;
        domain = new Array(n);
        while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
      }
      scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
      };
      scale.range = function(_) {
        return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
      };
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : scale;
      };
      scale.thresholds = function() {
        return domain.slice();
      };
      scale.copy = function() {
        return quantize().domain([x0, x1]).range(range).unknown(unknown);
      };
      return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/threshold.js
var require_threshold = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/threshold.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = threshold;
    var _index = require_src4();
    var _init = require_init();
    function threshold() {
      var domain = [0.5], range = [0, 1], unknown, n = 1;
      function scale(x) {
        return x != null && x <= x ? range[(0, _index.bisect)(domain, x, 0, n)] : unknown;
      }
      scale.domain = function(_) {
        return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
      };
      scale.range = function(_) {
        return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
      };
      scale.invertExtent = function(y) {
        var i = range.indexOf(y);
        return [domain[i - 1], domain[i]];
      };
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      scale.copy = function() {
        return threshold().domain(domain).range(range).unknown(unknown);
      };
      return _init.initRange.apply(scale, arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/interval.js
var require_interval = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/interval.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = newInterval;
    var t0 = /* @__PURE__ */ new Date();
    var t1 = /* @__PURE__ */ new Date();
    function newInterval(floori, offseti, count, field) {
      function interval(date) {
        return floori(date = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date)), date;
      }
      interval.floor = function(date) {
        return floori(date = /* @__PURE__ */ new Date(+date)), date;
      };
      interval.ceil = function(date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
      };
      interval.round = function(date) {
        var d0 = interval(date), d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
      };
      interval.offset = function(date, step) {
        return offseti(date = /* @__PURE__ */ new Date(+date), step == null ? 1 : Math.floor(step)), date;
      };
      interval.range = function(start, stop, step) {
        var range = [], previous;
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range;
        do
          range.push(previous = /* @__PURE__ */ new Date(+start)), offseti(start, step), floori(start);
        while (previous < start && start < stop);
        return range;
      };
      interval.filter = function(test) {
        return newInterval(function(date) {
          if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
        }, function(date, step) {
          if (date >= date) {
            if (step < 0) while (++step <= 0) {
              while (offseti(date, -1), !test(date)) {
              }
            }
            else while (--step >= 0) {
              while (offseti(date, 1), !test(date)) {
              }
            }
          }
        });
      };
      if (count) {
        interval.count = function(start, end) {
          t0.setTime(+start), t1.setTime(+end);
          floori(t0), floori(t1);
          return Math.floor(count(t0, t1));
        };
        interval.every = function(step) {
          step = Math.floor(step);
          return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d) {
            return field(d) % step === 0;
          } : function(d) {
            return interval.count(0, d) % step === 0;
          });
        };
      }
      return interval;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/millisecond.js
var require_millisecond = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/millisecond.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.milliseconds = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var millisecond = (0, _interval.default)(function() {
    }, function(date, step) {
      date.setTime(+date + step);
    }, function(start, end) {
      return end - start;
    });
    millisecond.every = function(k) {
      k = Math.floor(k);
      if (!isFinite(k) || !(k > 0)) return null;
      if (!(k > 1)) return millisecond;
      return (0, _interval.default)(function(date) {
        date.setTime(Math.floor(date / k) * k);
      }, function(date, step) {
        date.setTime(+date + step * k);
      }, function(start, end) {
        return (end - start) / k;
      });
    };
    var _default = millisecond;
    exports.default = _default;
    var milliseconds = millisecond.range;
    exports.milliseconds = milliseconds;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/duration.js
var require_duration = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/duration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.durationYear = exports.durationWeek = exports.durationSecond = exports.durationMonth = exports.durationMinute = exports.durationHour = exports.durationDay = void 0;
    var durationSecond = 1e3;
    exports.durationSecond = durationSecond;
    var durationMinute = durationSecond * 60;
    exports.durationMinute = durationMinute;
    var durationHour = durationMinute * 60;
    exports.durationHour = durationHour;
    var durationDay = durationHour * 24;
    exports.durationDay = durationDay;
    var durationWeek = durationDay * 7;
    exports.durationWeek = durationWeek;
    var durationMonth = durationDay * 30;
    exports.durationMonth = durationMonth;
    var durationYear = durationDay * 365;
    exports.durationYear = durationYear;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/second.js
var require_second = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/second.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.seconds = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var second = (0, _interval.default)(function(date) {
      date.setTime(date - date.getMilliseconds());
    }, function(date, step) {
      date.setTime(+date + step * _duration.durationSecond);
    }, function(start, end) {
      return (end - start) / _duration.durationSecond;
    }, function(date) {
      return date.getUTCSeconds();
    });
    var _default = second;
    exports.default = _default;
    var seconds = second.range;
    exports.seconds = seconds;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/minute.js
var require_minute = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/minute.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.minutes = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var minute = (0, _interval.default)(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
    }, function(date, step) {
      date.setTime(+date + step * _duration.durationMinute);
    }, function(start, end) {
      return (end - start) / _duration.durationMinute;
    }, function(date) {
      return date.getMinutes();
    });
    var _default = minute;
    exports.default = _default;
    var minutes = minute.range;
    exports.minutes = minutes;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/hour.js
var require_hour = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/hour.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hours = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var hour = (0, _interval.default)(function(date) {
      date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
    }, function(date, step) {
      date.setTime(+date + step * _duration.durationHour);
    }, function(start, end) {
      return (end - start) / _duration.durationHour;
    }, function(date) {
      return date.getHours();
    });
    var _default = hour;
    exports.default = _default;
    var hours = hour.range;
    exports.hours = hours;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/day.js
var require_day = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/day.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.days = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var day = (0, _interval.default)((date) => date.setHours(0, 0, 0, 0), (date, step) => date.setDate(date.getDate() + step), (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay, (date) => date.getDate() - 1);
    var _default = day;
    exports.default = _default;
    var days = day.range;
    exports.days = days;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/week.js
var require_week = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/week.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.wednesdays = exports.wednesday = exports.tuesdays = exports.tuesday = exports.thursdays = exports.thursday = exports.sundays = exports.sunday = exports.saturdays = exports.saturday = exports.mondays = exports.monday = exports.fridays = exports.friday = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function weekday(i) {
      return (0, _interval.default)(function(date) {
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setDate(date.getDate() + step * 7);
      }, function(start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
      });
    }
    var sunday = weekday(0);
    exports.sunday = sunday;
    var monday = weekday(1);
    exports.monday = monday;
    var tuesday = weekday(2);
    exports.tuesday = tuesday;
    var wednesday = weekday(3);
    exports.wednesday = wednesday;
    var thursday = weekday(4);
    exports.thursday = thursday;
    var friday = weekday(5);
    exports.friday = friday;
    var saturday = weekday(6);
    exports.saturday = saturday;
    var sundays = sunday.range;
    exports.sundays = sundays;
    var mondays = monday.range;
    exports.mondays = mondays;
    var tuesdays = tuesday.range;
    exports.tuesdays = tuesdays;
    var wednesdays = wednesday.range;
    exports.wednesdays = wednesdays;
    var thursdays = thursday.range;
    exports.thursdays = thursdays;
    var fridays = friday.range;
    exports.fridays = fridays;
    var saturdays = saturday.range;
    exports.saturdays = saturdays;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/month.js
var require_month = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/month.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.months = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var month = (0, _interval.default)(function(date) {
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setMonth(date.getMonth() + step);
    }, function(start, end) {
      return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
    }, function(date) {
      return date.getMonth();
    });
    var _default = month;
    exports.default = _default;
    var months = month.range;
    exports.months = months;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/year.js
var require_year = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/year.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.years = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var year = (0, _interval.default)(function(date) {
      date.setMonth(0, 1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setFullYear(date.getFullYear() + step);
    }, function(start, end) {
      return end.getFullYear() - start.getFullYear();
    }, function(date) {
      return date.getFullYear();
    });
    year.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function(date) {
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setFullYear(date.getFullYear() + step * k);
      });
    };
    var _default = year;
    exports.default = _default;
    var years = year.range;
    exports.years = years;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcMinute.js
var require_utcMinute = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcMinute.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcMinutes = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var utcMinute = (0, _interval.default)(function(date) {
      date.setUTCSeconds(0, 0);
    }, function(date, step) {
      date.setTime(+date + step * _duration.durationMinute);
    }, function(start, end) {
      return (end - start) / _duration.durationMinute;
    }, function(date) {
      return date.getUTCMinutes();
    });
    var _default = utcMinute;
    exports.default = _default;
    var utcMinutes = utcMinute.range;
    exports.utcMinutes = utcMinutes;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcHour.js
var require_utcHour = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcHour.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcHours = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var utcHour = (0, _interval.default)(function(date) {
      date.setUTCMinutes(0, 0, 0);
    }, function(date, step) {
      date.setTime(+date + step * _duration.durationHour);
    }, function(start, end) {
      return (end - start) / _duration.durationHour;
    }, function(date) {
      return date.getUTCHours();
    });
    var _default = utcHour;
    exports.default = _default;
    var utcHours = utcHour.range;
    exports.utcHours = utcHours;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcDay.js
var require_utcDay = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcDay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcDays = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var utcDay = (0, _interval.default)(function(date) {
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCDate(date.getUTCDate() + step);
    }, function(start, end) {
      return (end - start) / _duration.durationDay;
    }, function(date) {
      return date.getUTCDate() - 1;
    });
    var _default = utcDay;
    exports.default = _default;
    var utcDays = utcDay.range;
    exports.utcDays = utcDays;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcWeek.js
var require_utcWeek = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcWeek.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcWednesdays = exports.utcWednesday = exports.utcTuesdays = exports.utcTuesday = exports.utcThursdays = exports.utcThursday = exports.utcSundays = exports.utcSunday = exports.utcSaturdays = exports.utcSaturday = exports.utcMondays = exports.utcMonday = exports.utcFridays = exports.utcFriday = void 0;
    var _interval = _interopRequireDefault(require_interval());
    var _duration = require_duration();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function utcWeekday(i) {
      return (0, _interval.default)(function(date) {
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
      }, function(start, end) {
        return (end - start) / _duration.durationWeek;
      });
    }
    var utcSunday = utcWeekday(0);
    exports.utcSunday = utcSunday;
    var utcMonday = utcWeekday(1);
    exports.utcMonday = utcMonday;
    var utcTuesday = utcWeekday(2);
    exports.utcTuesday = utcTuesday;
    var utcWednesday = utcWeekday(3);
    exports.utcWednesday = utcWednesday;
    var utcThursday = utcWeekday(4);
    exports.utcThursday = utcThursday;
    var utcFriday = utcWeekday(5);
    exports.utcFriday = utcFriday;
    var utcSaturday = utcWeekday(6);
    exports.utcSaturday = utcSaturday;
    var utcSundays = utcSunday.range;
    exports.utcSundays = utcSundays;
    var utcMondays = utcMonday.range;
    exports.utcMondays = utcMondays;
    var utcTuesdays = utcTuesday.range;
    exports.utcTuesdays = utcTuesdays;
    var utcWednesdays = utcWednesday.range;
    exports.utcWednesdays = utcWednesdays;
    var utcThursdays = utcThursday.range;
    exports.utcThursdays = utcThursdays;
    var utcFridays = utcFriday.range;
    exports.utcFridays = utcFridays;
    var utcSaturdays = utcSaturday.range;
    exports.utcSaturdays = utcSaturdays;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcMonth.js
var require_utcMonth = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcMonth.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcMonths = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var utcMonth = (0, _interval.default)(function(date) {
      date.setUTCDate(1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCMonth(date.getUTCMonth() + step);
    }, function(start, end) {
      return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
    }, function(date) {
      return date.getUTCMonth();
    });
    var _default = utcMonth;
    exports.default = _default;
    var utcMonths = utcMonth.range;
    exports.utcMonths = utcMonths;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/utcYear.js
var require_utcYear = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/utcYear.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcYears = exports.default = void 0;
    var _interval = _interopRequireDefault(require_interval());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var utcYear = (0, _interval.default)(function(date) {
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step);
    }, function(start, end) {
      return end.getUTCFullYear() - start.getUTCFullYear();
    }, function(date) {
      return date.getUTCFullYear();
    });
    utcYear.every = function(k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function(date) {
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
      }, function(date, step) {
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
      });
    };
    var _default = utcYear;
    exports.default = _default;
    var utcYears = utcYear.range;
    exports.utcYears = utcYears;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/ticks.js
var require_ticks2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/ticks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utcTicks = exports.utcTickInterval = exports.timeTicks = exports.timeTickInterval = void 0;
    var _index = require_src4();
    var _duration = require_duration();
    var _millisecond = _interopRequireDefault(require_millisecond());
    var _second = _interopRequireDefault(require_second());
    var _minute = _interopRequireDefault(require_minute());
    var _hour = _interopRequireDefault(require_hour());
    var _day = _interopRequireDefault(require_day());
    var _week = require_week();
    var _month = _interopRequireDefault(require_month());
    var _year = _interopRequireDefault(require_year());
    var _utcMinute = _interopRequireDefault(require_utcMinute());
    var _utcHour = _interopRequireDefault(require_utcHour());
    var _utcDay = _interopRequireDefault(require_utcDay());
    var _utcWeek = require_utcWeek();
    var _utcMonth = _interopRequireDefault(require_utcMonth());
    var _utcYear = _interopRequireDefault(require_utcYear());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function ticker(year, month, week, day, hour, minute) {
      const tickIntervals = [[_second.default, 1, _duration.durationSecond], [_second.default, 5, 5 * _duration.durationSecond], [_second.default, 15, 15 * _duration.durationSecond], [_second.default, 30, 30 * _duration.durationSecond], [minute, 1, _duration.durationMinute], [minute, 5, 5 * _duration.durationMinute], [minute, 15, 15 * _duration.durationMinute], [minute, 30, 30 * _duration.durationMinute], [hour, 1, _duration.durationHour], [hour, 3, 3 * _duration.durationHour], [hour, 6, 6 * _duration.durationHour], [hour, 12, 12 * _duration.durationHour], [day, 1, _duration.durationDay], [day, 2, 2 * _duration.durationDay], [week, 1, _duration.durationWeek], [month, 1, _duration.durationMonth], [month, 3, 3 * _duration.durationMonth], [year, 1, _duration.durationYear]];
      function ticks(start, stop, count) {
        const reverse = stop < start;
        if (reverse) [start, stop] = [stop, start];
        const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
        const ticks2 = interval ? interval.range(start, +stop + 1) : [];
        return reverse ? ticks2.reverse() : ticks2;
      }
      function tickInterval(start, stop, count) {
        const target = Math.abs(stop - start) / count;
        const i = (0, _index.bisector)(([, , step2]) => step2).right(tickIntervals, target);
        if (i === tickIntervals.length) return year.every((0, _index.tickStep)(start / _duration.durationYear, stop / _duration.durationYear, count));
        if (i === 0) return _millisecond.default.every(Math.max((0, _index.tickStep)(start, stop, count), 1));
        const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        return t.every(step);
      }
      return [ticks, tickInterval];
    }
    var [utcTicks, utcTickInterval] = ticker(_utcYear.default, _utcMonth.default, _utcWeek.utcSunday, _utcDay.default, _utcHour.default, _utcMinute.default);
    exports.utcTickInterval = utcTickInterval;
    exports.utcTicks = utcTicks;
    var [timeTicks, timeTickInterval] = ticker(_year.default, _month.default, _week.sunday, _day.default, _hour.default, _minute.default);
    exports.timeTickInterval = timeTickInterval;
    exports.timeTicks = timeTicks;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time/src/index.js
var require_src8 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "timeDay", {
      enumerable: true,
      get: function() {
        return _day.default;
      }
    });
    Object.defineProperty(exports, "timeDays", {
      enumerable: true,
      get: function() {
        return _day.days;
      }
    });
    Object.defineProperty(exports, "timeFriday", {
      enumerable: true,
      get: function() {
        return _week.friday;
      }
    });
    Object.defineProperty(exports, "timeFridays", {
      enumerable: true,
      get: function() {
        return _week.fridays;
      }
    });
    Object.defineProperty(exports, "timeHour", {
      enumerable: true,
      get: function() {
        return _hour.default;
      }
    });
    Object.defineProperty(exports, "timeHours", {
      enumerable: true,
      get: function() {
        return _hour.hours;
      }
    });
    Object.defineProperty(exports, "timeInterval", {
      enumerable: true,
      get: function() {
        return _interval.default;
      }
    });
    Object.defineProperty(exports, "timeMillisecond", {
      enumerable: true,
      get: function() {
        return _millisecond.default;
      }
    });
    Object.defineProperty(exports, "timeMilliseconds", {
      enumerable: true,
      get: function() {
        return _millisecond.milliseconds;
      }
    });
    Object.defineProperty(exports, "timeMinute", {
      enumerable: true,
      get: function() {
        return _minute.default;
      }
    });
    Object.defineProperty(exports, "timeMinutes", {
      enumerable: true,
      get: function() {
        return _minute.minutes;
      }
    });
    Object.defineProperty(exports, "timeMonday", {
      enumerable: true,
      get: function() {
        return _week.monday;
      }
    });
    Object.defineProperty(exports, "timeMondays", {
      enumerable: true,
      get: function() {
        return _week.mondays;
      }
    });
    Object.defineProperty(exports, "timeMonth", {
      enumerable: true,
      get: function() {
        return _month.default;
      }
    });
    Object.defineProperty(exports, "timeMonths", {
      enumerable: true,
      get: function() {
        return _month.months;
      }
    });
    Object.defineProperty(exports, "timeSaturday", {
      enumerable: true,
      get: function() {
        return _week.saturday;
      }
    });
    Object.defineProperty(exports, "timeSaturdays", {
      enumerable: true,
      get: function() {
        return _week.saturdays;
      }
    });
    Object.defineProperty(exports, "timeSecond", {
      enumerable: true,
      get: function() {
        return _second.default;
      }
    });
    Object.defineProperty(exports, "timeSeconds", {
      enumerable: true,
      get: function() {
        return _second.seconds;
      }
    });
    Object.defineProperty(exports, "timeSunday", {
      enumerable: true,
      get: function() {
        return _week.sunday;
      }
    });
    Object.defineProperty(exports, "timeSundays", {
      enumerable: true,
      get: function() {
        return _week.sundays;
      }
    });
    Object.defineProperty(exports, "timeThursday", {
      enumerable: true,
      get: function() {
        return _week.thursday;
      }
    });
    Object.defineProperty(exports, "timeThursdays", {
      enumerable: true,
      get: function() {
        return _week.thursdays;
      }
    });
    Object.defineProperty(exports, "timeTickInterval", {
      enumerable: true,
      get: function() {
        return _ticks.timeTickInterval;
      }
    });
    Object.defineProperty(exports, "timeTicks", {
      enumerable: true,
      get: function() {
        return _ticks.timeTicks;
      }
    });
    Object.defineProperty(exports, "timeTuesday", {
      enumerable: true,
      get: function() {
        return _week.tuesday;
      }
    });
    Object.defineProperty(exports, "timeTuesdays", {
      enumerable: true,
      get: function() {
        return _week.tuesdays;
      }
    });
    Object.defineProperty(exports, "timeWednesday", {
      enumerable: true,
      get: function() {
        return _week.wednesday;
      }
    });
    Object.defineProperty(exports, "timeWednesdays", {
      enumerable: true,
      get: function() {
        return _week.wednesdays;
      }
    });
    Object.defineProperty(exports, "timeWeek", {
      enumerable: true,
      get: function() {
        return _week.sunday;
      }
    });
    Object.defineProperty(exports, "timeWeeks", {
      enumerable: true,
      get: function() {
        return _week.sundays;
      }
    });
    Object.defineProperty(exports, "timeYear", {
      enumerable: true,
      get: function() {
        return _year.default;
      }
    });
    Object.defineProperty(exports, "timeYears", {
      enumerable: true,
      get: function() {
        return _year.years;
      }
    });
    Object.defineProperty(exports, "utcDay", {
      enumerable: true,
      get: function() {
        return _utcDay.default;
      }
    });
    Object.defineProperty(exports, "utcDays", {
      enumerable: true,
      get: function() {
        return _utcDay.utcDays;
      }
    });
    Object.defineProperty(exports, "utcFriday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcFriday;
      }
    });
    Object.defineProperty(exports, "utcFridays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcFridays;
      }
    });
    Object.defineProperty(exports, "utcHour", {
      enumerable: true,
      get: function() {
        return _utcHour.default;
      }
    });
    Object.defineProperty(exports, "utcHours", {
      enumerable: true,
      get: function() {
        return _utcHour.utcHours;
      }
    });
    Object.defineProperty(exports, "utcMillisecond", {
      enumerable: true,
      get: function() {
        return _millisecond.default;
      }
    });
    Object.defineProperty(exports, "utcMilliseconds", {
      enumerable: true,
      get: function() {
        return _millisecond.milliseconds;
      }
    });
    Object.defineProperty(exports, "utcMinute", {
      enumerable: true,
      get: function() {
        return _utcMinute.default;
      }
    });
    Object.defineProperty(exports, "utcMinutes", {
      enumerable: true,
      get: function() {
        return _utcMinute.utcMinutes;
      }
    });
    Object.defineProperty(exports, "utcMonday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcMonday;
      }
    });
    Object.defineProperty(exports, "utcMondays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcMondays;
      }
    });
    Object.defineProperty(exports, "utcMonth", {
      enumerable: true,
      get: function() {
        return _utcMonth.default;
      }
    });
    Object.defineProperty(exports, "utcMonths", {
      enumerable: true,
      get: function() {
        return _utcMonth.utcMonths;
      }
    });
    Object.defineProperty(exports, "utcSaturday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSaturday;
      }
    });
    Object.defineProperty(exports, "utcSaturdays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSaturdays;
      }
    });
    Object.defineProperty(exports, "utcSecond", {
      enumerable: true,
      get: function() {
        return _second.default;
      }
    });
    Object.defineProperty(exports, "utcSeconds", {
      enumerable: true,
      get: function() {
        return _second.seconds;
      }
    });
    Object.defineProperty(exports, "utcSunday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSunday;
      }
    });
    Object.defineProperty(exports, "utcSundays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSundays;
      }
    });
    Object.defineProperty(exports, "utcThursday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcThursday;
      }
    });
    Object.defineProperty(exports, "utcThursdays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcThursdays;
      }
    });
    Object.defineProperty(exports, "utcTickInterval", {
      enumerable: true,
      get: function() {
        return _ticks.utcTickInterval;
      }
    });
    Object.defineProperty(exports, "utcTicks", {
      enumerable: true,
      get: function() {
        return _ticks.utcTicks;
      }
    });
    Object.defineProperty(exports, "utcTuesday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcTuesday;
      }
    });
    Object.defineProperty(exports, "utcTuesdays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcTuesdays;
      }
    });
    Object.defineProperty(exports, "utcWednesday", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcWednesday;
      }
    });
    Object.defineProperty(exports, "utcWednesdays", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcWednesdays;
      }
    });
    Object.defineProperty(exports, "utcWeek", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSunday;
      }
    });
    Object.defineProperty(exports, "utcWeeks", {
      enumerable: true,
      get: function() {
        return _utcWeek.utcSundays;
      }
    });
    Object.defineProperty(exports, "utcYear", {
      enumerable: true,
      get: function() {
        return _utcYear.default;
      }
    });
    Object.defineProperty(exports, "utcYears", {
      enumerable: true,
      get: function() {
        return _utcYear.utcYears;
      }
    });
    var _interval = _interopRequireDefault(require_interval());
    var _millisecond = _interopRequireWildcard(require_millisecond());
    var _second = _interopRequireWildcard(require_second());
    var _minute = _interopRequireWildcard(require_minute());
    var _hour = _interopRequireWildcard(require_hour());
    var _day = _interopRequireWildcard(require_day());
    var _week = require_week();
    var _month = _interopRequireWildcard(require_month());
    var _year = _interopRequireWildcard(require_year());
    var _utcMinute = _interopRequireWildcard(require_utcMinute());
    var _utcHour = _interopRequireWildcard(require_utcHour());
    var _utcDay = _interopRequireWildcard(require_utcDay());
    var _utcWeek = require_utcWeek();
    var _utcMonth = _interopRequireWildcard(require_utcMonth());
    var _utcYear = _interopRequireWildcard(require_utcYear());
    var _ticks = require_ticks2();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time-format/src/locale.js
var require_locale2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time-format/src/locale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = formatLocale;
    var _index = require_src8();
    function localDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
      }
      return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
    }
    function utcDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
      }
      return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
    }
    function newDate(y, m, d) {
      return {
        y,
        m,
        d,
        H: 0,
        M: 0,
        S: 0,
        L: 0
      };
    }
    function formatLocale(locale) {
      var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_weekdays = locale.days, locale_shortWeekdays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
      var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
      var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "g": formatYearISO,
        "G": formatFullYearISO,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "q": formatQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
      };
      var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "g": formatUTCYearISO,
        "G": formatUTCFullYearISO,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "q": formatUTCQuarter,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
      };
      var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "g": parseYear,
        "G": parseFullYear,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "q": parseQuarter,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
      };
      formats.x = newFormat(locale_date, formats);
      formats.X = newFormat(locale_time, formats);
      formats.c = newFormat(locale_dateTime, formats);
      utcFormats.x = newFormat(locale_date, utcFormats);
      utcFormats.X = newFormat(locale_time, utcFormats);
      utcFormats.c = newFormat(locale_dateTime, utcFormats);
      function newFormat(specifier, formats2) {
        return function(date) {
          var string = [], i = -1, j = 0, n = specifier.length, c, pad2, format;
          if (!(date instanceof Date)) date = /* @__PURE__ */ new Date(+date);
          while (++i < n) {
            if (specifier.charCodeAt(i) === 37) {
              string.push(specifier.slice(j, i));
              if ((pad2 = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
              else pad2 = c === "e" ? " " : "0";
              if (format = formats2[c]) c = format(date, pad2);
              string.push(c);
              j = i + 1;
            }
          }
          string.push(specifier.slice(j, i));
          return string.join("");
        };
      }
      function newParse(specifier, Z) {
        return function(string) {
          var d = newDate(1900, void 0, 1), i = parseSpecifier(d, specifier, string += "", 0), week, day;
          if (i != string.length) return null;
          if ("Q" in d) return new Date(d.Q);
          if ("s" in d) return new Date(d.s * 1e3 + ("L" in d ? d.L : 0));
          if (Z && !("Z" in d)) d.Z = 0;
          if ("p" in d) d.H = d.H % 12 + d.p * 12;
          if (d.m === void 0) d.m = "q" in d ? d.q : 0;
          if ("V" in d) {
            if (d.V < 1 || d.V > 53) return null;
            if (!("w" in d)) d.w = 1;
            if ("Z" in d) {
              week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
              week = day > 4 || day === 0 ? _index.utcMonday.ceil(week) : (0, _index.utcMonday)(week);
              week = _index.utcDay.offset(week, (d.V - 1) * 7);
              d.y = week.getUTCFullYear();
              d.m = week.getUTCMonth();
              d.d = week.getUTCDate() + (d.w + 6) % 7;
            } else {
              week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
              week = day > 4 || day === 0 ? _index.timeMonday.ceil(week) : (0, _index.timeMonday)(week);
              week = _index.timeDay.offset(week, (d.V - 1) * 7);
              d.y = week.getFullYear();
              d.m = week.getMonth();
              d.d = week.getDate() + (d.w + 6) % 7;
            }
          } else if ("W" in d || "U" in d) {
            if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
            day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
            d.m = 0;
            d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
          }
          if ("Z" in d) {
            d.H += d.Z / 100 | 0;
            d.M += d.Z % 100;
            return utcDate(d);
          }
          return localDate(d);
        };
      }
      function parseSpecifier(d, specifier, string, j) {
        var i = 0, n = specifier.length, m = string.length, c, parse;
        while (i < n) {
          if (j >= m) return -1;
          c = specifier.charCodeAt(i++);
          if (c === 37) {
            c = specifier.charAt(i++);
            parse = parses[c in pads ? specifier.charAt(i++) : c];
            if (!parse || (j = parse(d, string, j)) < 0) return -1;
          } else if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }
        return j;
      }
      function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }
      function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }
      function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }
      function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }
      function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
      }
      function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
      }
      function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
      }
      function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
      }
      function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
      }
      function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
      }
      function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
      }
      function formatMonth(d) {
        return locale_months[d.getMonth()];
      }
      function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
      }
      function formatQuarter(d) {
        return 1 + ~~(d.getMonth() / 3);
      }
      function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
      }
      function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
      }
      function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
      }
      function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
      }
      function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
      }
      function formatUTCQuarter(d) {
        return 1 + ~~(d.getUTCMonth() / 3);
      }
      return {
        format: function(specifier) {
          var f = newFormat(specifier += "", formats);
          f.toString = function() {
            return specifier;
          };
          return f;
        },
        parse: function(specifier) {
          var p = newParse(specifier += "", false);
          p.toString = function() {
            return specifier;
          };
          return p;
        },
        utcFormat: function(specifier) {
          var f = newFormat(specifier += "", utcFormats);
          f.toString = function() {
            return specifier;
          };
          return f;
        },
        utcParse: function(specifier) {
          var p = newParse(specifier += "", true);
          p.toString = function() {
            return specifier;
          };
          return p;
        }
      };
    }
    var pads = {
      "-": "",
      "_": " ",
      "0": "0"
    };
    var numberRe = /^\s*\d+/;
    var percentRe = /^%/;
    var requoteRe = /[\\^$*+?|[\]().{}]/g;
    function pad(value, fill, width) {
      var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
      return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }
    function requote(s) {
      return s.replace(requoteRe, "\\$&");
    }
    function formatRe(names) {
      return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
    }
    function formatLookup(names) {
      return new Map(names.map((name, i) => [name.toLowerCase(), i]));
    }
    function parseWeekdayNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.w = +n[0], i + n[0].length) : -1;
    }
    function parseWeekdayNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.u = +n[0], i + n[0].length) : -1;
    }
    function parseWeekNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.U = +n[0], i + n[0].length) : -1;
    }
    function parseWeekNumberISO(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.V = +n[0], i + n[0].length) : -1;
    }
    function parseWeekNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.W = +n[0], i + n[0].length) : -1;
    }
    function parseFullYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 4));
      return n ? (d.y = +n[0], i + n[0].length) : -1;
    }
    function parseYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3), i + n[0].length) : -1;
    }
    function parseZone(d, string, i) {
      var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
      return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
    }
    function parseQuarter(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
    }
    function parseMonthNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
    }
    function parseDayOfMonth(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.d = +n[0], i + n[0].length) : -1;
    }
    function parseDayOfYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
    }
    function parseHour24(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.H = +n[0], i + n[0].length) : -1;
    }
    function parseMinutes(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.M = +n[0], i + n[0].length) : -1;
    }
    function parseSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.S = +n[0], i + n[0].length) : -1;
    }
    function parseMilliseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.L = +n[0], i + n[0].length) : -1;
    }
    function parseMicroseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 6));
      return n ? (d.L = Math.floor(n[0] / 1e3), i + n[0].length) : -1;
    }
    function parseLiteralPercent(d, string, i) {
      var n = percentRe.exec(string.slice(i, i + 1));
      return n ? i + n[0].length : -1;
    }
    function parseUnixTimestamp(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.Q = +n[0], i + n[0].length) : -1;
    }
    function parseUnixTimestampSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.s = +n[0], i + n[0].length) : -1;
    }
    function formatDayOfMonth(d, p) {
      return pad(d.getDate(), p, 2);
    }
    function formatHour24(d, p) {
      return pad(d.getHours(), p, 2);
    }
    function formatHour12(d, p) {
      return pad(d.getHours() % 12 || 12, p, 2);
    }
    function formatDayOfYear(d, p) {
      return pad(1 + _index.timeDay.count((0, _index.timeYear)(d), d), p, 3);
    }
    function formatMilliseconds(d, p) {
      return pad(d.getMilliseconds(), p, 3);
    }
    function formatMicroseconds(d, p) {
      return formatMilliseconds(d, p) + "000";
    }
    function formatMonthNumber(d, p) {
      return pad(d.getMonth() + 1, p, 2);
    }
    function formatMinutes(d, p) {
      return pad(d.getMinutes(), p, 2);
    }
    function formatSeconds(d, p) {
      return pad(d.getSeconds(), p, 2);
    }
    function formatWeekdayNumberMonday(d) {
      var day = d.getDay();
      return day === 0 ? 7 : day;
    }
    function formatWeekNumberSunday(d, p) {
      return pad(_index.timeSunday.count((0, _index.timeYear)(d) - 1, d), p, 2);
    }
    function dISO(d) {
      var day = d.getDay();
      return day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
    }
    function formatWeekNumberISO(d, p) {
      d = dISO(d);
      return pad(_index.timeThursday.count((0, _index.timeYear)(d), d) + ((0, _index.timeYear)(d).getDay() === 4), p, 2);
    }
    function formatWeekdayNumberSunday(d) {
      return d.getDay();
    }
    function formatWeekNumberMonday(d, p) {
      return pad(_index.timeMonday.count((0, _index.timeYear)(d) - 1, d), p, 2);
    }
    function formatYear(d, p) {
      return pad(d.getFullYear() % 100, p, 2);
    }
    function formatYearISO(d, p) {
      d = dISO(d);
      return pad(d.getFullYear() % 100, p, 2);
    }
    function formatFullYear(d, p) {
      return pad(d.getFullYear() % 1e4, p, 4);
    }
    function formatFullYearISO(d, p) {
      var day = d.getDay();
      d = day >= 4 || day === 0 ? (0, _index.timeThursday)(d) : _index.timeThursday.ceil(d);
      return pad(d.getFullYear() % 1e4, p, 4);
    }
    function formatZone(d) {
      var z = d.getTimezoneOffset();
      return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
    }
    function formatUTCDayOfMonth(d, p) {
      return pad(d.getUTCDate(), p, 2);
    }
    function formatUTCHour24(d, p) {
      return pad(d.getUTCHours(), p, 2);
    }
    function formatUTCHour12(d, p) {
      return pad(d.getUTCHours() % 12 || 12, p, 2);
    }
    function formatUTCDayOfYear(d, p) {
      return pad(1 + _index.utcDay.count((0, _index.utcYear)(d), d), p, 3);
    }
    function formatUTCMilliseconds(d, p) {
      return pad(d.getUTCMilliseconds(), p, 3);
    }
    function formatUTCMicroseconds(d, p) {
      return formatUTCMilliseconds(d, p) + "000";
    }
    function formatUTCMonthNumber(d, p) {
      return pad(d.getUTCMonth() + 1, p, 2);
    }
    function formatUTCMinutes(d, p) {
      return pad(d.getUTCMinutes(), p, 2);
    }
    function formatUTCSeconds(d, p) {
      return pad(d.getUTCSeconds(), p, 2);
    }
    function formatUTCWeekdayNumberMonday(d) {
      var dow = d.getUTCDay();
      return dow === 0 ? 7 : dow;
    }
    function formatUTCWeekNumberSunday(d, p) {
      return pad(_index.utcSunday.count((0, _index.utcYear)(d) - 1, d), p, 2);
    }
    function UTCdISO(d) {
      var day = d.getUTCDay();
      return day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
    }
    function formatUTCWeekNumberISO(d, p) {
      d = UTCdISO(d);
      return pad(_index.utcThursday.count((0, _index.utcYear)(d), d) + ((0, _index.utcYear)(d).getUTCDay() === 4), p, 2);
    }
    function formatUTCWeekdayNumberSunday(d) {
      return d.getUTCDay();
    }
    function formatUTCWeekNumberMonday(d, p) {
      return pad(_index.utcMonday.count((0, _index.utcYear)(d) - 1, d), p, 2);
    }
    function formatUTCYear(d, p) {
      return pad(d.getUTCFullYear() % 100, p, 2);
    }
    function formatUTCYearISO(d, p) {
      d = UTCdISO(d);
      return pad(d.getUTCFullYear() % 100, p, 2);
    }
    function formatUTCFullYear(d, p) {
      return pad(d.getUTCFullYear() % 1e4, p, 4);
    }
    function formatUTCFullYearISO(d, p) {
      var day = d.getUTCDay();
      d = day >= 4 || day === 0 ? (0, _index.utcThursday)(d) : _index.utcThursday.ceil(d);
      return pad(d.getUTCFullYear() % 1e4, p, 4);
    }
    function formatUTCZone() {
      return "+0000";
    }
    function formatLiteralPercent() {
      return "%";
    }
    function formatUnixTimestamp(d) {
      return +d;
    }
    function formatUnixTimestampSeconds(d) {
      return Math.floor(+d / 1e3);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time-format/src/defaultLocale.js
var require_defaultLocale2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time-format/src/defaultLocale.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = defaultLocale;
    exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;
    var _locale = _interopRequireDefault(require_locale2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var locale;
    var timeFormat;
    exports.timeFormat = timeFormat;
    var timeParse;
    exports.timeParse = timeParse;
    var utcFormat;
    exports.utcFormat = utcFormat;
    var utcParse;
    exports.utcParse = utcParse;
    defaultLocale({
      dateTime: "%x, %X",
      date: "%-m/%-d/%Y",
      time: "%-I:%M:%S %p",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    function defaultLocale(definition) {
      locale = (0, _locale.default)(definition);
      exports.timeFormat = timeFormat = locale.format;
      exports.timeParse = timeParse = locale.parse;
      exports.utcFormat = utcFormat = locale.utcFormat;
      exports.utcParse = utcParse = locale.utcParse;
      return locale;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time-format/src/isoFormat.js
var require_isoFormat = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time-format/src/isoFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isoSpecifier = exports.default = void 0;
    var _defaultLocale = require_defaultLocale2();
    var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
    exports.isoSpecifier = isoSpecifier;
    function formatIsoNative(date) {
      return date.toISOString();
    }
    var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
    var _default = formatIso;
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time-format/src/isoParse.js
var require_isoParse = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time-format/src/isoParse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _isoFormat = require_isoFormat();
    var _defaultLocale = require_defaultLocale2();
    function parseIsoNative(string) {
      var date = new Date(string);
      return isNaN(date) ? null : date;
    }
    var parseIso = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
    var _default = parseIso;
    exports.default = _default;
  }
});

// node_modules/victory-vendor/lib-vendor/d3-time-format/src/index.js
var require_src9 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-time-format/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "isoFormat", {
      enumerable: true,
      get: function() {
        return _isoFormat.default;
      }
    });
    Object.defineProperty(exports, "isoParse", {
      enumerable: true,
      get: function() {
        return _isoParse.default;
      }
    });
    Object.defineProperty(exports, "timeFormat", {
      enumerable: true,
      get: function() {
        return _defaultLocale.timeFormat;
      }
    });
    Object.defineProperty(exports, "timeFormatDefaultLocale", {
      enumerable: true,
      get: function() {
        return _defaultLocale.default;
      }
    });
    Object.defineProperty(exports, "timeFormatLocale", {
      enumerable: true,
      get: function() {
        return _locale.default;
      }
    });
    Object.defineProperty(exports, "timeParse", {
      enumerable: true,
      get: function() {
        return _defaultLocale.timeParse;
      }
    });
    Object.defineProperty(exports, "utcFormat", {
      enumerable: true,
      get: function() {
        return _defaultLocale.utcFormat;
      }
    });
    Object.defineProperty(exports, "utcParse", {
      enumerable: true,
      get: function() {
        return _defaultLocale.utcParse;
      }
    });
    var _defaultLocale = _interopRequireWildcard(require_defaultLocale2());
    var _locale = _interopRequireDefault(require_locale2());
    var _isoFormat = _interopRequireDefault(require_isoFormat());
    var _isoParse = _interopRequireDefault(require_isoParse());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/time.js
var require_time = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.calendar = calendar;
    exports.default = time;
    var _index = require_src8();
    var _index2 = require_src9();
    var _continuous = _interopRequireWildcard(require_continuous());
    var _init = require_init();
    var _nice = _interopRequireDefault(require_nice2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function date(t) {
      return new Date(t);
    }
    function number(t) {
      return t instanceof Date ? +t : +/* @__PURE__ */ new Date(+t);
    }
    function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
      var scale = (0, _continuous.default)(), invert = scale.invert, domain = scale.domain;
      var formatMillisecond = format(".%L"), formatSecond = format(":%S"), formatMinute = format("%I:%M"), formatHour = format("%I %p"), formatDay = format("%a %d"), formatWeek = format("%b %d"), formatMonth = format("%B"), formatYear = format("%Y");
      function tickFormat(date2) {
        return (second(date2) < date2 ? formatMillisecond : minute(date2) < date2 ? formatSecond : hour(date2) < date2 ? formatMinute : day(date2) < date2 ? formatHour : month(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year(date2) < date2 ? formatMonth : formatYear)(date2);
      }
      scale.invert = function(y) {
        return new Date(invert(y));
      };
      scale.domain = function(_) {
        return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
      };
      scale.ticks = function(interval) {
        var d = domain();
        return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
      };
      scale.tickFormat = function(count, specifier) {
        return specifier == null ? tickFormat : format(specifier);
      };
      scale.nice = function(interval) {
        var d = domain();
        if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
        return interval ? domain((0, _nice.default)(d, interval)) : scale;
      };
      scale.copy = function() {
        return (0, _continuous.copy)(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
      };
      return scale;
    }
    function time() {
      return _init.initRange.apply(calendar(_index.timeTicks, _index.timeTickInterval, _index.timeYear, _index.timeMonth, _index.timeWeek, _index.timeDay, _index.timeHour, _index.timeMinute, _index.timeSecond, _index2.timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/utcTime.js
var require_utcTime = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/utcTime.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = utcTime;
    var _index = require_src8();
    var _index2 = require_src9();
    var _time = require_time();
    var _init = require_init();
    function utcTime() {
      return _init.initRange.apply((0, _time.calendar)(_index.utcTicks, _index.utcTickInterval, _index.utcYear, _index.utcMonth, _index.utcWeek, _index.utcDay, _index.utcHour, _index.utcMinute, _index.utcSecond, _index2.utcFormat).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/sequential.js
var require_sequential = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/sequential.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.copy = copy;
    exports.default = sequential;
    exports.sequentialLog = sequentialLog;
    exports.sequentialPow = sequentialPow;
    exports.sequentialSqrt = sequentialSqrt;
    exports.sequentialSymlog = sequentialSymlog;
    var _index = require_src6();
    var _continuous = require_continuous();
    var _init = require_init();
    var _linear = require_linear2();
    var _log = require_log();
    var _symlog = require_symlog();
    var _pow = require_pow();
    function transformer() {
      var x0 = 0, x1 = 1, t0, t1, k10, transform, interpolator = _continuous.identity, clamp = false, unknown;
      function scale(x) {
        return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
      }
      scale.domain = function(_) {
        return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
      };
      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };
      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };
      function range(interpolate) {
        return function(_) {
          var r0, r1;
          return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
        };
      }
      scale.range = range(_index.interpolate);
      scale.rangeRound = range(_index.interpolateRound);
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
        return scale;
      };
    }
    function copy(source, target) {
      return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
    }
    function sequential() {
      var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
      scale.copy = function() {
        return copy(scale, sequential());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function sequentialLog() {
      var scale = (0, _log.loggish)(transformer()).domain([1, 10]);
      scale.copy = function() {
        return copy(scale, sequentialLog()).base(scale.base());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function sequentialSymlog() {
      var scale = (0, _symlog.symlogish)(transformer());
      scale.copy = function() {
        return copy(scale, sequentialSymlog()).constant(scale.constant());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function sequentialPow() {
      var scale = (0, _pow.powish)(transformer());
      scale.copy = function() {
        return copy(scale, sequentialPow()).exponent(scale.exponent());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function sequentialSqrt() {
      return sequentialPow.apply(null, arguments).exponent(0.5);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/sequentialQuantile.js
var require_sequentialQuantile = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/sequentialQuantile.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sequentialQuantile;
    var _index = require_src4();
    var _continuous = require_continuous();
    var _init = require_init();
    function sequentialQuantile() {
      var domain = [], interpolator = _continuous.identity;
      function scale(x) {
        if (x != null && !isNaN(x = +x)) return interpolator(((0, _index.bisect)(domain, x, 1) - 1) / (domain.length - 1));
      }
      scale.domain = function(_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(_index.ascending);
        return scale;
      };
      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };
      scale.range = function() {
        return domain.map((d, i) => interpolator(i / (domain.length - 1)));
      };
      scale.quantiles = function(n) {
        return Array.from({
          length: n + 1
        }, (_, i) => (0, _index.quantile)(domain, i / n));
      };
      scale.copy = function() {
        return sequentialQuantile(interpolator).domain(domain);
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/diverging.js
var require_diverging2 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/diverging.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = diverging;
    exports.divergingLog = divergingLog;
    exports.divergingPow = divergingPow;
    exports.divergingSqrt = divergingSqrt;
    exports.divergingSymlog = divergingSymlog;
    var _index = require_src6();
    var _continuous = require_continuous();
    var _init = require_init();
    var _linear = require_linear2();
    var _log = require_log();
    var _sequential = require_sequential();
    var _symlog = require_symlog();
    var _pow = require_pow();
    function transformer() {
      var x0 = 0, x1 = 0.5, x2 = 1, s = 1, t0, t1, t2, k10, k21, interpolator = _continuous.identity, transform, clamp = false, unknown;
      function scale(x) {
        return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
      }
      scale.domain = function(_) {
        return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
      };
      scale.clamp = function(_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };
      scale.interpolator = function(_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };
      function range(interpolate) {
        return function(_) {
          var r0, r1, r2;
          return arguments.length ? ([r0, r1, r2] = _, interpolator = (0, _index.piecewise)(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
        };
      }
      scale.range = range(_index.interpolate);
      scale.rangeRound = range(_index.interpolateRound);
      scale.unknown = function(_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };
      return function(t) {
        transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
        return scale;
      };
    }
    function diverging() {
      var scale = (0, _linear.linearish)(transformer()(_continuous.identity));
      scale.copy = function() {
        return (0, _sequential.copy)(scale, diverging());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function divergingLog() {
      var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);
      scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function divergingSymlog() {
      var scale = (0, _symlog.symlogish)(transformer());
      scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function divergingPow() {
      var scale = (0, _pow.powish)(transformer());
      scale.copy = function() {
        return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
      };
      return _init.initInterpolator.apply(scale, arguments);
    }
    function divergingSqrt() {
      return divergingPow.apply(null, arguments).exponent(0.5);
    }
  }
});

// node_modules/victory-vendor/lib-vendor/d3-scale/src/index.js
var require_src10 = __commonJS({
  "node_modules/victory-vendor/lib-vendor/d3-scale/src/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "scaleBand", {
      enumerable: true,
      get: function() {
        return _band.default;
      }
    });
    Object.defineProperty(exports, "scaleDiverging", {
      enumerable: true,
      get: function() {
        return _diverging.default;
      }
    });
    Object.defineProperty(exports, "scaleDivergingLog", {
      enumerable: true,
      get: function() {
        return _diverging.divergingLog;
      }
    });
    Object.defineProperty(exports, "scaleDivergingPow", {
      enumerable: true,
      get: function() {
        return _diverging.divergingPow;
      }
    });
    Object.defineProperty(exports, "scaleDivergingSqrt", {
      enumerable: true,
      get: function() {
        return _diverging.divergingSqrt;
      }
    });
    Object.defineProperty(exports, "scaleDivergingSymlog", {
      enumerable: true,
      get: function() {
        return _diverging.divergingSymlog;
      }
    });
    Object.defineProperty(exports, "scaleIdentity", {
      enumerable: true,
      get: function() {
        return _identity.default;
      }
    });
    Object.defineProperty(exports, "scaleImplicit", {
      enumerable: true,
      get: function() {
        return _ordinal.implicit;
      }
    });
    Object.defineProperty(exports, "scaleLinear", {
      enumerable: true,
      get: function() {
        return _linear.default;
      }
    });
    Object.defineProperty(exports, "scaleLog", {
      enumerable: true,
      get: function() {
        return _log.default;
      }
    });
    Object.defineProperty(exports, "scaleOrdinal", {
      enumerable: true,
      get: function() {
        return _ordinal.default;
      }
    });
    Object.defineProperty(exports, "scalePoint", {
      enumerable: true,
      get: function() {
        return _band.point;
      }
    });
    Object.defineProperty(exports, "scalePow", {
      enumerable: true,
      get: function() {
        return _pow.default;
      }
    });
    Object.defineProperty(exports, "scaleQuantile", {
      enumerable: true,
      get: function() {
        return _quantile.default;
      }
    });
    Object.defineProperty(exports, "scaleQuantize", {
      enumerable: true,
      get: function() {
        return _quantize.default;
      }
    });
    Object.defineProperty(exports, "scaleRadial", {
      enumerable: true,
      get: function() {
        return _radial.default;
      }
    });
    Object.defineProperty(exports, "scaleSequential", {
      enumerable: true,
      get: function() {
        return _sequential.default;
      }
    });
    Object.defineProperty(exports, "scaleSequentialLog", {
      enumerable: true,
      get: function() {
        return _sequential.sequentialLog;
      }
    });
    Object.defineProperty(exports, "scaleSequentialPow", {
      enumerable: true,
      get: function() {
        return _sequential.sequentialPow;
      }
    });
    Object.defineProperty(exports, "scaleSequentialQuantile", {
      enumerable: true,
      get: function() {
        return _sequentialQuantile.default;
      }
    });
    Object.defineProperty(exports, "scaleSequentialSqrt", {
      enumerable: true,
      get: function() {
        return _sequential.sequentialSqrt;
      }
    });
    Object.defineProperty(exports, "scaleSequentialSymlog", {
      enumerable: true,
      get: function() {
        return _sequential.sequentialSymlog;
      }
    });
    Object.defineProperty(exports, "scaleSqrt", {
      enumerable: true,
      get: function() {
        return _pow.sqrt;
      }
    });
    Object.defineProperty(exports, "scaleSymlog", {
      enumerable: true,
      get: function() {
        return _symlog.default;
      }
    });
    Object.defineProperty(exports, "scaleThreshold", {
      enumerable: true,
      get: function() {
        return _threshold.default;
      }
    });
    Object.defineProperty(exports, "scaleTime", {
      enumerable: true,
      get: function() {
        return _time.default;
      }
    });
    Object.defineProperty(exports, "scaleUtc", {
      enumerable: true,
      get: function() {
        return _utcTime.default;
      }
    });
    Object.defineProperty(exports, "tickFormat", {
      enumerable: true,
      get: function() {
        return _tickFormat.default;
      }
    });
    var _band = _interopRequireWildcard(require_band());
    var _identity = _interopRequireDefault(require_identity5());
    var _linear = _interopRequireDefault(require_linear2());
    var _log = _interopRequireDefault(require_log());
    var _symlog = _interopRequireDefault(require_symlog());
    var _ordinal = _interopRequireWildcard(require_ordinal());
    var _pow = _interopRequireWildcard(require_pow());
    var _radial = _interopRequireDefault(require_radial2());
    var _quantile = _interopRequireDefault(require_quantile2());
    var _quantize = _interopRequireDefault(require_quantize2());
    var _threshold = _interopRequireDefault(require_threshold());
    var _time = _interopRequireDefault(require_time());
    var _utcTime = _interopRequireDefault(require_utcTime());
    var _sequential = _interopRequireWildcard(require_sequential());
    var _sequentialQuantile = _interopRequireDefault(require_sequentialQuantile());
    var _diverging = _interopRequireWildcard(require_diverging2());
    var _tickFormat = _interopRequireDefault(require_tickFormat());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { default: obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
  }
});

// node_modules/victory-vendor/lib/d3-scale.js
var require_d3_scale = __commonJS({
  "node_modules/victory-vendor/lib/d3-scale.js"(exports, module) {
    module.exports = require_src10();
  }
});

// node_modules/lodash/_baseExtremum.js
var require_baseExtremum = __commonJS({
  "node_modules/lodash/_baseExtremum.js"(exports, module) {
    var isSymbol = require_isSymbol();
    function baseExtremum(array, iteratee, comparator) {
      var index = -1, length = array.length;
      while (++index < length) {
        var value = array[index], current = iteratee(value);
        if (current != null && (computed === void 0 ? current === current && !isSymbol(current) : comparator(current, computed))) {
          var computed = current, result = value;
        }
      }
      return result;
    }
    module.exports = baseExtremum;
  }
});

// node_modules/lodash/_baseGt.js
var require_baseGt = __commonJS({
  "node_modules/lodash/_baseGt.js"(exports, module) {
    function baseGt(value, other) {
      return value > other;
    }
    module.exports = baseGt;
  }
});

// node_modules/lodash/max.js
var require_max2 = __commonJS({
  "node_modules/lodash/max.js"(exports, module) {
    var baseExtremum = require_baseExtremum();
    var baseGt = require_baseGt();
    var identity = require_identity2();
    function max(array) {
      return array && array.length ? baseExtremum(array, identity, baseGt) : void 0;
    }
    module.exports = max;
  }
});

// node_modules/lodash/_baseLt.js
var require_baseLt = __commonJS({
  "node_modules/lodash/_baseLt.js"(exports, module) {
    function baseLt(value, other) {
      return value < other;
    }
    module.exports = baseLt;
  }
});

// node_modules/lodash/min.js
var require_min2 = __commonJS({
  "node_modules/lodash/min.js"(exports, module) {
    var baseExtremum = require_baseExtremum();
    var baseLt = require_baseLt();
    var identity = require_identity2();
    function min(array) {
      return array && array.length ? baseExtremum(array, identity, baseLt) : void 0;
    }
    module.exports = min;
  }
});

// node_modules/lodash/map.js
var require_map2 = __commonJS({
  "node_modules/lodash/map.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var isArray = require_isArray();
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, baseIteratee(iteratee, 3));
    }
    module.exports = map;
  }
});

// node_modules/lodash/flatMap.js
var require_flatMap = __commonJS({
  "node_modules/lodash/flatMap.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var map = require_map2();
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }
    module.exports = flatMap;
  }
});

// node_modules/lodash/isEqual.js
var require_isEqual = __commonJS({
  "node_modules/lodash/isEqual.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual;
  }
});

// node_modules/decimal.js-light/decimal.mjs
var decimal_exports = {};
__export(decimal_exports, {
  Decimal: () => Decimal,
  default: () => decimal_default
});
function add(x, y) {
  var carry, d, e, i, k, len, xd, yd, Ctor = x.constructor, pr = Ctor.precision;
  if (!x.s || !y.s) {
    if (!y.s) y = new Ctor(x);
    return external ? round(y, pr) : y;
  }
  xd = x.d;
  yd = y.d;
  k = x.e;
  e = y.e;
  xd = xd.slice();
  i = k - e;
  if (i) {
    if (i < 0) {
      d = xd;
      i = -i;
      len = yd.length;
    } else {
      d = yd;
      e = k;
      len = xd.length;
    }
    k = Math.ceil(pr / LOG_BASE);
    len = k > len ? k + 1 : len + 1;
    if (i > len) {
      i = len;
      d.length = 1;
    }
    d.reverse();
    for (; i--; ) d.push(0);
    d.reverse();
  }
  len = xd.length;
  i = yd.length;
  if (len - i < 0) {
    i = len;
    d = yd;
    yd = xd;
    xd = d;
  }
  for (carry = 0; i; ) {
    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
    xd[i] %= BASE;
  }
  if (carry) {
    xd.unshift(carry);
    ++e;
  }
  for (len = xd.length; xd[--len] == 0; ) xd.pop();
  y.d = xd;
  y.e = e;
  return external ? round(y, pr) : y;
}
function checkInt32(i, min, max) {
  if (i !== ~~i || i < min || i > max) {
    throw Error(invalidArgument + i);
  }
}
function digitsToString(d) {
  var i, k, ws, indexOfLastWord = d.length - 1, str = "", w = d[0];
  if (indexOfLastWord > 0) {
    str += w;
    for (i = 1; i < indexOfLastWord; i++) {
      ws = d[i] + "";
      k = LOG_BASE - ws.length;
      if (k) str += getZeroString(k);
      str += ws;
    }
    w = d[i];
    ws = w + "";
    k = LOG_BASE - ws.length;
    if (k) str += getZeroString(k);
  } else if (w === 0) {
    return "0";
  }
  for (; w % 10 === 0; ) w /= 10;
  return str + w;
}
function exp(x, sd) {
  var denominator, guard, pow, sum, t, wpr, i = 0, k = 0, Ctor = x.constructor, pr = Ctor.precision;
  if (getBase10Exponent(x) > 16) throw Error(exponentOutOfRange + getBase10Exponent(x));
  if (!x.s) return new Ctor(ONE);
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  t = new Ctor(0.03125);
  while (x.abs().gte(0.1)) {
    x = x.times(t);
    k += 5;
  }
  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
  wpr += guard;
  denominator = pow = sum = new Ctor(ONE);
  Ctor.precision = wpr;
  for (; ; ) {
    pow = round(pow.times(x), wpr);
    denominator = denominator.times(++i);
    t = sum.plus(divide(pow, denominator, wpr));
    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
      while (k--) sum = round(sum.times(sum), wpr);
      Ctor.precision = pr;
      return sd == null ? (external = true, round(sum, pr)) : sum;
    }
    sum = t;
  }
}
function getBase10Exponent(x) {
  var e = x.e * LOG_BASE, w = x.d[0];
  for (; w >= 10; w /= 10) e++;
  return e;
}
function getLn10(Ctor, sd, pr) {
  if (sd > Ctor.LN10.sd()) {
    external = true;
    if (pr) Ctor.precision = pr;
    throw Error(decimalError + "LN10 precision limit exceeded");
  }
  return round(new Ctor(Ctor.LN10), sd);
}
function getZeroString(k) {
  var zs = "";
  for (; k--; ) zs += "0";
  return zs;
}
function ln(y, sd) {
  var c, c0, denominator, e, numerator, sum, t, wpr, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, pr = Ctor.precision;
  if (x.s < 1) throw Error(decimalError + (x.s ? "NaN" : "-Infinity"));
  if (x.eq(ONE)) return new Ctor(0);
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  if (x.eq(10)) {
    if (sd == null) external = true;
    return getLn10(Ctor, wpr);
  }
  wpr += guard;
  Ctor.precision = wpr;
  c = digitsToString(xd);
  c0 = c.charAt(0);
  e = getBase10Exponent(x);
  if (Math.abs(e) < 15e14) {
    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
      x = x.times(y);
      c = digitsToString(x.d);
      c0 = c.charAt(0);
      n++;
    }
    e = getBase10Exponent(x);
    if (c0 > 1) {
      x = new Ctor("0." + c);
      e++;
    } else {
      x = new Ctor(c0 + "." + c.slice(1));
    }
  } else {
    t = getLn10(Ctor, wpr + 2, pr).times(e + "");
    x = ln(new Ctor(c0 + "." + c.slice(1)), wpr - guard).plus(t);
    Ctor.precision = pr;
    return sd == null ? (external = true, round(x, pr)) : x;
  }
  sum = numerator = x = divide(x.minus(ONE), x.plus(ONE), wpr);
  x2 = round(x.times(x), wpr);
  denominator = 3;
  for (; ; ) {
    numerator = round(numerator.times(x2), wpr);
    t = sum.plus(divide(numerator, new Ctor(denominator), wpr));
    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
      sum = sum.times(2);
      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ""));
      sum = divide(sum, new Ctor(n), wpr);
      Ctor.precision = pr;
      return sd == null ? (external = true, round(sum, pr)) : sum;
    }
    sum = t;
    denominator += 2;
  }
}
function parseDecimal(x, str) {
  var e, i, len;
  if ((e = str.indexOf(".")) > -1) str = str.replace(".", "");
  if ((i = str.search(/e/i)) > 0) {
    if (e < 0) e = i;
    e += +str.slice(i + 1);
    str = str.substring(0, i);
  } else if (e < 0) {
    e = str.length;
  }
  for (i = 0; str.charCodeAt(i) === 48; ) ++i;
  for (len = str.length; str.charCodeAt(len - 1) === 48; ) --len;
  str = str.slice(i, len);
  if (str) {
    len -= i;
    e = e - i - 1;
    x.e = mathfloor(e / LOG_BASE);
    x.d = [];
    i = (e + 1) % LOG_BASE;
    if (e < 0) i += LOG_BASE;
    if (i < len) {
      if (i) x.d.push(+str.slice(0, i));
      for (len -= LOG_BASE; i < len; ) x.d.push(+str.slice(i, i += LOG_BASE));
      str = str.slice(i);
      i = LOG_BASE - str.length;
    } else {
      i -= len;
    }
    for (; i--; ) str += "0";
    x.d.push(+str);
    if (external && (x.e > MAX_E || x.e < -MAX_E)) throw Error(exponentOutOfRange + e);
  } else {
    x.s = 0;
    x.e = 0;
    x.d = [0];
  }
  return x;
}
function round(x, sd, rm) {
  var i, j, k, n, rd, doRound, w, xdi, xd = x.d;
  for (n = 1, k = xd[0]; k >= 10; k /= 10) n++;
  i = sd - n;
  if (i < 0) {
    i += LOG_BASE;
    j = sd;
    w = xd[xdi = 0];
  } else {
    xdi = Math.ceil((i + 1) / LOG_BASE);
    k = xd.length;
    if (xdi >= k) return x;
    w = k = xd[xdi];
    for (n = 1; k >= 10; k /= 10) n++;
    i %= LOG_BASE;
    j = i - LOG_BASE + n;
  }
  if (rm !== void 0) {
    k = mathpow(10, n - j - 1);
    rd = w / k % 10 | 0;
    doRound = sd < 0 || xd[xdi + 1] !== void 0 || w % k;
    doRound = rm < 4 ? (rd || doRound) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || doRound || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
    (i > 0 ? j > 0 ? w / mathpow(10, n - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
  }
  if (sd < 1 || !xd[0]) {
    if (doRound) {
      k = getBase10Exponent(x);
      xd.length = 1;
      sd = sd - k - 1;
      xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
      x.e = mathfloor(-sd / LOG_BASE) || 0;
    } else {
      xd.length = 1;
      xd[0] = x.e = x.s = 0;
    }
    return x;
  }
  if (i == 0) {
    xd.length = xdi;
    k = 1;
    xdi--;
  } else {
    xd.length = xdi + 1;
    k = mathpow(10, LOG_BASE - i);
    xd[xdi] = j > 0 ? (w / mathpow(10, n - j) % mathpow(10, j) | 0) * k : 0;
  }
  if (doRound) {
    for (; ; ) {
      if (xdi == 0) {
        if ((xd[0] += k) == BASE) {
          xd[0] = 1;
          ++x.e;
        }
        break;
      } else {
        xd[xdi] += k;
        if (xd[xdi] != BASE) break;
        xd[xdi--] = 0;
        k = 1;
      }
    }
  }
  for (i = xd.length; xd[--i] === 0; ) xd.pop();
  if (external && (x.e > MAX_E || x.e < -MAX_E)) {
    throw Error(exponentOutOfRange + getBase10Exponent(x));
  }
  return x;
}
function subtract(x, y) {
  var d, e, i, j, k, len, xd, xe, xLTy, yd, Ctor = x.constructor, pr = Ctor.precision;
  if (!x.s || !y.s) {
    if (y.s) y.s = -y.s;
    else y = new Ctor(x);
    return external ? round(y, pr) : y;
  }
  xd = x.d;
  yd = y.d;
  e = y.e;
  xe = x.e;
  xd = xd.slice();
  k = xe - e;
  if (k) {
    xLTy = k < 0;
    if (xLTy) {
      d = xd;
      k = -k;
      len = yd.length;
    } else {
      d = yd;
      e = xe;
      len = xd.length;
    }
    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
    if (k > i) {
      k = i;
      d.length = 1;
    }
    d.reverse();
    for (i = k; i--; ) d.push(0);
    d.reverse();
  } else {
    i = xd.length;
    len = yd.length;
    xLTy = i < len;
    if (xLTy) len = i;
    for (i = 0; i < len; i++) {
      if (xd[i] != yd[i]) {
        xLTy = xd[i] < yd[i];
        break;
      }
    }
    k = 0;
  }
  if (xLTy) {
    d = xd;
    xd = yd;
    yd = d;
    y.s = -y.s;
  }
  len = xd.length;
  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;
  for (i = yd.length; i > k; ) {
    if (xd[--i] < yd[i]) {
      for (j = i; j && xd[--j] === 0; ) xd[j] = BASE - 1;
      --xd[j];
      xd[i] += BASE;
    }
    xd[i] -= yd[i];
  }
  for (; xd[--len] === 0; ) xd.pop();
  for (; xd[0] === 0; xd.shift()) --e;
  if (!xd[0]) return new Ctor(0);
  y.d = xd;
  y.e = e;
  return external ? round(y, pr) : y;
}
function toString(x, isExp, sd) {
  var k, e = getBase10Exponent(x), str = digitsToString(x.d), len = str.length;
  if (isExp) {
    if (sd && (k = sd - len) > 0) {
      str = str.charAt(0) + "." + str.slice(1) + getZeroString(k);
    } else if (len > 1) {
      str = str.charAt(0) + "." + str.slice(1);
    }
    str = str + (e < 0 ? "e" : "e+") + e;
  } else if (e < 0) {
    str = "0." + getZeroString(-e - 1) + str;
    if (sd && (k = sd - len) > 0) str += getZeroString(k);
  } else if (e >= len) {
    str += getZeroString(e + 1 - len);
    if (sd && (k = sd - e - 1) > 0) str = str + "." + getZeroString(k);
  } else {
    if ((k = e + 1) < len) str = str.slice(0, k) + "." + str.slice(k);
    if (sd && (k = sd - len) > 0) {
      if (e + 1 === len) str += ".";
      str += getZeroString(k);
    }
  }
  return x.s < 0 ? "-" + str : str;
}
function truncate(arr, len) {
  if (arr.length > len) {
    arr.length = len;
    return true;
  }
}
function clone(obj) {
  var i, p, ps;
  function Decimal2(value) {
    var x = this;
    if (!(x instanceof Decimal2)) return new Decimal2(value);
    x.constructor = Decimal2;
    if (value instanceof Decimal2) {
      x.s = value.s;
      x.e = value.e;
      x.d = (value = value.d) ? value.slice() : value;
      return;
    }
    if (typeof value === "number") {
      if (value * 0 !== 0) {
        throw Error(invalidArgument + value);
      }
      if (value > 0) {
        x.s = 1;
      } else if (value < 0) {
        value = -value;
        x.s = -1;
      } else {
        x.s = 0;
        x.e = 0;
        x.d = [0];
        return;
      }
      if (value === ~~value && value < 1e7) {
        x.e = 0;
        x.d = [value];
        return;
      }
      return parseDecimal(x, value.toString());
    } else if (typeof value !== "string") {
      throw Error(invalidArgument + value);
    }
    if (value.charCodeAt(0) === 45) {
      value = value.slice(1);
      x.s = -1;
    } else {
      x.s = 1;
    }
    if (isDecimal.test(value)) parseDecimal(x, value);
    else throw Error(invalidArgument + value);
  }
  Decimal2.prototype = P;
  Decimal2.ROUND_UP = 0;
  Decimal2.ROUND_DOWN = 1;
  Decimal2.ROUND_CEIL = 2;
  Decimal2.ROUND_FLOOR = 3;
  Decimal2.ROUND_HALF_UP = 4;
  Decimal2.ROUND_HALF_DOWN = 5;
  Decimal2.ROUND_HALF_EVEN = 6;
  Decimal2.ROUND_HALF_CEIL = 7;
  Decimal2.ROUND_HALF_FLOOR = 8;
  Decimal2.clone = clone;
  Decimal2.config = Decimal2.set = config;
  if (obj === void 0) obj = {};
  if (obj) {
    ps = ["precision", "rounding", "toExpNeg", "toExpPos", "LN10"];
    for (i = 0; i < ps.length; ) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
  }
  Decimal2.config(obj);
  return Decimal2;
}
function config(obj) {
  if (!obj || typeof obj !== "object") {
    throw Error(decimalError + "Object expected");
  }
  var i, p, v, ps = [
    "precision",
    1,
    MAX_DIGITS,
    "rounding",
    0,
    8,
    "toExpNeg",
    -1 / 0,
    0,
    "toExpPos",
    0,
    1 / 0
  ];
  for (i = 0; i < ps.length; i += 3) {
    if ((v = obj[p = ps[i]]) !== void 0) {
      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
      else throw Error(invalidArgument + p + ": " + v);
    }
  }
  if ((v = obj[p = "LN10"]) !== void 0) {
    if (v == Math.LN10) this[p] = new this(v);
    else throw Error(invalidArgument + p + ": " + v);
  }
  return this;
}
var MAX_DIGITS, defaults, Decimal, external, decimalError, invalidArgument, exponentOutOfRange, mathfloor, mathpow, isDecimal, ONE, BASE, LOG_BASE, MAX_SAFE_INTEGER, MAX_E, P, divide, Decimal, decimal_default;
var init_decimal = __esm({
  "node_modules/decimal.js-light/decimal.mjs"() {
    MAX_DIGITS = 1e9;
    defaults = {
      // These values must be integers within the stated ranges (inclusive).
      // Most of these values can be changed during run-time using `Decimal.config`.
      // The maximum number of significant digits of the result of a calculation or base conversion.
      // E.g. `Decimal.config({ precision: 20 });`
      precision: 20,
      // 1 to MAX_DIGITS
      // The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,
      // `toFixed`, `toPrecision` and `toSignificantDigits`.
      //
      // ROUND_UP         0 Away from zero.
      // ROUND_DOWN       1 Towards zero.
      // ROUND_CEIL       2 Towards +Infinity.
      // ROUND_FLOOR      3 Towards -Infinity.
      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      //
      // E.g.
      // `Decimal.rounding = 4;`
      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
      rounding: 4,
      // 0 to 8
      // The exponent value at and beneath which `toString` returns exponential notation.
      // JavaScript numbers: -7
      toExpNeg: -7,
      // 0 to -MAX_E
      // The exponent value at and above which `toString` returns exponential notation.
      // JavaScript numbers: 21
      toExpPos: 21,
      // 0 to MAX_E
      // The natural logarithm of 10.
      // 115 digits
      LN10: "2.302585092994045684017991454684364207601101488628772976033327900967572609677352480235997205089598298341967784042286"
    };
    external = true;
    decimalError = "[DecimalError] ";
    invalidArgument = decimalError + "Invalid argument: ";
    exponentOutOfRange = decimalError + "Exponent out of range: ";
    mathfloor = Math.floor;
    mathpow = Math.pow;
    isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
    BASE = 1e7;
    LOG_BASE = 7;
    MAX_SAFE_INTEGER = 9007199254740991;
    MAX_E = mathfloor(MAX_SAFE_INTEGER / LOG_BASE);
    P = {};
    P.absoluteValue = P.abs = function() {
      var x = new this.constructor(this);
      if (x.s) x.s = 1;
      return x;
    };
    P.comparedTo = P.cmp = function(y) {
      var i, j, xdL, ydL, x = this;
      y = new x.constructor(y);
      if (x.s !== y.s) return x.s || -y.s;
      if (x.e !== y.e) return x.e > y.e ^ x.s < 0 ? 1 : -1;
      xdL = x.d.length;
      ydL = y.d.length;
      for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
        if (x.d[i] !== y.d[i]) return x.d[i] > y.d[i] ^ x.s < 0 ? 1 : -1;
      }
      return xdL === ydL ? 0 : xdL > ydL ^ x.s < 0 ? 1 : -1;
    };
    P.decimalPlaces = P.dp = function() {
      var x = this, w = x.d.length - 1, dp = (w - x.e) * LOG_BASE;
      w = x.d[w];
      if (w) for (; w % 10 == 0; w /= 10) dp--;
      return dp < 0 ? 0 : dp;
    };
    P.dividedBy = P.div = function(y) {
      return divide(this, new this.constructor(y));
    };
    P.dividedToIntegerBy = P.idiv = function(y) {
      var x = this, Ctor = x.constructor;
      return round(divide(x, new Ctor(y), 0, 1), Ctor.precision);
    };
    P.equals = P.eq = function(y) {
      return !this.cmp(y);
    };
    P.exponent = function() {
      return getBase10Exponent(this);
    };
    P.greaterThan = P.gt = function(y) {
      return this.cmp(y) > 0;
    };
    P.greaterThanOrEqualTo = P.gte = function(y) {
      return this.cmp(y) >= 0;
    };
    P.isInteger = P.isint = function() {
      return this.e > this.d.length - 2;
    };
    P.isNegative = P.isneg = function() {
      return this.s < 0;
    };
    P.isPositive = P.ispos = function() {
      return this.s > 0;
    };
    P.isZero = function() {
      return this.s === 0;
    };
    P.lessThan = P.lt = function(y) {
      return this.cmp(y) < 0;
    };
    P.lessThanOrEqualTo = P.lte = function(y) {
      return this.cmp(y) < 1;
    };
    P.logarithm = P.log = function(base) {
      var r, x = this, Ctor = x.constructor, pr = Ctor.precision, wpr = pr + 5;
      if (base === void 0) {
        base = new Ctor(10);
      } else {
        base = new Ctor(base);
        if (base.s < 1 || base.eq(ONE)) throw Error(decimalError + "NaN");
      }
      if (x.s < 1) throw Error(decimalError + (x.s ? "NaN" : "-Infinity"));
      if (x.eq(ONE)) return new Ctor(0);
      external = false;
      r = divide(ln(x, wpr), ln(base, wpr), wpr);
      external = true;
      return round(r, pr);
    };
    P.minus = P.sub = function(y) {
      var x = this;
      y = new x.constructor(y);
      return x.s == y.s ? subtract(x, y) : add(x, (y.s = -y.s, y));
    };
    P.modulo = P.mod = function(y) {
      var q, x = this, Ctor = x.constructor, pr = Ctor.precision;
      y = new Ctor(y);
      if (!y.s) throw Error(decimalError + "NaN");
      if (!x.s) return round(new Ctor(x), pr);
      external = false;
      q = divide(x, y, 0, 1).times(y);
      external = true;
      return x.minus(q);
    };
    P.naturalExponential = P.exp = function() {
      return exp(this);
    };
    P.naturalLogarithm = P.ln = function() {
      return ln(this);
    };
    P.negated = P.neg = function() {
      var x = new this.constructor(this);
      x.s = -x.s || 0;
      return x;
    };
    P.plus = P.add = function(y) {
      var x = this;
      y = new x.constructor(y);
      return x.s == y.s ? add(x, y) : subtract(x, (y.s = -y.s, y));
    };
    P.precision = P.sd = function(z) {
      var e, sd, w, x = this;
      if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);
      e = getBase10Exponent(x) + 1;
      w = x.d.length - 1;
      sd = w * LOG_BASE + 1;
      w = x.d[w];
      if (w) {
        for (; w % 10 == 0; w /= 10) sd--;
        for (w = x.d[0]; w >= 10; w /= 10) sd++;
      }
      return z && e > sd ? e : sd;
    };
    P.squareRoot = P.sqrt = function() {
      var e, n, pr, r, s, t, wpr, x = this, Ctor = x.constructor;
      if (x.s < 1) {
        if (!x.s) return new Ctor(0);
        throw Error(decimalError + "NaN");
      }
      e = getBase10Exponent(x);
      external = false;
      s = Math.sqrt(+x);
      if (s == 0 || s == 1 / 0) {
        n = digitsToString(x.d);
        if ((n.length + e) % 2 == 0) n += "0";
        s = Math.sqrt(n);
        e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);
        if (s == 1 / 0) {
          n = "5e" + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf("e") + 1) + e;
        }
        r = new Ctor(n);
      } else {
        r = new Ctor(s.toString());
      }
      pr = Ctor.precision;
      s = wpr = pr + 3;
      for (; ; ) {
        t = r;
        r = t.plus(divide(x, t, wpr + 2)).times(0.5);
        if (digitsToString(t.d).slice(0, wpr) === (n = digitsToString(r.d)).slice(0, wpr)) {
          n = n.slice(wpr - 3, wpr + 1);
          if (s == wpr && n == "4999") {
            round(t, pr + 1, 0);
            if (t.times(t).eq(x)) {
              r = t;
              break;
            }
          } else if (n != "9999") {
            break;
          }
          wpr += 4;
        }
      }
      external = true;
      return round(r, pr);
    };
    P.times = P.mul = function(y) {
      var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
      if (!x.s || !y.s) return new Ctor(0);
      y.s *= x.s;
      e = x.e + y.e;
      xdL = xd.length;
      ydL = yd.length;
      if (xdL < ydL) {
        r = xd;
        xd = yd;
        yd = r;
        rL = xdL;
        xdL = ydL;
        ydL = rL;
      }
      r = [];
      rL = xdL + ydL;
      for (i = rL; i--; ) r.push(0);
      for (i = ydL; --i >= 0; ) {
        carry = 0;
        for (k = xdL + i; k > i; ) {
          t = r[k] + yd[i] * xd[k - i - 1] + carry;
          r[k--] = t % BASE | 0;
          carry = t / BASE | 0;
        }
        r[k] = (r[k] + carry) % BASE | 0;
      }
      for (; !r[--rL]; ) r.pop();
      if (carry) ++e;
      else r.shift();
      y.d = r;
      y.e = e;
      return external ? round(y, Ctor.precision) : y;
    };
    P.toDecimalPlaces = P.todp = function(dp, rm) {
      var x = this, Ctor = x.constructor;
      x = new Ctor(x);
      if (dp === void 0) return x;
      checkInt32(dp, 0, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
      return round(x, dp + getBase10Exponent(x) + 1, rm);
    };
    P.toExponential = function(dp, rm) {
      var str, x = this, Ctor = x.constructor;
      if (dp === void 0) {
        str = toString(x, true);
      } else {
        checkInt32(dp, 0, MAX_DIGITS);
        if (rm === void 0) rm = Ctor.rounding;
        else checkInt32(rm, 0, 8);
        x = round(new Ctor(x), dp + 1, rm);
        str = toString(x, true, dp + 1);
      }
      return str;
    };
    P.toFixed = function(dp, rm) {
      var str, y, x = this, Ctor = x.constructor;
      if (dp === void 0) return toString(x);
      checkInt32(dp, 0, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
      y = round(new Ctor(x), dp + getBase10Exponent(x) + 1, rm);
      str = toString(y.abs(), false, dp + getBase10Exponent(y) + 1);
      return x.isneg() && !x.isZero() ? "-" + str : str;
    };
    P.toInteger = P.toint = function() {
      var x = this, Ctor = x.constructor;
      return round(new Ctor(x), getBase10Exponent(x) + 1, Ctor.rounding);
    };
    P.toNumber = function() {
      return +this;
    };
    P.toPower = P.pow = function(y) {
      var e, k, pr, r, sign, yIsInt, x = this, Ctor = x.constructor, guard = 12, yn = +(y = new Ctor(y));
      if (!y.s) return new Ctor(ONE);
      x = new Ctor(x);
      if (!x.s) {
        if (y.s < 1) throw Error(decimalError + "Infinity");
        return x;
      }
      if (x.eq(ONE)) return x;
      pr = Ctor.precision;
      if (y.eq(ONE)) return round(x, pr);
      e = y.e;
      k = y.d.length - 1;
      yIsInt = e >= k;
      sign = x.s;
      if (!yIsInt) {
        if (sign < 0) throw Error(decimalError + "NaN");
      } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
        r = new Ctor(ONE);
        e = Math.ceil(pr / LOG_BASE + 4);
        external = false;
        for (; ; ) {
          if (k % 2) {
            r = r.times(x);
            truncate(r.d, e);
          }
          k = mathfloor(k / 2);
          if (k === 0) break;
          x = x.times(x);
          truncate(x.d, e);
        }
        external = true;
        return y.s < 0 ? new Ctor(ONE).div(r) : round(r, pr);
      }
      sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;
      x.s = 1;
      external = false;
      r = y.times(ln(x, pr + guard));
      external = true;
      r = exp(r);
      r.s = sign;
      return r;
    };
    P.toPrecision = function(sd, rm) {
      var e, str, x = this, Ctor = x.constructor;
      if (sd === void 0) {
        e = getBase10Exponent(x);
        str = toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);
      } else {
        checkInt32(sd, 1, MAX_DIGITS);
        if (rm === void 0) rm = Ctor.rounding;
        else checkInt32(rm, 0, 8);
        x = round(new Ctor(x), sd, rm);
        e = getBase10Exponent(x);
        str = toString(x, sd <= e || e <= Ctor.toExpNeg, sd);
      }
      return str;
    };
    P.toSignificantDigits = P.tosd = function(sd, rm) {
      var x = this, Ctor = x.constructor;
      if (sd === void 0) {
        sd = Ctor.precision;
        rm = Ctor.rounding;
      } else {
        checkInt32(sd, 1, MAX_DIGITS);
        if (rm === void 0) rm = Ctor.rounding;
        else checkInt32(rm, 0, 8);
      }
      return round(new Ctor(x), sd, rm);
    };
    P.toString = P.valueOf = P.val = P.toJSON = P[Symbol.for("nodejs.util.inspect.custom")] = function() {
      var x = this, e = getBase10Exponent(x), Ctor = x.constructor;
      return toString(x, e <= Ctor.toExpNeg || e >= Ctor.toExpPos);
    };
    divide = /* @__PURE__ */ function() {
      function multiplyInteger(x, k) {
        var temp, carry = 0, i = x.length;
        for (x = x.slice(); i--; ) {
          temp = x[i] * k + carry;
          x[i] = temp % BASE | 0;
          carry = temp / BASE | 0;
        }
        if (carry) x.unshift(carry);
        return x;
      }
      function compare(a, b, aL, bL) {
        var i, r;
        if (aL != bL) {
          r = aL > bL ? 1 : -1;
        } else {
          for (i = r = 0; i < aL; i++) {
            if (a[i] != b[i]) {
              r = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }
        return r;
      }
      function subtract2(a, b, aL) {
        var i = 0;
        for (; aL--; ) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * BASE + a[aL] - b[aL];
        }
        for (; !a[0] && a.length > 1; ) a.shift();
      }
      return function(x, y, pr, dp) {
        var cmp, e, i, k, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
        if (!x.s) return new Ctor(x);
        if (!y.s) throw Error(decimalError + "Division by zero");
        e = x.e - y.e;
        yL = yd.length;
        xL = xd.length;
        q = new Ctor(sign);
        qd = q.d = [];
        for (i = 0; yd[i] == (xd[i] || 0); ) ++i;
        if (yd[i] > (xd[i] || 0)) --e;
        if (pr == null) {
          sd = pr = Ctor.precision;
        } else if (dp) {
          sd = pr + (getBase10Exponent(x) - getBase10Exponent(y)) + 1;
        } else {
          sd = pr;
        }
        if (sd < 0) return new Ctor(0);
        sd = sd / LOG_BASE + 2 | 0;
        i = 0;
        if (yL == 1) {
          k = 0;
          yd = yd[0];
          sd++;
          for (; (i < xL || k) && sd--; i++) {
            t = k * BASE + (xd[i] || 0);
            qd[i] = t / yd | 0;
            k = t % yd | 0;
          }
        } else {
          k = BASE / (yd[0] + 1) | 0;
          if (k > 1) {
            yd = multiplyInteger(yd, k);
            xd = multiplyInteger(xd, k);
            yL = yd.length;
            xL = xd.length;
          }
          xi = yL;
          rem = xd.slice(0, yL);
          remL = rem.length;
          for (; remL < yL; ) rem[remL++] = 0;
          yz = yd.slice();
          yz.unshift(0);
          yd0 = yd[0];
          if (yd[1] >= BASE / 2) ++yd0;
          do {
            k = 0;
            cmp = compare(yd, rem, yL, remL);
            if (cmp < 0) {
              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * BASE + (rem[1] || 0);
              k = rem0 / yd0 | 0;
              if (k > 1) {
                if (k >= BASE) k = BASE - 1;
                prod = multiplyInteger(yd, k);
                prodL = prod.length;
                remL = rem.length;
                cmp = compare(prod, rem, prodL, remL);
                if (cmp == 1) {
                  k--;
                  subtract2(prod, yL < prodL ? yz : yd, prodL);
                }
              } else {
                if (k == 0) cmp = k = 1;
                prod = yd.slice();
              }
              prodL = prod.length;
              if (prodL < remL) prod.unshift(0);
              subtract2(rem, prod, remL);
              if (cmp == -1) {
                remL = rem.length;
                cmp = compare(yd, rem, yL, remL);
                if (cmp < 1) {
                  k++;
                  subtract2(rem, yL < remL ? yz : yd, remL);
                }
              }
              remL = rem.length;
            } else if (cmp === 0) {
              k++;
              rem = [0];
            }
            qd[i++] = k;
            if (cmp && rem[0]) {
              rem[remL++] = xd[xi] || 0;
            } else {
              rem = [xd[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] !== void 0) && sd--);
        }
        if (!qd[0]) qd.shift();
        q.e = e;
        return round(q, dp ? pr + getBase10Exponent(q) + 1 : pr);
      };
    }();
    Decimal = clone(defaults);
    ONE = new Decimal(1);
    decimal_default = Decimal;
  }
});

// node_modules/recharts-scale/lib/util/utils.js
var require_utils = __commonJS({
  "node_modules/recharts-scale/lib/util/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.memoize = exports.reverse = exports.compose = exports.map = exports.range = exports.curry = exports.PLACE_HOLDER = void 0;
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    var identity = function identity2(i) {
      return i;
    };
    var PLACE_HOLDER = {
      "@@functional/placeholder": true
    };
    exports.PLACE_HOLDER = PLACE_HOLDER;
    var isPlaceHolder = function isPlaceHolder2(val) {
      return val === PLACE_HOLDER;
    };
    var curry0 = function curry02(fn) {
      return function _curried() {
        if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? void 0 : arguments[0])) {
          return _curried;
        }
        return fn.apply(void 0, arguments);
      };
    };
    var curryN = function curryN2(n, fn) {
      if (n === 1) {
        return fn;
      }
      return curry0(function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var argsLength = args.filter(function(arg) {
          return arg !== PLACE_HOLDER;
        }).length;
        if (argsLength >= n) {
          return fn.apply(void 0, args);
        }
        return curryN2(n - argsLength, curry0(function() {
          for (var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            restArgs[_key2] = arguments[_key2];
          }
          var newArgs = args.map(function(arg) {
            return isPlaceHolder(arg) ? restArgs.shift() : arg;
          });
          return fn.apply(void 0, _toConsumableArray(newArgs).concat(restArgs));
        }));
      });
    };
    var curry = function curry2(fn) {
      return curryN(fn.length, fn);
    };
    exports.curry = curry;
    var range = function range2(begin, end) {
      var arr = [];
      for (var i = begin; i < end; ++i) {
        arr[i - begin] = i;
      }
      return arr;
    };
    exports.range = range;
    var map = curry(function(fn, arr) {
      if (Array.isArray(arr)) {
        return arr.map(fn);
      }
      return Object.keys(arr).map(function(key) {
        return arr[key];
      }).map(fn);
    });
    exports.map = map;
    var compose = function compose2() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      if (!args.length) {
        return identity;
      }
      var fns = args.reverse();
      var firstFn = fns[0];
      var tailsFn = fns.slice(1);
      return function() {
        return tailsFn.reduce(function(res, fn) {
          return fn(res);
        }, firstFn.apply(void 0, arguments));
      };
    };
    exports.compose = compose;
    var reverse = function reverse2(arr) {
      if (Array.isArray(arr)) {
        return arr.reverse();
      }
      return arr.split("").reverse.join("");
    };
    exports.reverse = reverse;
    var memoize = function memoize2(fn) {
      var lastArgs = null;
      var lastResult = null;
      return function() {
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        if (lastArgs && args.every(function(val, i) {
          return val === lastArgs[i];
        })) {
          return lastResult;
        }
        lastArgs = args;
        lastResult = fn.apply(void 0, args);
        return lastResult;
      };
    };
    exports.memoize = memoize;
  }
});

// node_modules/recharts-scale/lib/util/arithmetic.js
var require_arithmetic = __commonJS({
  "node_modules/recharts-scale/lib/util/arithmetic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _decimal = _interopRequireDefault((init_decimal(), __toCommonJS(decimal_exports)));
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function getDigitCount(value) {
      var result;
      if (value === 0) {
        result = 1;
      } else {
        result = Math.floor(new _decimal.default(value).abs().log(10).toNumber()) + 1;
      }
      return result;
    }
    function rangeStep(start, end, step) {
      var num = new _decimal.default(start);
      var i = 0;
      var result = [];
      while (num.lt(end) && i < 1e5) {
        result.push(num.toNumber());
        num = num.add(step);
        i++;
      }
      return result;
    }
    var interpolateNumber = (0, _utils.curry)(function(a, b, t) {
      var newA = +a;
      var newB = +b;
      return newA + t * (newB - newA);
    });
    var uninterpolateNumber = (0, _utils.curry)(function(a, b, x) {
      var diff = b - +a;
      diff = diff || Infinity;
      return (x - a) / diff;
    });
    var uninterpolateTruncation = (0, _utils.curry)(function(a, b, x) {
      var diff = b - +a;
      diff = diff || Infinity;
      return Math.max(0, Math.min(1, (x - a) / diff));
    });
    var _default = {
      rangeStep,
      getDigitCount,
      interpolateNumber,
      uninterpolateNumber,
      uninterpolateTruncation
    };
    exports.default = _default;
  }
});

// node_modules/recharts-scale/lib/getNiceTickValues.js
var require_getNiceTickValues = __commonJS({
  "node_modules/recharts-scale/lib/getNiceTickValues.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getTickValuesFixedDomain = exports.getTickValues = exports.getNiceTickValues = void 0;
    var _decimal = _interopRequireDefault((init_decimal(), __toCommonJS(decimal_exports)));
    var _utils = require_utils();
    var _arithmetic = _interopRequireDefault(require_arithmetic());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function getValidInterval(_ref) {
      var _ref2 = _slicedToArray(_ref, 2), min = _ref2[0], max = _ref2[1];
      var validMin = min, validMax = max;
      if (min > max) {
        validMin = max;
        validMax = min;
      }
      return [validMin, validMax];
    }
    function getFormatStep(roughStep, allowDecimals, correctionFactor) {
      if (roughStep.lte(0)) {
        return new _decimal.default(0);
      }
      var digitCount = _arithmetic.default.getDigitCount(roughStep.toNumber());
      var digitCountValue = new _decimal.default(10).pow(digitCount);
      var stepRatio = roughStep.div(digitCountValue);
      var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;
      var amendStepRatio = new _decimal.default(Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);
      var formatStep = amendStepRatio.mul(digitCountValue);
      return allowDecimals ? formatStep : new _decimal.default(Math.ceil(formatStep));
    }
    function getTickOfSingleValue(value, tickCount, allowDecimals) {
      var step = 1;
      var middle = new _decimal.default(value);
      if (!middle.isint() && allowDecimals) {
        var absVal = Math.abs(value);
        if (absVal < 1) {
          step = new _decimal.default(10).pow(_arithmetic.default.getDigitCount(value) - 1);
          middle = new _decimal.default(Math.floor(middle.div(step).toNumber())).mul(step);
        } else if (absVal > 1) {
          middle = new _decimal.default(Math.floor(value));
        }
      } else if (value === 0) {
        middle = new _decimal.default(Math.floor((tickCount - 1) / 2));
      } else if (!allowDecimals) {
        middle = new _decimal.default(Math.floor(value));
      }
      var middleIndex = Math.floor((tickCount - 1) / 2);
      var fn = (0, _utils.compose)((0, _utils.map)(function(n) {
        return middle.add(new _decimal.default(n - middleIndex).mul(step)).toNumber();
      }), _utils.range);
      return fn(0, tickCount);
    }
    function calculateStep(min, max, tickCount, allowDecimals) {
      var correctionFactor = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
      if (!Number.isFinite((max - min) / (tickCount - 1))) {
        return {
          step: new _decimal.default(0),
          tickMin: new _decimal.default(0),
          tickMax: new _decimal.default(0)
        };
      }
      var step = getFormatStep(new _decimal.default(max).sub(min).div(tickCount - 1), allowDecimals, correctionFactor);
      var middle;
      if (min <= 0 && max >= 0) {
        middle = new _decimal.default(0);
      } else {
        middle = new _decimal.default(min).add(max).div(2);
        middle = middle.sub(new _decimal.default(middle).mod(step));
      }
      var belowCount = Math.ceil(middle.sub(min).div(step).toNumber());
      var upCount = Math.ceil(new _decimal.default(max).sub(middle).div(step).toNumber());
      var scaleCount = belowCount + upCount + 1;
      if (scaleCount > tickCount) {
        return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);
      }
      if (scaleCount < tickCount) {
        upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;
        belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);
      }
      return {
        step,
        tickMin: middle.sub(new _decimal.default(belowCount).mul(step)),
        tickMax: middle.add(new _decimal.default(upCount).mul(step))
      };
    }
    function getNiceTickValuesFn(_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2), min = _ref4[0], max = _ref4[1];
      var tickCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 6;
      var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var count = Math.max(tickCount, 2);
      var _getValidInterval = getValidInterval([min, max]), _getValidInterval2 = _slicedToArray(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];
      if (cormin === -Infinity || cormax === Infinity) {
        var _values = cormax === Infinity ? [cormin].concat(_toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function() {
          return Infinity;
        }))) : [].concat(_toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function() {
          return -Infinity;
        })), [cormax]);
        return min > max ? (0, _utils.reverse)(_values) : _values;
      }
      if (cormin === cormax) {
        return getTickOfSingleValue(cormin, tickCount, allowDecimals);
      }
      var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;
      var values = _arithmetic.default.rangeStep(tickMin, tickMax.add(new _decimal.default(0.1).mul(step)), step);
      return min > max ? (0, _utils.reverse)(values) : values;
    }
    function getTickValuesFn(_ref5) {
      var _ref6 = _slicedToArray(_ref5, 2), min = _ref6[0], max = _ref6[1];
      var tickCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 6;
      var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var count = Math.max(tickCount, 2);
      var _getValidInterval3 = getValidInterval([min, max]), _getValidInterval4 = _slicedToArray(_getValidInterval3, 2), cormin = _getValidInterval4[0], cormax = _getValidInterval4[1];
      if (cormin === -Infinity || cormax === Infinity) {
        return [min, max];
      }
      if (cormin === cormax) {
        return getTickOfSingleValue(cormin, tickCount, allowDecimals);
      }
      var step = getFormatStep(new _decimal.default(cormax).sub(cormin).div(count - 1), allowDecimals, 0);
      var fn = (0, _utils.compose)((0, _utils.map)(function(n) {
        return new _decimal.default(cormin).add(new _decimal.default(n).mul(step)).toNumber();
      }), _utils.range);
      var values = fn(0, count).filter(function(entry) {
        return entry >= cormin && entry <= cormax;
      });
      return min > max ? (0, _utils.reverse)(values) : values;
    }
    function getTickValuesFixedDomainFn(_ref7, tickCount) {
      var _ref8 = _slicedToArray(_ref7, 2), min = _ref8[0], max = _ref8[1];
      var allowDecimals = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var _getValidInterval5 = getValidInterval([min, max]), _getValidInterval6 = _slicedToArray(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];
      if (cormin === -Infinity || cormax === Infinity) {
        return [min, max];
      }
      if (cormin === cormax) {
        return [cormin];
      }
      var count = Math.max(tickCount, 2);
      var step = getFormatStep(new _decimal.default(cormax).sub(cormin).div(count - 1), allowDecimals, 0);
      var values = [].concat(_toConsumableArray(_arithmetic.default.rangeStep(new _decimal.default(cormin), new _decimal.default(cormax).sub(new _decimal.default(0.99).mul(step)), step)), [cormax]);
      return min > max ? (0, _utils.reverse)(values) : values;
    }
    var getNiceTickValues = (0, _utils.memoize)(getNiceTickValuesFn);
    exports.getNiceTickValues = getNiceTickValues;
    var getTickValues = (0, _utils.memoize)(getTickValuesFn);
    exports.getTickValues = getTickValues;
    var getTickValuesFixedDomain = (0, _utils.memoize)(getTickValuesFixedDomainFn);
    exports.getTickValuesFixedDomain = getTickValuesFixedDomain;
  }
});

// node_modules/recharts-scale/lib/index.js
var require_lib = __commonJS({
  "node_modules/recharts-scale/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "getTickValues", {
      enumerable: true,
      get: function get() {
        return _getNiceTickValues.getTickValues;
      }
    });
    Object.defineProperty(exports, "getNiceTickValues", {
      enumerable: true,
      get: function get() {
        return _getNiceTickValues.getNiceTickValues;
      }
    });
    Object.defineProperty(exports, "getTickValuesFixedDomain", {
      enumerable: true,
      get: function get() {
        return _getNiceTickValues.getTickValuesFixedDomain;
      }
    });
    var _getNiceTickValues = require_getNiceTickValues();
  }
});

// node_modules/tiny-invariant/dist/tiny-invariant.cjs.js
var require_tiny_invariant_cjs = __commonJS({
  "node_modules/tiny-invariant/dist/tiny-invariant.cjs.js"(exports, module) {
    "use strict";
    var isProduction = false;
    var prefix = "Invariant failed";
    function invariant(condition, message) {
      if (condition) {
        return;
      }
      if (isProduction) {
        throw new Error(prefix);
      }
      var provided = typeof message === "function" ? message() : message;
      var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
      throw new Error(value);
    }
    module.exports = invariant;
  }
});

// node_modules/recharts/lib/cartesian/ErrorBar.js
var require_ErrorBar = __commonJS({
  "node_modules/recharts/lib/cartesian/ErrorBar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ErrorBar = void 0;
    var _react = _interopRequireDefault(require_react());
    var _tinyInvariant = _interopRequireDefault(require_tiny_invariant_cjs());
    var _Layer = require_Layer();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["offset", "layout", "width", "dataKey", "data", "dataPointFormatter", "xAxis", "yAxis"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var ErrorBar = exports.ErrorBar = function(_React$Component) {
      function ErrorBar2() {
        _classCallCheck(this, ErrorBar2);
        return _callSuper(this, ErrorBar2, arguments);
      }
      _inherits(ErrorBar2, _React$Component);
      return _createClass(ErrorBar2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, offset = _this$props.offset, layout = _this$props.layout, width = _this$props.width, dataKey = _this$props.dataKey, data = _this$props.data, dataPointFormatter = _this$props.dataPointFormatter, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, others = _objectWithoutProperties(_this$props, _excluded);
          var svgProps = (0, _ReactUtils.filterProps)(others, false);
          !!(this.props.direction === "x" && xAxis.type !== "number") ? true ? (0, _tinyInvariant["default"])(false, 'ErrorBar requires Axis type property to be "number".') : (0, _tinyInvariant["default"])(false) : void 0;
          var errorBars = data.map(function(entry) {
            var _dataPointFormatter = dataPointFormatter(entry, dataKey), x = _dataPointFormatter.x, y = _dataPointFormatter.y, value = _dataPointFormatter.value, errorVal = _dataPointFormatter.errorVal;
            if (!errorVal) {
              return null;
            }
            var lineCoordinates = [];
            var lowBound, highBound;
            if (Array.isArray(errorVal)) {
              var _errorVal = _slicedToArray(errorVal, 2);
              lowBound = _errorVal[0];
              highBound = _errorVal[1];
            } else {
              lowBound = highBound = errorVal;
            }
            if (layout === "vertical") {
              var scale = xAxis.scale;
              var yMid = y + offset;
              var yMin = yMid + width;
              var yMax = yMid - width;
              var xMin = scale(value - lowBound);
              var xMax = scale(value + highBound);
              lineCoordinates.push({
                x1: xMax,
                y1: yMin,
                x2: xMax,
                y2: yMax
              });
              lineCoordinates.push({
                x1: xMin,
                y1: yMid,
                x2: xMax,
                y2: yMid
              });
              lineCoordinates.push({
                x1: xMin,
                y1: yMin,
                x2: xMin,
                y2: yMax
              });
            } else if (layout === "horizontal") {
              var _scale = yAxis.scale;
              var xMid = x + offset;
              var _xMin = xMid - width;
              var _xMax = xMid + width;
              var _yMin = _scale(value - lowBound);
              var _yMax = _scale(value + highBound);
              lineCoordinates.push({
                x1: _xMin,
                y1: _yMax,
                x2: _xMax,
                y2: _yMax
              });
              lineCoordinates.push({
                x1: xMid,
                y1: _yMin,
                x2: xMid,
                y2: _yMax
              });
              lineCoordinates.push({
                x1: _xMin,
                y1: _yMin,
                x2: _xMax,
                y2: _yMin
              });
            }
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: "recharts-errorBar",
              key: "bar-".concat(lineCoordinates.map(function(c) {
                return "".concat(c.x1, "-").concat(c.x2, "-").concat(c.y1, "-").concat(c.y2);
              }))
            }, svgProps), lineCoordinates.map(function(coordinates) {
              return _react["default"].createElement("line", _extends({}, coordinates, {
                key: "line-".concat(coordinates.x1, "-").concat(coordinates.x2, "-").concat(coordinates.y1, "-").concat(coordinates.y2)
              }));
            }));
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-errorBars"
          }, errorBars);
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(ErrorBar, "defaultProps", {
      stroke: "black",
      strokeWidth: 1.5,
      width: 5,
      offset: 0,
      layout: "horizontal"
    });
    _defineProperty(ErrorBar, "displayName", "ErrorBar");
  }
});

// node_modules/recharts/lib/util/getLegendProps.js
var require_getLegendProps = __commonJS({
  "node_modules/recharts/lib/util/getLegendProps.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getLegendProps = void 0;
    var _Legend = require_Legend();
    var _ChartUtils = require_ChartUtils();
    var _ReactUtils = require_ReactUtils();
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getLegendProps = exports.getLegendProps = function getLegendProps2(_ref) {
      var children = _ref.children, formattedGraphicalItems = _ref.formattedGraphicalItems, legendWidth = _ref.legendWidth, legendContent = _ref.legendContent;
      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend.Legend);
      if (!legendItem) {
        return null;
      }
      var legendDefaultProps = _Legend.Legend.defaultProps;
      var legendProps = legendDefaultProps !== void 0 ? _objectSpread(_objectSpread({}, legendDefaultProps), legendItem.props) : {};
      var legendData;
      if (legendItem.props && legendItem.props.payload) {
        legendData = legendItem.props && legendItem.props.payload;
      } else if (legendContent === "children") {
        legendData = (formattedGraphicalItems || []).reduce(function(result, _ref2) {
          var item = _ref2.item, props = _ref2.props;
          var data = props.sectors || props.data || [];
          return result.concat(data.map(function(entry) {
            return {
              type: legendItem.props.iconType || item.props.legendType,
              value: entry.name,
              color: entry.fill,
              payload: entry
            };
          }));
        }, []);
      } else {
        legendData = (formattedGraphicalItems || []).map(function(_ref3) {
          var item = _ref3.item;
          var itemDefaultProps = item.type.defaultProps;
          var itemProps = itemDefaultProps !== void 0 ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : {};
          var dataKey = itemProps.dataKey, name = itemProps.name, legendType = itemProps.legendType, hide = itemProps.hide;
          return {
            inactive: hide,
            dataKey,
            type: legendProps.iconType || legendType || "square",
            color: (0, _ChartUtils.getMainColorOfGraphicItem)(item),
            value: name || dataKey,
            // @ts-expect-error property strokeDasharray is required in Payload but optional in props
            payload: itemProps
          };
        });
      }
      return _objectSpread(_objectSpread(_objectSpread({}, legendProps), _Legend.Legend.getWithHeight(legendItem, legendWidth)), {}, {
        payload: legendData,
        item: legendItem
      });
    };
  }
});

// node_modules/recharts/lib/util/ChartUtils.js
var require_ChartUtils = __commonJS({
  "node_modules/recharts/lib/util/ChartUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getCateCoordinateOfBar = exports.getBaseValueOfBar = exports.getBarSizeList = exports.getBarPosition = exports.getBandSizeOfAxis = exports.findPositionOfBar = exports.combineEventHandlers = exports.checkDomainOfScale = exports.calculateActiveTickIndex = exports.appendOffsetOfLegend = exports.MIN_VALUE_REG = exports.MAX_VALUE_REG = void 0;
    exports.getCateCoordinateOfLine = getCateCoordinateOfLine;
    exports.getCoordinatesOfGrid = void 0;
    exports.getDomainOfDataByKey = getDomainOfDataByKey;
    exports.getDomainOfStackGroups = exports.getDomainOfItemsWithSameAxis = exports.getDomainOfErrorBars = void 0;
    Object.defineProperty(exports, "getLegendProps", {
      enumerable: true,
      get: function get() {
        return _getLegendProps.getLegendProps;
      }
    });
    exports.getTooltipItem = exports.getTicksOfScale = exports.getTicksOfAxis = exports.getStackedDataOfItem = exports.getStackedData = exports.getStackGroupsByAxisId = exports.getMainColorOfGraphicItem = void 0;
    exports.getValueByDataKey = getValueByDataKey;
    exports.truncateByDomain = exports.parseSpecifiedDomain = exports.parseScale = exports.parseErrorBarsOfAxis = exports.parseDomainOfCategoryAxis = exports.offsetSign = exports.offsetPositive = exports.isCategoricalAxis = void 0;
    var d3Scales = _interopRequireWildcard(require_d3_scale());
    var _d3Shape = require_d3_shape();
    var _max = _interopRequireDefault(require_max2());
    var _min = _interopRequireDefault(require_min2());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isString = _interopRequireDefault(require_isString());
    var _get = _interopRequireDefault(require_get());
    var _flatMap = _interopRequireDefault(require_flatMap());
    var _isNaN = _interopRequireDefault(require_isNaN());
    var _upperFirst = _interopRequireDefault(require_upperFirst());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _sortBy = _interopRequireDefault(require_sortBy());
    var _rechartsScale = require_lib();
    var _ErrorBar = require_ErrorBar();
    var _DataUtils = require_DataUtils();
    var _ReactUtils = require_ReactUtils();
    var _getLegendProps = require_getLegendProps();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function getValueByDataKey(obj, dataKey, defaultValue) {
      if ((0, _isNil["default"])(obj) || (0, _isNil["default"])(dataKey)) {
        return defaultValue;
      }
      if ((0, _DataUtils.isNumOrStr)(dataKey)) {
        return (0, _get["default"])(obj, dataKey, defaultValue);
      }
      if ((0, _isFunction["default"])(dataKey)) {
        return dataKey(obj);
      }
      return defaultValue;
    }
    function getDomainOfDataByKey(data, key, type, filterNil) {
      var flattenData = (0, _flatMap["default"])(data, function(entry) {
        return getValueByDataKey(entry, key);
      });
      if (type === "number") {
        var domain = flattenData.filter(function(entry) {
          return (0, _DataUtils.isNumber)(entry) || parseFloat(entry);
        });
        return domain.length ? [(0, _min["default"])(domain), (0, _max["default"])(domain)] : [Infinity, -Infinity];
      }
      var validateData = filterNil ? flattenData.filter(function(entry) {
        return !(0, _isNil["default"])(entry);
      }) : flattenData;
      return validateData.map(function(entry) {
        return (0, _DataUtils.isNumOrStr)(entry) || entry instanceof Date ? entry : "";
      });
    }
    var calculateActiveTickIndex = exports.calculateActiveTickIndex = function calculateActiveTickIndex2(coordinate) {
      var _ticks$length;
      var ticks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      var unsortedTicks = arguments.length > 2 ? arguments[2] : void 0;
      var axis = arguments.length > 3 ? arguments[3] : void 0;
      var index = -1;
      var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;
      if (len <= 1) {
        return 0;
      }
      if (axis && axis.axisType === "angleAxis" && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {
        var range = axis.range;
        for (var i = 0; i < len; i++) {
          var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;
          var cur = unsortedTicks[i].coordinate;
          var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;
          var sameDirectionCoord = void 0;
          if ((0, _DataUtils.mathSign)(cur - before) !== (0, _DataUtils.mathSign)(after - cur)) {
            var diffInterval = [];
            if ((0, _DataUtils.mathSign)(after - cur) === (0, _DataUtils.mathSign)(range[1] - range[0])) {
              sameDirectionCoord = after;
              var curInRange = cur + range[1] - range[0];
              diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);
              diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);
            } else {
              sameDirectionCoord = before;
              var afterInRange = after + range[1] - range[0];
              diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);
              diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);
            }
            var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];
            if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {
              index = unsortedTicks[i].index;
              break;
            }
          } else {
            var minValue = Math.min(before, after);
            var maxValue = Math.max(before, after);
            if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {
              index = unsortedTicks[i].index;
              break;
            }
          }
        }
      } else {
        for (var _i = 0; _i < len; _i++) {
          if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {
            index = ticks[_i].index;
            break;
          }
        }
      }
      return index;
    };
    var getMainColorOfGraphicItem = exports.getMainColorOfGraphicItem = function getMainColorOfGraphicItem2(item) {
      var _item$type;
      var _ref = item, displayName = _ref.type.displayName;
      var defaultedProps = (_item$type = item.type) !== null && _item$type !== void 0 && _item$type.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
      var stroke = defaultedProps.stroke, fill = defaultedProps.fill;
      var result;
      switch (displayName) {
        case "Line":
          result = stroke;
          break;
        case "Area":
        case "Radar":
          result = stroke && stroke !== "none" ? stroke : fill;
          break;
        default:
          result = fill;
          break;
      }
      return result;
    };
    var getBarSizeList = exports.getBarSizeList = function getBarSizeList2(_ref2) {
      var globalSize = _ref2.barSize, totalSize = _ref2.totalSize, _ref2$stackGroups = _ref2.stackGroups, stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;
      if (!stackGroups) {
        return {};
      }
      var result = {};
      var numericAxisIds = Object.keys(stackGroups);
      for (var i = 0, len = numericAxisIds.length; i < len; i++) {
        var sgs = stackGroups[numericAxisIds[i]].stackGroups;
        var stackIds = Object.keys(sgs);
        for (var j = 0, sLen = stackIds.length; j < sLen; j++) {
          var _sgs$stackIds$j = sgs[stackIds[j]], items = _sgs$stackIds$j.items, cateAxisId = _sgs$stackIds$j.cateAxisId;
          var barItems = items.filter(function(item) {
            return (0, _ReactUtils.getDisplayName)(item.type).indexOf("Bar") >= 0;
          });
          if (barItems && barItems.length) {
            var barItemDefaultProps = barItems[0].type.defaultProps;
            var barItemProps = barItemDefaultProps !== void 0 ? _objectSpread(_objectSpread({}, barItemDefaultProps), barItems[0].props) : barItems[0].props;
            var selfSize = barItemProps.barSize;
            var cateId = barItemProps[cateAxisId];
            if (!result[cateId]) {
              result[cateId] = [];
            }
            var barSize = (0, _isNil["default"])(selfSize) ? globalSize : selfSize;
            result[cateId].push({
              item: barItems[0],
              stackList: barItems.slice(1),
              barSize: (0, _isNil["default"])(barSize) ? void 0 : (0, _DataUtils.getPercentValue)(barSize, totalSize, 0)
            });
          }
        }
      }
      return result;
    };
    var getBarPosition = exports.getBarPosition = function getBarPosition2(_ref3) {
      var barGap = _ref3.barGap, barCategoryGap = _ref3.barCategoryGap, bandSize = _ref3.bandSize, _ref3$sizeList = _ref3.sizeList, sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList, maxBarSize = _ref3.maxBarSize;
      var len = sizeList.length;
      if (len < 1) return null;
      var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);
      var result;
      var initialValue = [];
      if (sizeList[0].barSize === +sizeList[0].barSize) {
        var useFull = false;
        var fullBarSize = bandSize / len;
        var sum = sizeList.reduce(function(res, entry) {
          return res + entry.barSize || 0;
        }, 0);
        sum += (len - 1) * realBarGap;
        if (sum >= bandSize) {
          sum -= (len - 1) * realBarGap;
          realBarGap = 0;
        }
        if (sum >= bandSize && fullBarSize > 0) {
          useFull = true;
          fullBarSize *= 0.9;
          sum = len * fullBarSize;
        }
        var offset = (bandSize - sum) / 2 >> 0;
        var prev = {
          offset: offset - realBarGap,
          size: 0
        };
        result = sizeList.reduce(function(res, entry) {
          var newPosition = {
            item: entry.item,
            position: {
              offset: prev.offset + prev.size + realBarGap,
              // @ts-expect-error the type check above does not check for type number explicitly
              size: useFull ? fullBarSize : entry.barSize
            }
          };
          var newRes = [].concat(_toConsumableArray(res), [newPosition]);
          prev = newRes[newRes.length - 1].position;
          if (entry.stackList && entry.stackList.length) {
            entry.stackList.forEach(function(item) {
              newRes.push({
                item,
                position: prev
              });
            });
          }
          return newRes;
        }, initialValue);
      } else {
        var _offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);
        if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {
          realBarGap = 0;
        }
        var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;
        if (originalSize > 1) {
          originalSize >>= 0;
        }
        var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;
        result = sizeList.reduce(function(res, entry, i) {
          var newRes = [].concat(_toConsumableArray(res), [{
            item: entry.item,
            position: {
              offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,
              size
            }
          }]);
          if (entry.stackList && entry.stackList.length) {
            entry.stackList.forEach(function(item) {
              newRes.push({
                item,
                position: newRes[newRes.length - 1].position
              });
            });
          }
          return newRes;
        }, initialValue);
      }
      return result;
    };
    var appendOffsetOfLegend = exports.appendOffsetOfLegend = function appendOffsetOfLegend2(offset, _unused, props, legendBox) {
      var children = props.children, width = props.width, margin = props.margin;
      var legendWidth = width - (margin.left || 0) - (margin.right || 0);
      var legendProps = (0, _getLegendProps.getLegendProps)({
        children,
        legendWidth
      });
      if (legendProps) {
        var _ref4 = legendBox || {}, boxWidth = _ref4.width, boxHeight = _ref4.height;
        var align = legendProps.align, verticalAlign = legendProps.verticalAlign, layout = legendProps.layout;
        if ((layout === "vertical" || layout === "horizontal" && verticalAlign === "middle") && align !== "center" && (0, _DataUtils.isNumber)(offset[align])) {
          return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));
        }
        if ((layout === "horizontal" || layout === "vertical" && align === "center") && verticalAlign !== "middle" && (0, _DataUtils.isNumber)(offset[verticalAlign])) {
          return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));
        }
      }
      return offset;
    };
    var isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis2(layout, axisType, direction) {
      if ((0, _isNil["default"])(axisType)) {
        return true;
      }
      if (layout === "horizontal") {
        return axisType === "yAxis";
      }
      if (layout === "vertical") {
        return axisType === "xAxis";
      }
      if (direction === "x") {
        return axisType === "xAxis";
      }
      if (direction === "y") {
        return axisType === "yAxis";
      }
      return true;
    };
    var getDomainOfErrorBars = exports.getDomainOfErrorBars = function getDomainOfErrorBars2(data, item, dataKey, layout, axisType) {
      var children = item.props.children;
      var errorBars = (0, _ReactUtils.findAllByType)(children, _ErrorBar.ErrorBar).filter(function(errorBarChild) {
        return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);
      });
      if (errorBars && errorBars.length) {
        var keys = errorBars.map(function(errorBarChild) {
          return errorBarChild.props.dataKey;
        });
        return data.reduce(function(result, entry) {
          var entryValue = getValueByDataKey(entry, dataKey);
          if ((0, _isNil["default"])(entryValue)) return result;
          var mainValue = Array.isArray(entryValue) ? [(0, _min["default"])(entryValue), (0, _max["default"])(entryValue)] : [entryValue, entryValue];
          var errorDomain = keys.reduce(function(prevErrorArr, k) {
            var errorValue = getValueByDataKey(entry, k, 0);
            var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);
            var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);
            return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];
          }, [Infinity, -Infinity]);
          return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];
        }, [Infinity, -Infinity]);
      }
      return null;
    };
    var parseErrorBarsOfAxis = exports.parseErrorBarsOfAxis = function parseErrorBarsOfAxis2(data, items, dataKey, axisType, layout) {
      var domains = items.map(function(item) {
        return getDomainOfErrorBars(data, item, dataKey, layout, axisType);
      }).filter(function(entry) {
        return !(0, _isNil["default"])(entry);
      });
      if (domains && domains.length) {
        return domains.reduce(function(result, entry) {
          return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
        }, [Infinity, -Infinity]);
      }
      return null;
    };
    var getDomainOfItemsWithSameAxis = exports.getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis2(data, items, type, layout, filterNil) {
      var domains = items.map(function(item) {
        var dataKey = item.props.dataKey;
        if (type === "number" && dataKey) {
          return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);
        }
        return getDomainOfDataByKey(data, dataKey, type, filterNil);
      });
      if (type === "number") {
        return domains.reduce(
          // @ts-expect-error if (type === number) means that the domain is numerical type
          // - but this link is missing in the type definition
          function(result, entry) {
            return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];
          },
          [Infinity, -Infinity]
        );
      }
      var tag = {};
      return domains.reduce(function(result, entry) {
        for (var i = 0, len = entry.length; i < len; i++) {
          if (!tag[entry[i]]) {
            tag[entry[i]] = true;
            result.push(entry[i]);
          }
        }
        return result;
      }, []);
    };
    var isCategoricalAxis = exports.isCategoricalAxis = function isCategoricalAxis2(layout, axisType) {
      return layout === "horizontal" && axisType === "xAxis" || layout === "vertical" && axisType === "yAxis" || layout === "centric" && axisType === "angleAxis" || layout === "radial" && axisType === "radiusAxis";
    };
    var getCoordinatesOfGrid = exports.getCoordinatesOfGrid = function getCoordinatesOfGrid2(ticks, minValue, maxValue, syncWithTicks) {
      if (syncWithTicks) {
        return ticks.map(function(entry) {
          return entry.coordinate;
        });
      }
      var hasMin, hasMax;
      var values = ticks.map(function(entry) {
        if (entry.coordinate === minValue) {
          hasMin = true;
        }
        if (entry.coordinate === maxValue) {
          hasMax = true;
        }
        return entry.coordinate;
      });
      if (!hasMin) {
        values.push(minValue);
      }
      if (!hasMax) {
        values.push(maxValue);
      }
      return values;
    };
    var getTicksOfAxis = exports.getTicksOfAxis = function getTicksOfAxis2(axis, isGrid, isAll) {
      if (!axis) return null;
      var scale = axis.scale;
      var duplicateDomain = axis.duplicateDomain, type = axis.type, range = axis.range;
      var offsetForBand = axis.realScaleType === "scaleBand" ? scale.bandwidth() / 2 : 2;
      var offset = (isGrid || isAll) && type === "category" && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;
      offset = axis.axisType === "angleAxis" && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? (0, _DataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset;
      if (isGrid && (axis.ticks || axis.niceTicks)) {
        var result = (axis.ticks || axis.niceTicks).map(function(entry) {
          var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;
          return {
            // If the scaleContent is not a number, the coordinate will be NaN.
            // That could be the case for example with a PointScale and a string as domain.
            coordinate: scale(scaleContent) + offset,
            value: entry,
            offset
          };
        });
        return result.filter(function(row) {
          return !(0, _isNaN["default"])(row.coordinate);
        });
      }
      if (axis.isCategorical && axis.categoricalDomain) {
        return axis.categoricalDomain.map(function(entry, index) {
          return {
            coordinate: scale(entry) + offset,
            value: entry,
            index,
            offset
          };
        });
      }
      if (scale.ticks && !isAll) {
        return scale.ticks(axis.tickCount).map(function(entry) {
          return {
            coordinate: scale(entry) + offset,
            value: entry,
            offset
          };
        });
      }
      return scale.domain().map(function(entry, index) {
        return {
          coordinate: scale(entry) + offset,
          value: duplicateDomain ? duplicateDomain[entry] : entry,
          index,
          offset
        };
      });
    };
    var handlerWeakMap = /* @__PURE__ */ new WeakMap();
    var combineEventHandlers = exports.combineEventHandlers = function combineEventHandlers2(defaultHandler, childHandler) {
      if (typeof childHandler !== "function") {
        return defaultHandler;
      }
      if (!handlerWeakMap.has(defaultHandler)) {
        handlerWeakMap.set(defaultHandler, /* @__PURE__ */ new WeakMap());
      }
      var childWeakMap = handlerWeakMap.get(defaultHandler);
      if (childWeakMap.has(childHandler)) {
        return childWeakMap.get(childHandler);
      }
      var combineHandler = function combineHandler2() {
        defaultHandler.apply(void 0, arguments);
        childHandler.apply(void 0, arguments);
      };
      childWeakMap.set(childHandler, combineHandler);
      return combineHandler;
    };
    var parseScale = exports.parseScale = function parseScale2(axis, chartType, hasBar) {
      var scale = axis.scale, type = axis.type, layout = axis.layout, axisType = axis.axisType;
      if (scale === "auto") {
        if (layout === "radial" && axisType === "radiusAxis") {
          return {
            scale: d3Scales.scaleBand(),
            realScaleType: "band"
          };
        }
        if (layout === "radial" && axisType === "angleAxis") {
          return {
            scale: d3Scales.scaleLinear(),
            realScaleType: "linear"
          };
        }
        if (type === "category" && chartType && (chartType.indexOf("LineChart") >= 0 || chartType.indexOf("AreaChart") >= 0 || chartType.indexOf("ComposedChart") >= 0 && !hasBar)) {
          return {
            scale: d3Scales.scalePoint(),
            realScaleType: "point"
          };
        }
        if (type === "category") {
          return {
            scale: d3Scales.scaleBand(),
            realScaleType: "band"
          };
        }
        return {
          scale: d3Scales.scaleLinear(),
          realScaleType: "linear"
        };
      }
      if ((0, _isString["default"])(scale)) {
        var name = "scale".concat((0, _upperFirst["default"])(scale));
        return {
          scale: (d3Scales[name] || d3Scales.scalePoint)(),
          realScaleType: d3Scales[name] ? name : "point"
        };
      }
      return (0, _isFunction["default"])(scale) ? {
        scale
      } : {
        scale: d3Scales.scalePoint(),
        realScaleType: "point"
      };
    };
    var EPS = 1e-4;
    var checkDomainOfScale = exports.checkDomainOfScale = function checkDomainOfScale2(scale) {
      var domain = scale.domain();
      if (!domain || domain.length <= 2) {
        return;
      }
      var len = domain.length;
      var range = scale.range();
      var minValue = Math.min(range[0], range[1]) - EPS;
      var maxValue = Math.max(range[0], range[1]) + EPS;
      var first = scale(domain[0]);
      var last = scale(domain[len - 1]);
      if (first < minValue || first > maxValue || last < minValue || last > maxValue) {
        scale.domain([domain[0], domain[len - 1]]);
      }
    };
    var findPositionOfBar = exports.findPositionOfBar = function findPositionOfBar2(barPosition, child) {
      if (!barPosition) {
        return null;
      }
      for (var i = 0, len = barPosition.length; i < len; i++) {
        if (barPosition[i].item === child) {
          return barPosition[i].position;
        }
      }
      return null;
    };
    var truncateByDomain = exports.truncateByDomain = function truncateByDomain2(value, domain) {
      if (!domain || domain.length !== 2 || !(0, _DataUtils.isNumber)(domain[0]) || !(0, _DataUtils.isNumber)(domain[1])) {
        return value;
      }
      var minValue = Math.min(domain[0], domain[1]);
      var maxValue = Math.max(domain[0], domain[1]);
      var result = [value[0], value[1]];
      if (!(0, _DataUtils.isNumber)(value[0]) || value[0] < minValue) {
        result[0] = minValue;
      }
      if (!(0, _DataUtils.isNumber)(value[1]) || value[1] > maxValue) {
        result[1] = maxValue;
      }
      if (result[0] > maxValue) {
        result[0] = maxValue;
      }
      if (result[1] < minValue) {
        result[1] = minValue;
      }
      return result;
    };
    var offsetSign = exports.offsetSign = function offsetSign2(series) {
      var n = series.length;
      if (n <= 0) {
        return;
      }
      for (var j = 0, m = series[0].length; j < m; ++j) {
        var positive = 0;
        var negative = 0;
        for (var i = 0; i < n; ++i) {
          var value = (0, _isNaN["default"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];
          if (value >= 0) {
            series[i][j][0] = positive;
            series[i][j][1] = positive + value;
            positive = series[i][j][1];
          } else {
            series[i][j][0] = negative;
            series[i][j][1] = negative + value;
            negative = series[i][j][1];
          }
        }
      }
    };
    var offsetPositive = exports.offsetPositive = function offsetPositive2(series) {
      var n = series.length;
      if (n <= 0) {
        return;
      }
      for (var j = 0, m = series[0].length; j < m; ++j) {
        var positive = 0;
        for (var i = 0; i < n; ++i) {
          var value = (0, _isNaN["default"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];
          if (value >= 0) {
            series[i][j][0] = positive;
            series[i][j][1] = positive + value;
            positive = series[i][j][1];
          } else {
            series[i][j][0] = 0;
            series[i][j][1] = 0;
          }
        }
      }
    };
    var STACK_OFFSET_MAP = {
      sign: offsetSign,
      // @ts-expect-error definitelytyped types are incorrect
      expand: _d3Shape.stackOffsetExpand,
      // @ts-expect-error definitelytyped types are incorrect
      none: _d3Shape.stackOffsetNone,
      // @ts-expect-error definitelytyped types are incorrect
      silhouette: _d3Shape.stackOffsetSilhouette,
      // @ts-expect-error definitelytyped types are incorrect
      wiggle: _d3Shape.stackOffsetWiggle,
      positive: offsetPositive
    };
    var getStackedData = exports.getStackedData = function getStackedData2(data, stackItems, offsetType) {
      var dataKeys = stackItems.map(function(item) {
        return item.props.dataKey;
      });
      var offsetAccessor = STACK_OFFSET_MAP[offsetType];
      var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function(d, key) {
        return +getValueByDataKey(d, key, 0);
      }).order(_d3Shape.stackOrderNone).offset(offsetAccessor);
      return stack(data);
    };
    var getStackGroupsByAxisId = exports.getStackGroupsByAxisId = function getStackGroupsByAxisId2(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {
      if (!data) {
        return null;
      }
      var items = reverseStackOrder ? _items.reverse() : _items;
      var parentStackGroupsInitialValue = {};
      var stackGroups = items.reduce(function(result, item) {
        var _item$type2;
        var defaultedProps = (_item$type2 = item.type) !== null && _item$type2 !== void 0 && _item$type2.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
        var stackId = defaultedProps.stackId, hide = defaultedProps.hide;
        if (hide) {
          return result;
        }
        var axisId = defaultedProps[numericAxisId];
        var parentGroup = result[axisId] || {
          hasStack: false,
          stackGroups: {}
        };
        if ((0, _DataUtils.isNumOrStr)(stackId)) {
          var childGroup = parentGroup.stackGroups[stackId] || {
            numericAxisId,
            cateAxisId,
            items: []
          };
          childGroup.items.push(item);
          parentGroup.hasStack = true;
          parentGroup.stackGroups[stackId] = childGroup;
        } else {
          parentGroup.stackGroups[(0, _DataUtils.uniqueId)("_stackId_")] = {
            numericAxisId,
            cateAxisId,
            items: [item]
          };
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));
      }, parentStackGroupsInitialValue);
      var axisStackGroupsInitialValue = {};
      return Object.keys(stackGroups).reduce(function(result, axisId) {
        var group = stackGroups[axisId];
        if (group.hasStack) {
          var stackGroupsInitialValue = {};
          group.stackGroups = Object.keys(group.stackGroups).reduce(function(res, stackId) {
            var g = group.stackGroups[stackId];
            return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {
              numericAxisId,
              cateAxisId,
              items: g.items,
              stackedData: getStackedData(data, g.items, offsetType)
            }));
          }, stackGroupsInitialValue);
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));
      }, axisStackGroupsInitialValue);
    };
    var getTicksOfScale = exports.getTicksOfScale = function getTicksOfScale2(scale, opts) {
      var realScaleType = opts.realScaleType, type = opts.type, tickCount = opts.tickCount, originalDomain = opts.originalDomain, allowDecimals = opts.allowDecimals;
      var scaleType = realScaleType || opts.scale;
      if (scaleType !== "auto" && scaleType !== "linear") {
        return null;
      }
      if (tickCount && type === "number" && originalDomain && (originalDomain[0] === "auto" || originalDomain[1] === "auto")) {
        var domain = scale.domain();
        if (!domain.length) {
          return null;
        }
        var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);
        scale.domain([(0, _min["default"])(tickValues), (0, _max["default"])(tickValues)]);
        return {
          niceTicks: tickValues
        };
      }
      if (tickCount && type === "number") {
        var _domain = scale.domain();
        var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);
        return {
          niceTicks: _tickValues
        };
      }
      return null;
    };
    function getCateCoordinateOfLine(_ref5) {
      var axis = _ref5.axis, ticks = _ref5.ticks, bandSize = _ref5.bandSize, entry = _ref5.entry, index = _ref5.index, dataKey = _ref5.dataKey;
      if (axis.type === "category") {
        if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNil["default"])(entry[axis.dataKey])) {
          var matchedTick = (0, _DataUtils.findEntryInArray)(ticks, "value", entry[axis.dataKey]);
          if (matchedTick) {
            return matchedTick.coordinate + bandSize / 2;
          }
        }
        return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;
      }
      var value = getValueByDataKey(entry, !(0, _isNil["default"])(dataKey) ? dataKey : axis.dataKey);
      return !(0, _isNil["default"])(value) ? axis.scale(value) : null;
    }
    var getCateCoordinateOfBar = exports.getCateCoordinateOfBar = function getCateCoordinateOfBar2(_ref6) {
      var axis = _ref6.axis, ticks = _ref6.ticks, offset = _ref6.offset, bandSize = _ref6.bandSize, entry = _ref6.entry, index = _ref6.index;
      if (axis.type === "category") {
        return ticks[index] ? ticks[index].coordinate + offset : null;
      }
      var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);
      return !(0, _isNil["default"])(value) ? axis.scale(value) - bandSize / 2 + offset : null;
    };
    var getBaseValueOfBar = exports.getBaseValueOfBar = function getBaseValueOfBar2(_ref7) {
      var numericAxis = _ref7.numericAxis;
      var domain = numericAxis.scale.domain();
      if (numericAxis.type === "number") {
        var minValue = Math.min(domain[0], domain[1]);
        var maxValue = Math.max(domain[0], domain[1]);
        if (minValue <= 0 && maxValue >= 0) {
          return 0;
        }
        if (maxValue < 0) {
          return maxValue;
        }
        return minValue;
      }
      return domain[0];
    };
    var getStackedDataOfItem = exports.getStackedDataOfItem = function getStackedDataOfItem2(item, stackGroups) {
      var _item$type3;
      var defaultedProps = (_item$type3 = item.type) !== null && _item$type3 !== void 0 && _item$type3.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
      var stackId = defaultedProps.stackId;
      if ((0, _DataUtils.isNumOrStr)(stackId)) {
        var group = stackGroups[stackId];
        if (group) {
          var itemIndex = group.items.indexOf(item);
          return itemIndex >= 0 ? group.stackedData[itemIndex] : null;
        }
      }
      return null;
    };
    var getDomainOfSingle = function getDomainOfSingle2(data) {
      return data.reduce(function(result, entry) {
        return [(0, _min["default"])(entry.concat([result[0]]).filter(_DataUtils.isNumber)), (0, _max["default"])(entry.concat([result[1]]).filter(_DataUtils.isNumber))];
      }, [Infinity, -Infinity]);
    };
    var getDomainOfStackGroups = exports.getDomainOfStackGroups = function getDomainOfStackGroups2(stackGroups, startIndex, endIndex) {
      return Object.keys(stackGroups).reduce(function(result, stackId) {
        var group = stackGroups[stackId];
        var stackedData = group.stackedData;
        var domain = stackedData.reduce(function(res, entry) {
          var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));
          return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];
        }, [Infinity, -Infinity]);
        return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];
      }, [Infinity, -Infinity]).map(function(result) {
        return result === Infinity || result === -Infinity ? 0 : result;
      });
    };
    var MIN_VALUE_REG = exports.MIN_VALUE_REG = /^dataMin[\s]*-[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
    var MAX_VALUE_REG = exports.MAX_VALUE_REG = /^dataMax[\s]*\+[\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;
    var parseSpecifiedDomain = exports.parseSpecifiedDomain = function parseSpecifiedDomain2(specifiedDomain, dataDomain, allowDataOverflow) {
      if ((0, _isFunction["default"])(specifiedDomain)) {
        return specifiedDomain(dataDomain, allowDataOverflow);
      }
      if (!Array.isArray(specifiedDomain)) {
        return dataDomain;
      }
      var domain = [];
      if ((0, _DataUtils.isNumber)(specifiedDomain[0])) {
        domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);
      } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {
        var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];
        domain[0] = dataDomain[0] - value;
      } else if ((0, _isFunction["default"])(specifiedDomain[0])) {
        domain[0] = specifiedDomain[0](dataDomain[0]);
      } else {
        domain[0] = dataDomain[0];
      }
      if ((0, _DataUtils.isNumber)(specifiedDomain[1])) {
        domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);
      } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {
        var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];
        domain[1] = dataDomain[1] + _value;
      } else if ((0, _isFunction["default"])(specifiedDomain[1])) {
        domain[1] = specifiedDomain[1](dataDomain[1]);
      } else {
        domain[1] = dataDomain[1];
      }
      return domain;
    };
    var getBandSizeOfAxis = exports.getBandSizeOfAxis = function getBandSizeOfAxis2(axis, ticks, isBar) {
      if (axis && axis.scale && axis.scale.bandwidth) {
        var bandWidth = axis.scale.bandwidth();
        if (!isBar || bandWidth > 0) {
          return bandWidth;
        }
      }
      if (axis && ticks && ticks.length >= 2) {
        var orderedTicks = (0, _sortBy["default"])(ticks, function(o) {
          return o.coordinate;
        });
        var bandSize = Infinity;
        for (var i = 1, len = orderedTicks.length; i < len; i++) {
          var cur = orderedTicks[i];
          var prev = orderedTicks[i - 1];
          bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);
        }
        return bandSize === Infinity ? 0 : bandSize;
      }
      return isBar ? void 0 : 0;
    };
    var parseDomainOfCategoryAxis = exports.parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis2(specifiedDomain, calculatedDomain, axisChild) {
      if (!specifiedDomain || !specifiedDomain.length) {
        return calculatedDomain;
      }
      if ((0, _isEqual["default"])(specifiedDomain, (0, _get["default"])(axisChild, "type.defaultProps.domain"))) {
        return calculatedDomain;
      }
      return specifiedDomain;
    };
    var getTooltipItem = exports.getTooltipItem = function getTooltipItem2(graphicalItem, payload) {
      var defaultedProps = graphicalItem.type.defaultProps ? _objectSpread(_objectSpread({}, graphicalItem.type.defaultProps), graphicalItem.props) : graphicalItem.props;
      var dataKey = defaultedProps.dataKey, name = defaultedProps.name, unit = defaultedProps.unit, formatter = defaultedProps.formatter, tooltipType = defaultedProps.tooltipType, chartType = defaultedProps.chartType, hide = defaultedProps.hide;
      return _objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(graphicalItem, false)), {}, {
        dataKey,
        unit,
        formatter,
        name: name || dataKey,
        color: getMainColorOfGraphicItem(graphicalItem),
        value: getValueByDataKey(payload, dataKey),
        type: tooltipType,
        payload,
        chartType,
        hide
      });
    };
  }
});

// node_modules/recharts/lib/util/PolarUtils.js
var require_PolarUtils = __commonJS({
  "node_modules/recharts/lib/util/PolarUtils.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.radianToDegree = exports.polarToCartesian = exports.inRangeOfSector = exports.getTickClassName = exports.getMaxRadius = exports.getAngleOfPoint = exports.formatAxisMap = exports.formatAngleOfSector = exports.distanceBetweenPoints = exports.degreeToRadian = exports.RADIAN = void 0;
    var _isNil = _interopRequireDefault(require_isNil());
    var _react = require_react();
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var RADIAN = exports.RADIAN = Math.PI / 180;
    var degreeToRadian = exports.degreeToRadian = function degreeToRadian2(angle) {
      return angle * Math.PI / 180;
    };
    var radianToDegree = exports.radianToDegree = function radianToDegree2(angleInRadian) {
      return angleInRadian * 180 / Math.PI;
    };
    var polarToCartesian = exports.polarToCartesian = function polarToCartesian2(cx, cy, radius, angle) {
      return {
        x: cx + Math.cos(-RADIAN * angle) * radius,
        y: cy + Math.sin(-RADIAN * angle) * radius
      };
    };
    var getMaxRadius = exports.getMaxRadius = function getMaxRadius2(width, height) {
      var offset = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      };
      return Math.min(Math.abs(width - (offset.left || 0) - (offset.right || 0)), Math.abs(height - (offset.top || 0) - (offset.bottom || 0))) / 2;
    };
    var formatAxisMap = exports.formatAxisMap = function formatAxisMap2(props, axisMap, offset, axisType, chartName) {
      var width = props.width, height = props.height;
      var startAngle = props.startAngle, endAngle = props.endAngle;
      var cx = (0, _DataUtils.getPercentValue)(props.cx, width, width / 2);
      var cy = (0, _DataUtils.getPercentValue)(props.cy, height, height / 2);
      var maxRadius = getMaxRadius(width, height, offset);
      var innerRadius = (0, _DataUtils.getPercentValue)(props.innerRadius, maxRadius, 0);
      var outerRadius = (0, _DataUtils.getPercentValue)(props.outerRadius, maxRadius, maxRadius * 0.8);
      var ids = Object.keys(axisMap);
      return ids.reduce(function(result, id) {
        var axis = axisMap[id];
        var domain = axis.domain, reversed = axis.reversed;
        var range;
        if ((0, _isNil["default"])(axis.range)) {
          if (axisType === "angleAxis") {
            range = [startAngle, endAngle];
          } else if (axisType === "radiusAxis") {
            range = [innerRadius, outerRadius];
          }
          if (reversed) {
            range = [range[1], range[0]];
          }
        } else {
          range = axis.range;
          var _range = range;
          var _range2 = _slicedToArray(_range, 2);
          startAngle = _range2[0];
          endAngle = _range2[1];
        }
        var _parseScale = (0, _ChartUtils.parseScale)(axis, chartName), realScaleType = _parseScale.realScaleType, scale = _parseScale.scale;
        scale.domain(domain).range(range);
        (0, _ChartUtils.checkDomainOfScale)(scale);
        var ticks = (0, _ChartUtils.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {
          realScaleType
        }));
        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {
          range,
          radius: outerRadius,
          realScaleType,
          scale,
          cx,
          cy,
          innerRadius,
          outerRadius,
          startAngle,
          endAngle
        });
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));
      }, {});
    };
    var distanceBetweenPoints = exports.distanceBetweenPoints = function distanceBetweenPoints2(point, anotherPoint) {
      var x1 = point.x, y1 = point.y;
      var x2 = anotherPoint.x, y2 = anotherPoint.y;
      return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
    };
    var getAngleOfPoint = exports.getAngleOfPoint = function getAngleOfPoint2(_ref, _ref2) {
      var x = _ref.x, y = _ref.y;
      var cx = _ref2.cx, cy = _ref2.cy;
      var radius = distanceBetweenPoints({
        x,
        y
      }, {
        x: cx,
        y: cy
      });
      if (radius <= 0) {
        return {
          radius
        };
      }
      var cos = (x - cx) / radius;
      var angleInRadian = Math.acos(cos);
      if (y > cy) {
        angleInRadian = 2 * Math.PI - angleInRadian;
      }
      return {
        radius,
        angle: radianToDegree(angleInRadian),
        angleInRadian
      };
    };
    var formatAngleOfSector = exports.formatAngleOfSector = function formatAngleOfSector2(_ref3) {
      var startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
      var startCnt = Math.floor(startAngle / 360);
      var endCnt = Math.floor(endAngle / 360);
      var min = Math.min(startCnt, endCnt);
      return {
        startAngle: startAngle - min * 360,
        endAngle: endAngle - min * 360
      };
    };
    var reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor2(angle, _ref4) {
      var startAngle = _ref4.startAngle, endAngle = _ref4.endAngle;
      var startCnt = Math.floor(startAngle / 360);
      var endCnt = Math.floor(endAngle / 360);
      var min = Math.min(startCnt, endCnt);
      return angle + min * 360;
    };
    var inRangeOfSector = exports.inRangeOfSector = function inRangeOfSector2(_ref5, sector) {
      var x = _ref5.x, y = _ref5.y;
      var _getAngleOfPoint = getAngleOfPoint({
        x,
        y
      }, sector), radius = _getAngleOfPoint.radius, angle = _getAngleOfPoint.angle;
      var innerRadius = sector.innerRadius, outerRadius = sector.outerRadius;
      if (radius < innerRadius || radius > outerRadius) {
        return false;
      }
      if (radius === 0) {
        return true;
      }
      var _formatAngleOfSector = formatAngleOfSector(sector), startAngle = _formatAngleOfSector.startAngle, endAngle = _formatAngleOfSector.endAngle;
      var formatAngle = angle;
      var inRange;
      if (startAngle <= endAngle) {
        while (formatAngle > endAngle) {
          formatAngle -= 360;
        }
        while (formatAngle < startAngle) {
          formatAngle += 360;
        }
        inRange = formatAngle >= startAngle && formatAngle <= endAngle;
      } else {
        while (formatAngle > startAngle) {
          formatAngle -= 360;
        }
        while (formatAngle < endAngle) {
          formatAngle += 360;
        }
        inRange = formatAngle >= endAngle && formatAngle <= startAngle;
      }
      if (inRange) {
        return _objectSpread(_objectSpread({}, sector), {}, {
          radius,
          angle: reverseFormatAngleOfSetor(formatAngle, sector)
        });
      }
      return null;
    };
    var getTickClassName = exports.getTickClassName = function getTickClassName2(tick) {
      return !(0, _react.isValidElement)(tick) && !(0, _isFunction["default"])(tick) && typeof tick !== "boolean" ? tick.className : "";
    };
  }
});

// node_modules/recharts/lib/component/Label.js
var require_Label = __commonJS({
  "node_modules/recharts/lib/component/Label.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Label = Label;
    var _react = _interopRequireWildcard(require_react());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isObject = _interopRequireDefault(require_isObject());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Text = require_Text();
    var _ReactUtils = require_ReactUtils();
    var _DataUtils = require_DataUtils();
    var _PolarUtils = require_PolarUtils();
    var _excluded = ["offset"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    var getLabel = function getLabel2(props) {
      var value = props.value, formatter = props.formatter;
      var label = (0, _isNil["default"])(props.children) ? value : props.children;
      if ((0, _isFunction["default"])(formatter)) {
        return formatter(label);
      }
      return label;
    };
    var getDeltaAngle = function getDeltaAngle2(startAngle, endAngle) {
      var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);
      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
      return sign * deltaAngle;
    };
    var renderRadialLabel = function renderRadialLabel2(labelProps, label, attrs) {
      var position = labelProps.position, viewBox = labelProps.viewBox, offset = labelProps.offset, className = labelProps.className;
      var _ref = viewBox, cx = _ref.cx, cy = _ref.cy, innerRadius = _ref.innerRadius, outerRadius = _ref.outerRadius, startAngle = _ref.startAngle, endAngle = _ref.endAngle, clockWise = _ref.clockWise;
      var radius = (innerRadius + outerRadius) / 2;
      var deltaAngle = getDeltaAngle(startAngle, endAngle);
      var sign = deltaAngle >= 0 ? 1 : -1;
      var labelAngle, direction;
      if (position === "insideStart") {
        labelAngle = startAngle + sign * offset;
        direction = clockWise;
      } else if (position === "insideEnd") {
        labelAngle = endAngle - sign * offset;
        direction = !clockWise;
      } else if (position === "end") {
        labelAngle = endAngle + sign * offset;
        direction = clockWise;
      }
      direction = deltaAngle <= 0 ? direction : !direction;
      var startPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, labelAngle);
      var endPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, labelAngle + (direction ? 1 : -1) * 359);
      var path = "M".concat(startPoint.x, ",").concat(startPoint.y, "\n    A").concat(radius, ",").concat(radius, ",0,1,").concat(direction ? 0 : 1, ",\n    ").concat(endPoint.x, ",").concat(endPoint.y);
      var id = (0, _isNil["default"])(labelProps.id) ? (0, _DataUtils.uniqueId)("recharts-radial-line-") : labelProps.id;
      return _react["default"].createElement("text", _extends({}, attrs, {
        dominantBaseline: "central",
        className: (0, _clsx["default"])("recharts-radial-bar-label", className)
      }), _react["default"].createElement("defs", null, _react["default"].createElement("path", {
        id,
        d: path
      })), _react["default"].createElement("textPath", {
        xlinkHref: "#".concat(id)
      }, label));
    };
    var getAttrsOfPolarLabel = function getAttrsOfPolarLabel2(props) {
      var viewBox = props.viewBox, offset = props.offset, position = props.position;
      var _ref2 = viewBox, cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
      var midAngle = (startAngle + endAngle) / 2;
      if (position === "outside") {
        var _polarToCartesian = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius + offset, midAngle), _x = _polarToCartesian.x, _y = _polarToCartesian.y;
        return {
          x: _x,
          y: _y,
          textAnchor: _x >= cx ? "start" : "end",
          verticalAnchor: "middle"
        };
      }
      if (position === "center") {
        return {
          x: cx,
          y: cy,
          textAnchor: "middle",
          verticalAnchor: "middle"
        };
      }
      if (position === "centerTop") {
        return {
          x: cx,
          y: cy,
          textAnchor: "middle",
          verticalAnchor: "start"
        };
      }
      if (position === "centerBottom") {
        return {
          x: cx,
          y: cy,
          textAnchor: "middle",
          verticalAnchor: "end"
        };
      }
      var r = (innerRadius + outerRadius) / 2;
      var _polarToCartesian2 = (0, _PolarUtils.polarToCartesian)(cx, cy, r, midAngle), x = _polarToCartesian2.x, y = _polarToCartesian2.y;
      return {
        x,
        y,
        textAnchor: "middle",
        verticalAnchor: "middle"
      };
    };
    var getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel2(props) {
      var viewBox = props.viewBox, parentViewBox = props.parentViewBox, offset = props.offset, position = props.position;
      var _ref3 = viewBox, x = _ref3.x, y = _ref3.y, width = _ref3.width, height = _ref3.height;
      var verticalSign = height >= 0 ? 1 : -1;
      var verticalOffset = verticalSign * offset;
      var verticalEnd = verticalSign > 0 ? "end" : "start";
      var verticalStart = verticalSign > 0 ? "start" : "end";
      var horizontalSign = width >= 0 ? 1 : -1;
      var horizontalOffset = horizontalSign * offset;
      var horizontalEnd = horizontalSign > 0 ? "end" : "start";
      var horizontalStart = horizontalSign > 0 ? "start" : "end";
      if (position === "top") {
        var attrs = {
          x: x + width / 2,
          y: y - verticalSign * offset,
          textAnchor: "middle",
          verticalAnchor: verticalEnd
        };
        return _objectSpread(_objectSpread({}, attrs), parentViewBox ? {
          height: Math.max(y - parentViewBox.y, 0),
          width
        } : {});
      }
      if (position === "bottom") {
        var _attrs = {
          x: x + width / 2,
          y: y + height + verticalOffset,
          textAnchor: "middle",
          verticalAnchor: verticalStart
        };
        return _objectSpread(_objectSpread({}, _attrs), parentViewBox ? {
          height: Math.max(parentViewBox.y + parentViewBox.height - (y + height), 0),
          width
        } : {});
      }
      if (position === "left") {
        var _attrs2 = {
          x: x - horizontalOffset,
          y: y + height / 2,
          textAnchor: horizontalEnd,
          verticalAnchor: "middle"
        };
        return _objectSpread(_objectSpread({}, _attrs2), parentViewBox ? {
          width: Math.max(_attrs2.x - parentViewBox.x, 0),
          height
        } : {});
      }
      if (position === "right") {
        var _attrs3 = {
          x: x + width + horizontalOffset,
          y: y + height / 2,
          textAnchor: horizontalStart,
          verticalAnchor: "middle"
        };
        return _objectSpread(_objectSpread({}, _attrs3), parentViewBox ? {
          width: Math.max(parentViewBox.x + parentViewBox.width - _attrs3.x, 0),
          height
        } : {});
      }
      var sizeAttrs = parentViewBox ? {
        width,
        height
      } : {};
      if (position === "insideLeft") {
        return _objectSpread({
          x: x + horizontalOffset,
          y: y + height / 2,
          textAnchor: horizontalStart,
          verticalAnchor: "middle"
        }, sizeAttrs);
      }
      if (position === "insideRight") {
        return _objectSpread({
          x: x + width - horizontalOffset,
          y: y + height / 2,
          textAnchor: horizontalEnd,
          verticalAnchor: "middle"
        }, sizeAttrs);
      }
      if (position === "insideTop") {
        return _objectSpread({
          x: x + width / 2,
          y: y + verticalOffset,
          textAnchor: "middle",
          verticalAnchor: verticalStart
        }, sizeAttrs);
      }
      if (position === "insideBottom") {
        return _objectSpread({
          x: x + width / 2,
          y: y + height - verticalOffset,
          textAnchor: "middle",
          verticalAnchor: verticalEnd
        }, sizeAttrs);
      }
      if (position === "insideTopLeft") {
        return _objectSpread({
          x: x + horizontalOffset,
          y: y + verticalOffset,
          textAnchor: horizontalStart,
          verticalAnchor: verticalStart
        }, sizeAttrs);
      }
      if (position === "insideTopRight") {
        return _objectSpread({
          x: x + width - horizontalOffset,
          y: y + verticalOffset,
          textAnchor: horizontalEnd,
          verticalAnchor: verticalStart
        }, sizeAttrs);
      }
      if (position === "insideBottomLeft") {
        return _objectSpread({
          x: x + horizontalOffset,
          y: y + height - verticalOffset,
          textAnchor: horizontalStart,
          verticalAnchor: verticalEnd
        }, sizeAttrs);
      }
      if (position === "insideBottomRight") {
        return _objectSpread({
          x: x + width - horizontalOffset,
          y: y + height - verticalOffset,
          textAnchor: horizontalEnd,
          verticalAnchor: verticalEnd
        }, sizeAttrs);
      }
      if ((0, _isObject["default"])(position) && ((0, _DataUtils.isNumber)(position.x) || (0, _DataUtils.isPercent)(position.x)) && ((0, _DataUtils.isNumber)(position.y) || (0, _DataUtils.isPercent)(position.y))) {
        return _objectSpread({
          x: x + (0, _DataUtils.getPercentValue)(position.x, width),
          y: y + (0, _DataUtils.getPercentValue)(position.y, height),
          textAnchor: "end",
          verticalAnchor: "end"
        }, sizeAttrs);
      }
      return _objectSpread({
        x: x + width / 2,
        y: y + height / 2,
        textAnchor: "middle",
        verticalAnchor: "middle"
      }, sizeAttrs);
    };
    var isPolar = function isPolar2(viewBox) {
      return "cx" in viewBox && (0, _DataUtils.isNumber)(viewBox.cx);
    };
    function Label(_ref4) {
      var _ref4$offset = _ref4.offset, offset = _ref4$offset === void 0 ? 5 : _ref4$offset, restProps = _objectWithoutProperties(_ref4, _excluded);
      var props = _objectSpread({
        offset
      }, restProps);
      var viewBox = props.viewBox, position = props.position, value = props.value, children = props.children, content = props.content, _props$className = props.className, className = _props$className === void 0 ? "" : _props$className, textBreakAll = props.textBreakAll;
      if (!viewBox || (0, _isNil["default"])(value) && (0, _isNil["default"])(children) && !(0, _react.isValidElement)(content) && !(0, _isFunction["default"])(content)) {
        return null;
      }
      if ((0, _react.isValidElement)(content)) {
        return (0, _react.cloneElement)(content, props);
      }
      var label;
      if ((0, _isFunction["default"])(content)) {
        label = (0, _react.createElement)(content, props);
        if ((0, _react.isValidElement)(label)) {
          return label;
        }
      } else {
        label = getLabel(props);
      }
      var isPolarLabel = isPolar(viewBox);
      var attrs = (0, _ReactUtils.filterProps)(props, true);
      if (isPolarLabel && (position === "insideStart" || position === "insideEnd" || position === "end")) {
        return renderRadialLabel(props, label, attrs);
      }
      var positionAttrs = isPolarLabel ? getAttrsOfPolarLabel(props) : getAttrsOfCartesianLabel(props);
      return _react["default"].createElement(_Text.Text, _extends({
        className: (0, _clsx["default"])("recharts-label", className)
      }, attrs, positionAttrs, {
        breakAll: textBreakAll
      }), label);
    }
    Label.displayName = "Label";
    var parseViewBox = function parseViewBox2(props) {
      var cx = props.cx, cy = props.cy, angle = props.angle, startAngle = props.startAngle, endAngle = props.endAngle, r = props.r, radius = props.radius, innerRadius = props.innerRadius, outerRadius = props.outerRadius, x = props.x, y = props.y, top = props.top, left = props.left, width = props.width, height = props.height, clockWise = props.clockWise, labelViewBox = props.labelViewBox;
      if (labelViewBox) {
        return labelViewBox;
      }
      if ((0, _DataUtils.isNumber)(width) && (0, _DataUtils.isNumber)(height)) {
        if ((0, _DataUtils.isNumber)(x) && (0, _DataUtils.isNumber)(y)) {
          return {
            x,
            y,
            width,
            height
          };
        }
        if ((0, _DataUtils.isNumber)(top) && (0, _DataUtils.isNumber)(left)) {
          return {
            x: top,
            y: left,
            width,
            height
          };
        }
      }
      if ((0, _DataUtils.isNumber)(x) && (0, _DataUtils.isNumber)(y)) {
        return {
          x,
          y,
          width: 0,
          height: 0
        };
      }
      if ((0, _DataUtils.isNumber)(cx) && (0, _DataUtils.isNumber)(cy)) {
        return {
          cx,
          cy,
          startAngle: startAngle || angle || 0,
          endAngle: endAngle || angle || 0,
          innerRadius: innerRadius || 0,
          outerRadius: outerRadius || radius || r || 0,
          clockWise
        };
      }
      if (props.viewBox) {
        return props.viewBox;
      }
      return {};
    };
    var parseLabel = function parseLabel2(label, viewBox) {
      if (!label) {
        return null;
      }
      if (label === true) {
        return _react["default"].createElement(Label, {
          key: "label-implicit",
          viewBox
        });
      }
      if ((0, _DataUtils.isNumOrStr)(label)) {
        return _react["default"].createElement(Label, {
          key: "label-implicit",
          viewBox,
          value: label
        });
      }
      if ((0, _react.isValidElement)(label)) {
        if (label.type === Label) {
          return (0, _react.cloneElement)(label, {
            key: "label-implicit",
            viewBox
          });
        }
        return _react["default"].createElement(Label, {
          key: "label-implicit",
          content: label,
          viewBox
        });
      }
      if ((0, _isFunction["default"])(label)) {
        return _react["default"].createElement(Label, {
          key: "label-implicit",
          content: label,
          viewBox
        });
      }
      if ((0, _isObject["default"])(label)) {
        return _react["default"].createElement(Label, _extends({
          viewBox
        }, label, {
          key: "label-implicit"
        }));
      }
      return null;
    };
    var renderCallByParent = function renderCallByParent2(parentProps, viewBox) {
      var checkPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {
        return null;
      }
      var children = parentProps.children;
      var parentViewBox = parseViewBox(parentProps);
      var explicitChildren = (0, _ReactUtils.findAllByType)(children, Label).map(function(child, index) {
        return (0, _react.cloneElement)(child, {
          viewBox: viewBox || parentViewBox,
          // eslint-disable-next-line react/no-array-index-key
          key: "label-".concat(index)
        });
      });
      if (!checkPropsLabel) {
        return explicitChildren;
      }
      var implicitLabel = parseLabel(parentProps.label, viewBox || parentViewBox);
      return [implicitLabel].concat(_toConsumableArray(explicitChildren));
    };
    Label.parseViewBox = parseViewBox;
    Label.renderCallByParent = renderCallByParent;
  }
});

// node_modules/lodash/last.js
var require_last = __commonJS({
  "node_modules/lodash/last.js"(exports, module) {
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : void 0;
    }
    module.exports = last;
  }
});

// node_modules/recharts/lib/component/LabelList.js
var require_LabelList = __commonJS({
  "node_modules/recharts/lib/component/LabelList.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LabelList = LabelList;
    var _react = _interopRequireWildcard(require_react());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isObject = _interopRequireDefault(require_isObject());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _last = _interopRequireDefault(require_last());
    var _Label = require_Label();
    var _Layer = require_Layer();
    var _ReactUtils = require_ReactUtils();
    var _ChartUtils = require_ChartUtils();
    var _excluded = ["valueAccessor"];
    var _excluded2 = ["data", "dataKey", "clockWise", "id", "textBreakAll"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    var defaultAccessor = function defaultAccessor2(entry) {
      return Array.isArray(entry.value) ? (0, _last["default"])(entry.value) : entry.value;
    };
    function LabelList(_ref) {
      var _ref$valueAccessor = _ref.valueAccessor, valueAccessor = _ref$valueAccessor === void 0 ? defaultAccessor : _ref$valueAccessor, restProps = _objectWithoutProperties(_ref, _excluded);
      var data = restProps.data, dataKey = restProps.dataKey, clockWise = restProps.clockWise, id = restProps.id, textBreakAll = restProps.textBreakAll, others = _objectWithoutProperties(restProps, _excluded2);
      if (!data || !data.length) {
        return null;
      }
      return _react["default"].createElement(_Layer.Layer, {
        className: "recharts-label-list"
      }, data.map(function(entry, index) {
        var value = (0, _isNil["default"])(dataKey) ? valueAccessor(entry, index) : (0, _ChartUtils.getValueByDataKey)(entry && entry.payload, dataKey);
        var idProps = (0, _isNil["default"])(id) ? {} : {
          id: "".concat(id, "-").concat(index)
        };
        return _react["default"].createElement(_Label.Label, _extends({}, (0, _ReactUtils.filterProps)(entry, true), others, idProps, {
          parentViewBox: entry.parentViewBox,
          value,
          textBreakAll,
          viewBox: _Label.Label.parseViewBox((0, _isNil["default"])(clockWise) ? entry : _objectSpread(_objectSpread({}, entry), {}, {
            clockWise
          })),
          key: "label-".concat(index),
          index
        }));
      }));
    }
    LabelList.displayName = "LabelList";
    function parseLabelList(label, data) {
      if (!label) {
        return null;
      }
      if (label === true) {
        return _react["default"].createElement(LabelList, {
          key: "labelList-implicit",
          data
        });
      }
      if (_react["default"].isValidElement(label) || (0, _isFunction["default"])(label)) {
        return _react["default"].createElement(LabelList, {
          key: "labelList-implicit",
          data,
          content: label
        });
      }
      if ((0, _isObject["default"])(label)) {
        return _react["default"].createElement(LabelList, _extends({
          data
        }, label, {
          key: "labelList-implicit"
        }));
      }
      return null;
    }
    function renderCallByParent(parentProps, data) {
      var checkPropsLabel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {
        return null;
      }
      var children = parentProps.children;
      var explicitChildren = (0, _ReactUtils.findAllByType)(children, LabelList).map(function(child, index) {
        return (0, _react.cloneElement)(child, {
          data,
          // eslint-disable-next-line react/no-array-index-key
          key: "labelList-".concat(index)
        });
      });
      if (!checkPropsLabel) {
        return explicitChildren;
      }
      var implicitLabelList = parseLabelList(parentProps.label, data);
      return [implicitLabelList].concat(_toConsumableArray(explicitChildren));
    }
    LabelList.renderCallByParent = renderCallByParent;
  }
});

// node_modules/recharts/lib/component/Customized.js
var require_Customized = __commonJS({
  "node_modules/recharts/lib/component/Customized.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Customized = Customized;
    var _react = _interopRequireWildcard(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _Layer = require_Layer();
    var _LogUtils = require_LogUtils();
    var _excluded = ["component"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function Customized(_ref) {
      var component = _ref.component, props = _objectWithoutProperties(_ref, _excluded);
      var child;
      if ((0, _react.isValidElement)(component)) {
        child = (0, _react.cloneElement)(component, props);
      } else if ((0, _isFunction["default"])(component)) {
        child = (0, _react.createElement)(component, props);
      } else {
        (0, _LogUtils.warn)(false, "Customized's props `component` must be React.element or Function, but got %s.", _typeof(component));
      }
      return _react["default"].createElement(_Layer.Layer, {
        className: "recharts-customized-wrapper"
      }, child);
    }
    Customized.displayName = "Customized";
  }
});

// node_modules/recharts/lib/shape/Sector.js
var require_Sector = __commonJS({
  "node_modules/recharts/lib/shape/Sector.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Sector = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _PolarUtils = require_PolarUtils();
    var _DataUtils = require_DataUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getDeltaAngle = function getDeltaAngle2(startAngle, endAngle) {
      var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);
      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);
      return sign * deltaAngle;
    };
    var getTangentCircle = function getTangentCircle2(_ref) {
      var cx = _ref.cx, cy = _ref.cy, radius = _ref.radius, angle = _ref.angle, sign = _ref.sign, isExternal = _ref.isExternal, cornerRadius = _ref.cornerRadius, cornerIsExternal = _ref.cornerIsExternal;
      var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;
      var theta = Math.asin(cornerRadius / centerRadius) / _PolarUtils.RADIAN;
      var centerAngle = cornerIsExternal ? angle : angle + sign * theta;
      var center = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius, centerAngle);
      var circleTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, centerAngle);
      var lineTangencyAngle = cornerIsExternal ? angle - sign * theta : angle;
      var lineTangency = (0, _PolarUtils.polarToCartesian)(cx, cy, centerRadius * Math.cos(theta * _PolarUtils.RADIAN), lineTangencyAngle);
      return {
        center,
        circleTangency,
        lineTangency,
        theta
      };
    };
    var getSectorPath = function getSectorPath2(_ref2) {
      var cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;
      var angle = getDeltaAngle(startAngle, endAngle);
      var tempEndAngle = startAngle + angle;
      var outerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, startAngle);
      var outerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, tempEndAngle);
      var path = "M ".concat(outerStartPoint.x, ",").concat(outerStartPoint.y, "\n    A ").concat(outerRadius, ",").concat(outerRadius, ",0,\n    ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle > tempEndAngle), ",\n    ").concat(outerEndPoint.x, ",").concat(outerEndPoint.y, "\n  ");
      if (innerRadius > 0) {
        var innerStartPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, startAngle);
        var innerEndPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, tempEndAngle);
        path += "L ".concat(innerEndPoint.x, ",").concat(innerEndPoint.y, "\n            A ").concat(innerRadius, ",").concat(innerRadius, ",0,\n            ").concat(+(Math.abs(angle) > 180), ",").concat(+(startAngle <= tempEndAngle), ",\n            ").concat(innerStartPoint.x, ",").concat(innerStartPoint.y, " Z");
      } else {
        path += "L ".concat(cx, ",").concat(cy, " Z");
      }
      return path;
    };
    var getSectorWithCorner = function getSectorWithCorner2(_ref3) {
      var cx = _ref3.cx, cy = _ref3.cy, innerRadius = _ref3.innerRadius, outerRadius = _ref3.outerRadius, cornerRadius = _ref3.cornerRadius, forceCornerRadius = _ref3.forceCornerRadius, cornerIsExternal = _ref3.cornerIsExternal, startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;
      var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);
      var _getTangentCircle = getTangentCircle({
        cx,
        cy,
        radius: outerRadius,
        angle: startAngle,
        sign,
        cornerRadius,
        cornerIsExternal
      }), soct = _getTangentCircle.circleTangency, solt = _getTangentCircle.lineTangency, sot = _getTangentCircle.theta;
      var _getTangentCircle2 = getTangentCircle({
        cx,
        cy,
        radius: outerRadius,
        angle: endAngle,
        sign: -sign,
        cornerRadius,
        cornerIsExternal
      }), eoct = _getTangentCircle2.circleTangency, eolt = _getTangentCircle2.lineTangency, eot = _getTangentCircle2.theta;
      var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;
      if (outerArcAngle < 0) {
        if (forceCornerRadius) {
          return "M ".concat(solt.x, ",").concat(solt.y, "\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(cornerRadius * 2, ",0\n        a").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,1,").concat(-cornerRadius * 2, ",0\n      ");
        }
        return getSectorPath({
          cx,
          cy,
          innerRadius,
          outerRadius,
          startAngle,
          endAngle
        });
      }
      var path = "M ".concat(solt.x, ",").concat(solt.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(soct.x, ",").concat(soct.y, "\n    A").concat(outerRadius, ",").concat(outerRadius, ",0,").concat(+(outerArcAngle > 180), ",").concat(+(sign < 0), ",").concat(eoct.x, ",").concat(eoct.y, "\n    A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eolt.x, ",").concat(eolt.y, "\n  ");
      if (innerRadius > 0) {
        var _getTangentCircle3 = getTangentCircle({
          cx,
          cy,
          radius: innerRadius,
          angle: startAngle,
          sign,
          isExternal: true,
          cornerRadius,
          cornerIsExternal
        }), sict = _getTangentCircle3.circleTangency, silt = _getTangentCircle3.lineTangency, sit = _getTangentCircle3.theta;
        var _getTangentCircle4 = getTangentCircle({
          cx,
          cy,
          radius: innerRadius,
          angle: endAngle,
          sign: -sign,
          isExternal: true,
          cornerRadius,
          cornerIsExternal
        }), eict = _getTangentCircle4.circleTangency, eilt = _getTangentCircle4.lineTangency, eit = _getTangentCircle4.theta;
        var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;
        if (innerArcAngle < 0 && cornerRadius === 0) {
          return "".concat(path, "L").concat(cx, ",").concat(cy, "Z");
        }
        path += "L".concat(eilt.x, ",").concat(eilt.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(eict.x, ",").concat(eict.y, "\n      A").concat(innerRadius, ",").concat(innerRadius, ",0,").concat(+(innerArcAngle > 180), ",").concat(+(sign > 0), ",").concat(sict.x, ",").concat(sict.y, "\n      A").concat(cornerRadius, ",").concat(cornerRadius, ",0,0,").concat(+(sign < 0), ",").concat(silt.x, ",").concat(silt.y, "Z");
      } else {
        path += "L".concat(cx, ",").concat(cy, "Z");
      }
      return path;
    };
    var defaultProps = {
      cx: 0,
      cy: 0,
      innerRadius: 0,
      outerRadius: 0,
      startAngle: 0,
      endAngle: 0,
      cornerRadius: 0,
      forceCornerRadius: false,
      cornerIsExternal: false
    };
    var Sector = exports.Sector = function Sector2(sectorProps) {
      var props = _objectSpread(_objectSpread({}, defaultProps), sectorProps);
      var cx = props.cx, cy = props.cy, innerRadius = props.innerRadius, outerRadius = props.outerRadius, cornerRadius = props.cornerRadius, forceCornerRadius = props.forceCornerRadius, cornerIsExternal = props.cornerIsExternal, startAngle = props.startAngle, endAngle = props.endAngle, className = props.className;
      if (outerRadius < innerRadius || startAngle === endAngle) {
        return null;
      }
      var layerClass = (0, _clsx["default"])("recharts-sector", className);
      var deltaRadius = outerRadius - innerRadius;
      var cr = (0, _DataUtils.getPercentValue)(cornerRadius, deltaRadius, 0, true);
      var path;
      if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {
        path = getSectorWithCorner({
          cx,
          cy,
          innerRadius,
          outerRadius,
          cornerRadius: Math.min(cr, deltaRadius / 2),
          forceCornerRadius,
          cornerIsExternal,
          startAngle,
          endAngle
        });
      } else {
        path = getSectorPath({
          cx,
          cy,
          innerRadius,
          outerRadius,
          startAngle,
          endAngle
        });
      }
      return _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(props, true), {
        className: layerClass,
        d: path,
        role: "img"
      }));
    };
  }
});

// node_modules/recharts/lib/shape/Curve.js
var require_Curve = __commonJS({
  "node_modules/recharts/lib/shape/Curve.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getPath = exports.Curve = void 0;
    var _react = _interopRequireDefault(require_react());
    var _d3Shape = require_d3_shape();
    var _upperFirst = _interopRequireDefault(require_upperFirst());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _types = require_types();
    var _ReactUtils = require_ReactUtils();
    var _DataUtils = require_DataUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var CURVE_FACTORIES = {
      curveBasisClosed: _d3Shape.curveBasisClosed,
      curveBasisOpen: _d3Shape.curveBasisOpen,
      curveBasis: _d3Shape.curveBasis,
      curveBumpX: _d3Shape.curveBumpX,
      curveBumpY: _d3Shape.curveBumpY,
      curveLinearClosed: _d3Shape.curveLinearClosed,
      curveLinear: _d3Shape.curveLinear,
      curveMonotoneX: _d3Shape.curveMonotoneX,
      curveMonotoneY: _d3Shape.curveMonotoneY,
      curveNatural: _d3Shape.curveNatural,
      curveStep: _d3Shape.curveStep,
      curveStepAfter: _d3Shape.curveStepAfter,
      curveStepBefore: _d3Shape.curveStepBefore
    };
    var defined = function defined2(p) {
      return p.x === +p.x && p.y === +p.y;
    };
    var getX = function getX2(p) {
      return p.x;
    };
    var getY = function getY2(p) {
      return p.y;
    };
    var getCurveFactory = function getCurveFactory2(type, layout) {
      if ((0, _isFunction["default"])(type)) {
        return type;
      }
      var name = "curve".concat((0, _upperFirst["default"])(type));
      if ((name === "curveMonotone" || name === "curveBump") && layout) {
        return CURVE_FACTORIES["".concat(name).concat(layout === "vertical" ? "Y" : "X")];
      }
      return CURVE_FACTORIES[name] || _d3Shape.curveLinear;
    };
    var getPath = exports.getPath = function getPath2(_ref) {
      var _ref$type = _ref.type, type = _ref$type === void 0 ? "linear" : _ref$type, _ref$points = _ref.points, points = _ref$points === void 0 ? [] : _ref$points, baseLine = _ref.baseLine, layout = _ref.layout, _ref$connectNulls = _ref.connectNulls, connectNulls = _ref$connectNulls === void 0 ? false : _ref$connectNulls;
      var curveFactory = getCurveFactory(type, layout);
      var formatPoints = connectNulls ? points.filter(function(entry) {
        return defined(entry);
      }) : points;
      var lineFunction;
      if (Array.isArray(baseLine)) {
        var formatBaseLine = connectNulls ? baseLine.filter(function(base) {
          return defined(base);
        }) : baseLine;
        var areaPoints = formatPoints.map(function(entry, index) {
          return _objectSpread(_objectSpread({}, entry), {}, {
            base: formatBaseLine[index]
          });
        });
        if (layout === "vertical") {
          lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(function(d) {
            return d.base.x;
          });
        } else {
          lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(function(d) {
            return d.base.y;
          });
        }
        lineFunction.defined(defined).curve(curveFactory);
        return lineFunction(areaPoints);
      }
      if (layout === "vertical" && (0, _DataUtils.isNumber)(baseLine)) {
        lineFunction = (0, _d3Shape.area)().y(getY).x1(getX).x0(baseLine);
      } else if ((0, _DataUtils.isNumber)(baseLine)) {
        lineFunction = (0, _d3Shape.area)().x(getX).y1(getY).y0(baseLine);
      } else {
        lineFunction = (0, _d3Shape.line)().x(getX).y(getY);
      }
      lineFunction.defined(defined).curve(curveFactory);
      return lineFunction(formatPoints);
    };
    var Curve = exports.Curve = function Curve2(props) {
      var className = props.className, points = props.points, path = props.path, pathRef = props.pathRef;
      if ((!points || !points.length) && !path) {
        return null;
      }
      var realPath = points && points.length ? getPath(props) : path;
      return _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(props, false), (0, _types.adaptEventHandlers)(props), {
        className: (0, _clsx["default"])("recharts-curve", className),
        d: realPath,
        ref: pathRef
      }));
    };
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is2();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is2();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/fast-equals/dist/cjs/index.cjs
var require_cjs = __commonJS({
  "node_modules/fast-equals/dist/cjs/index.cjs"(exports) {
    "use strict";
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    function combineComparators(comparatorA, comparatorB) {
      return function isEqual(a, b, state) {
        return comparatorA(a, b, state) && comparatorB(a, b, state);
      };
    }
    function createIsCircular(areItemsEqual) {
      return function isCircular(a, b, state) {
        if (!a || !b || typeof a !== "object" || typeof b !== "object") {
          return areItemsEqual(a, b, state);
        }
        var cache = state.cache;
        var cachedA = cache.get(a);
        var cachedB = cache.get(b);
        if (cachedA && cachedB) {
          return cachedA === b && cachedB === a;
        }
        cache.set(a, b);
        cache.set(b, a);
        var result = areItemsEqual(a, b, state);
        cache.delete(a);
        cache.delete(b);
        return result;
      };
    }
    function getStrictProperties(object) {
      return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));
    }
    var hasOwn = Object.hasOwn || function(object, property) {
      return hasOwnProperty.call(object, property);
    };
    function sameValueZeroEqual(a, b) {
      return a || b ? a === b : a === b || a !== a && b !== b;
    }
    var OWNER = "_owner";
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var keys = Object.keys;
    function areArraysEqual(a, b, state) {
      var index = a.length;
      if (b.length !== index) {
        return false;
      }
      while (index-- > 0) {
        if (!state.equals(a[index], b[index], index, index, a, b, state)) {
          return false;
        }
      }
      return true;
    }
    function areDatesEqual(a, b) {
      return sameValueZeroEqual(a.getTime(), b.getTime());
    }
    function areMapsEqual(a, b, state) {
      if (a.size !== b.size) {
        return false;
      }
      var matchedIndices = {};
      var aIterable = a.entries();
      var index = 0;
      var aResult;
      var bResult;
      while (aResult = aIterable.next()) {
        if (aResult.done) {
          break;
        }
        var bIterable = b.entries();
        var hasMatch = false;
        var matchIndex = 0;
        while (bResult = bIterable.next()) {
          if (bResult.done) {
            break;
          }
          var _a = aResult.value, aKey = _a[0], aValue = _a[1];
          var _b = bResult.value, bKey = _b[0], bValue = _b[1];
          if (!hasMatch && !matchedIndices[matchIndex] && (hasMatch = state.equals(aKey, bKey, index, matchIndex, a, b, state) && state.equals(aValue, bValue, aKey, bKey, a, b, state))) {
            matchedIndices[matchIndex] = true;
          }
          matchIndex++;
        }
        if (!hasMatch) {
          return false;
        }
        index++;
      }
      return true;
    }
    function areObjectsEqual(a, b, state) {
      var properties = keys(a);
      var index = properties.length;
      if (keys(b).length !== index) {
        return false;
      }
      var property;
      while (index-- > 0) {
        property = properties[index];
        if (property === OWNER && (a.$$typeof || b.$$typeof) && a.$$typeof !== b.$$typeof) {
          return false;
        }
        if (!hasOwn(b, property) || !state.equals(a[property], b[property], property, property, a, b, state)) {
          return false;
        }
      }
      return true;
    }
    function areObjectsEqualStrict(a, b, state) {
      var properties = getStrictProperties(a);
      var index = properties.length;
      if (getStrictProperties(b).length !== index) {
        return false;
      }
      var property;
      var descriptorA;
      var descriptorB;
      while (index-- > 0) {
        property = properties[index];
        if (property === OWNER && (a.$$typeof || b.$$typeof) && a.$$typeof !== b.$$typeof) {
          return false;
        }
        if (!hasOwn(b, property)) {
          return false;
        }
        if (!state.equals(a[property], b[property], property, property, a, b, state)) {
          return false;
        }
        descriptorA = getOwnPropertyDescriptor(a, property);
        descriptorB = getOwnPropertyDescriptor(b, property);
        if ((descriptorA || descriptorB) && (!descriptorA || !descriptorB || descriptorA.configurable !== descriptorB.configurable || descriptorA.enumerable !== descriptorB.enumerable || descriptorA.writable !== descriptorB.writable)) {
          return false;
        }
      }
      return true;
    }
    function arePrimitiveWrappersEqual(a, b) {
      return sameValueZeroEqual(a.valueOf(), b.valueOf());
    }
    function areRegExpsEqual(a, b) {
      return a.source === b.source && a.flags === b.flags;
    }
    function areSetsEqual(a, b, state) {
      if (a.size !== b.size) {
        return false;
      }
      var matchedIndices = {};
      var aIterable = a.values();
      var aResult;
      var bResult;
      while (aResult = aIterable.next()) {
        if (aResult.done) {
          break;
        }
        var bIterable = b.values();
        var hasMatch = false;
        var matchIndex = 0;
        while (bResult = bIterable.next()) {
          if (bResult.done) {
            break;
          }
          if (!hasMatch && !matchedIndices[matchIndex] && (hasMatch = state.equals(aResult.value, bResult.value, aResult.value, bResult.value, a, b, state))) {
            matchedIndices[matchIndex] = true;
          }
          matchIndex++;
        }
        if (!hasMatch) {
          return false;
        }
      }
      return true;
    }
    function areTypedArraysEqual(a, b) {
      var index = a.length;
      if (b.length !== index) {
        return false;
      }
      while (index-- > 0) {
        if (a[index] !== b[index]) {
          return false;
        }
      }
      return true;
    }
    var ARGUMENTS_TAG = "[object Arguments]";
    var BOOLEAN_TAG = "[object Boolean]";
    var DATE_TAG = "[object Date]";
    var MAP_TAG = "[object Map]";
    var NUMBER_TAG = "[object Number]";
    var OBJECT_TAG = "[object Object]";
    var REG_EXP_TAG = "[object RegExp]";
    var SET_TAG = "[object Set]";
    var STRING_TAG = "[object String]";
    var isArray = Array.isArray;
    var isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView ? ArrayBuffer.isView : null;
    var assign = Object.assign;
    var getTag = Object.prototype.toString.call.bind(Object.prototype.toString);
    function createEqualityComparator(_a) {
      var areArraysEqual2 = _a.areArraysEqual, areDatesEqual2 = _a.areDatesEqual, areMapsEqual2 = _a.areMapsEqual, areObjectsEqual2 = _a.areObjectsEqual, arePrimitiveWrappersEqual2 = _a.arePrimitiveWrappersEqual, areRegExpsEqual2 = _a.areRegExpsEqual, areSetsEqual2 = _a.areSetsEqual, areTypedArraysEqual2 = _a.areTypedArraysEqual;
      return function comparator(a, b, state) {
        if (a === b) {
          return true;
        }
        if (a == null || b == null || typeof a !== "object" || typeof b !== "object") {
          return a !== a && b !== b;
        }
        var constructor = a.constructor;
        if (constructor !== b.constructor) {
          return false;
        }
        if (constructor === Object) {
          return areObjectsEqual2(a, b, state);
        }
        if (isArray(a)) {
          return areArraysEqual2(a, b, state);
        }
        if (isTypedArray != null && isTypedArray(a)) {
          return areTypedArraysEqual2(a, b, state);
        }
        if (constructor === Date) {
          return areDatesEqual2(a, b, state);
        }
        if (constructor === RegExp) {
          return areRegExpsEqual2(a, b, state);
        }
        if (constructor === Map) {
          return areMapsEqual2(a, b, state);
        }
        if (constructor === Set) {
          return areSetsEqual2(a, b, state);
        }
        var tag = getTag(a);
        if (tag === DATE_TAG) {
          return areDatesEqual2(a, b, state);
        }
        if (tag === REG_EXP_TAG) {
          return areRegExpsEqual2(a, b, state);
        }
        if (tag === MAP_TAG) {
          return areMapsEqual2(a, b, state);
        }
        if (tag === SET_TAG) {
          return areSetsEqual2(a, b, state);
        }
        if (tag === OBJECT_TAG) {
          return typeof a.then !== "function" && typeof b.then !== "function" && areObjectsEqual2(a, b, state);
        }
        if (tag === ARGUMENTS_TAG) {
          return areObjectsEqual2(a, b, state);
        }
        if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {
          return arePrimitiveWrappersEqual2(a, b, state);
        }
        return false;
      };
    }
    function createEqualityComparatorConfig(_a) {
      var circular = _a.circular, createCustomConfig = _a.createCustomConfig, strict = _a.strict;
      var config2 = {
        areArraysEqual: strict ? areObjectsEqualStrict : areArraysEqual,
        areDatesEqual,
        areMapsEqual: strict ? combineComparators(areMapsEqual, areObjectsEqualStrict) : areMapsEqual,
        areObjectsEqual: strict ? areObjectsEqualStrict : areObjectsEqual,
        arePrimitiveWrappersEqual,
        areRegExpsEqual,
        areSetsEqual: strict ? combineComparators(areSetsEqual, areObjectsEqualStrict) : areSetsEqual,
        areTypedArraysEqual: strict ? areObjectsEqualStrict : areTypedArraysEqual
      };
      if (createCustomConfig) {
        config2 = assign({}, config2, createCustomConfig(config2));
      }
      if (circular) {
        var areArraysEqual$1 = createIsCircular(config2.areArraysEqual);
        var areMapsEqual$1 = createIsCircular(config2.areMapsEqual);
        var areObjectsEqual$1 = createIsCircular(config2.areObjectsEqual);
        var areSetsEqual$1 = createIsCircular(config2.areSetsEqual);
        config2 = assign({}, config2, {
          areArraysEqual: areArraysEqual$1,
          areMapsEqual: areMapsEqual$1,
          areObjectsEqual: areObjectsEqual$1,
          areSetsEqual: areSetsEqual$1
        });
      }
      return config2;
    }
    function createInternalEqualityComparator(compare) {
      return function(a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, state) {
        return compare(a, b, state);
      };
    }
    function createIsEqual(_a) {
      var circular = _a.circular, comparator = _a.comparator, createState = _a.createState, equals = _a.equals, strict = _a.strict;
      if (createState) {
        return function isEqual(a, b) {
          var _a2 = createState(), _b = _a2.cache, cache = _b === void 0 ? circular ? /* @__PURE__ */ new WeakMap() : void 0 : _b, meta = _a2.meta;
          return comparator(a, b, {
            cache,
            equals,
            meta,
            strict
          });
        };
      }
      if (circular) {
        return function isEqual(a, b) {
          return comparator(a, b, {
            cache: /* @__PURE__ */ new WeakMap(),
            equals,
            meta: void 0,
            strict
          });
        };
      }
      var state = {
        cache: void 0,
        equals,
        meta: void 0,
        strict
      };
      return function isEqual(a, b) {
        return comparator(a, b, state);
      };
    }
    var deepEqual = createCustomEqual();
    var strictDeepEqual = createCustomEqual({ strict: true });
    var circularDeepEqual = createCustomEqual({ circular: true });
    var strictCircularDeepEqual = createCustomEqual({
      circular: true,
      strict: true
    });
    var shallowEqual = createCustomEqual({
      createInternalComparator: function() {
        return sameValueZeroEqual;
      }
    });
    var strictShallowEqual = createCustomEqual({
      strict: true,
      createInternalComparator: function() {
        return sameValueZeroEqual;
      }
    });
    var circularShallowEqual = createCustomEqual({
      circular: true,
      createInternalComparator: function() {
        return sameValueZeroEqual;
      }
    });
    var strictCircularShallowEqual = createCustomEqual({
      circular: true,
      createInternalComparator: function() {
        return sameValueZeroEqual;
      },
      strict: true
    });
    function createCustomEqual(options) {
      if (options === void 0) {
        options = {};
      }
      var _a = options.circular, circular = _a === void 0 ? false : _a, createCustomInternalComparator = options.createInternalComparator, createState = options.createState, _b = options.strict, strict = _b === void 0 ? false : _b;
      var config2 = createEqualityComparatorConfig(options);
      var comparator = createEqualityComparator(config2);
      var equals = createCustomInternalComparator ? createCustomInternalComparator(comparator) : createInternalEqualityComparator(comparator);
      return createIsEqual({ circular, comparator, createState, equals, strict });
    }
    exports.circularDeepEqual = circularDeepEqual;
    exports.circularShallowEqual = circularShallowEqual;
    exports.createCustomEqual = createCustomEqual;
    exports.deepEqual = deepEqual;
    exports.sameValueZeroEqual = sameValueZeroEqual;
    exports.shallowEqual = shallowEqual;
    exports.strictCircularDeepEqual = strictCircularDeepEqual;
    exports.strictCircularShallowEqual = strictCircularShallowEqual;
    exports.strictDeepEqual = strictDeepEqual;
    exports.strictShallowEqual = strictShallowEqual;
  }
});

// node_modules/react-smooth/lib/setRafTimeout.js
var require_setRafTimeout = __commonJS({
  "node_modules/react-smooth/lib/setRafTimeout.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = setRafTimeout;
    function safeRequestAnimationFrame(callback) {
      if (typeof requestAnimationFrame !== "undefined") requestAnimationFrame(callback);
    }
    function setRafTimeout(callback) {
      var timeout = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var currTime = -1;
      var shouldUpdate = function shouldUpdate2(now) {
        if (currTime < 0) {
          currTime = now;
        }
        if (now - currTime > timeout) {
          callback(now);
          currTime = -1;
        } else {
          safeRequestAnimationFrame(shouldUpdate2);
        }
      };
      requestAnimationFrame(shouldUpdate);
    }
  }
});

// node_modules/react-smooth/lib/AnimateManager.js
var require_AnimateManager = __commonJS({
  "node_modules/react-smooth/lib/AnimateManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = createAnimateManager;
    var _setRafTimeout = _interopRequireDefault(require_setRafTimeout());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _toArray(arr) {
      return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function createAnimateManager() {
      var currStyle = {};
      var handleChange = function handleChange2() {
        return null;
      };
      var shouldStop = false;
      var setStyle = function setStyle2(_style) {
        if (shouldStop) {
          return;
        }
        if (Array.isArray(_style)) {
          if (!_style.length) {
            return;
          }
          var styles = _style;
          var _styles = _toArray(styles), curr = _styles[0], restStyles = _styles.slice(1);
          if (typeof curr === "number") {
            (0, _setRafTimeout.default)(setStyle2.bind(null, restStyles), curr);
            return;
          }
          setStyle2(curr);
          (0, _setRafTimeout.default)(setStyle2.bind(null, restStyles));
          return;
        }
        if (_typeof(_style) === "object") {
          currStyle = _style;
          handleChange(currStyle);
        }
        if (typeof _style === "function") {
          _style();
        }
      };
      return {
        stop: function stop() {
          shouldStop = true;
        },
        start: function start(style) {
          shouldStop = false;
          setStyle(style);
        },
        subscribe: function subscribe(_handleChange) {
          handleChange = _handleChange;
          return function() {
            handleChange = function handleChange2() {
              return null;
            };
          };
        }
      };
    }
  }
});

// node_modules/react-smooth/lib/util.js
var require_util = __commonJS({
  "node_modules/react-smooth/lib/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.warn = exports.mapObject = exports.log = exports.identity = exports.getTransitionVal = exports.getIntersectionKeys = exports.getDashCase = exports.debugf = exports.debug = void 0;
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    var getIntersectionKeys = exports.getIntersectionKeys = function getIntersectionKeys2(preObj, nextObj) {
      return [Object.keys(preObj), Object.keys(nextObj)].reduce(function(a, b) {
        return a.filter(function(c) {
          return b.includes(c);
        });
      });
    };
    var identity = exports.identity = function identity2(param) {
      return param;
    };
    var getDashCase = exports.getDashCase = function getDashCase2(name) {
      return name.replace(/([A-Z])/g, function(v) {
        return "-".concat(v.toLowerCase());
      });
    };
    var log = exports.log = function log2() {
      var _console;
      (_console = console).log.apply(_console, arguments);
    };
    var debug = exports.debug = function debug2(name) {
      return function(item) {
        log(name, item);
        return item;
      };
    };
    var debugf = exports.debugf = function debugf2(tag, f) {
      return function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var res = f.apply(void 0, args);
        var name = tag || f.name || "anonymous function";
        var argNames = "(".concat(args.map(JSON.stringify).join(", "), ")");
        log("".concat(name, ": ").concat(argNames, " => ").concat(JSON.stringify(res)));
        return res;
      };
    };
    var mapObject = exports.mapObject = function mapObject2(fn, obj) {
      return Object.keys(obj).reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, fn(key, obj[key])));
      }, {});
    };
    var getTransitionVal = exports.getTransitionVal = function getTransitionVal2(props, duration, easing) {
      return props.map(function(prop) {
        return "".concat(getDashCase(prop), " ").concat(duration, "ms ").concat(easing);
      }).join(",");
    };
    var isDev = true;
    var warn = exports.warn = function warn2(condition, format, a, b, c, d, e, f) {
      if (isDev && typeof console !== "undefined" && console.warn) {
        if (format === void 0) {
          console.warn("LogUtils requires an error message argument");
        }
        if (!condition) {
          if (format === void 0) {
            console.warn("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
          } else {
            var args = [a, b, c, d, e, f];
            var argIndex = 0;
            console.warn(format.replace(/%s/g, function() {
              return args[argIndex++];
            }));
          }
        }
      }
    };
  }
});

// node_modules/react-smooth/lib/easing.js
var require_easing = __commonJS({
  "node_modules/react-smooth/lib/easing.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.configSpring = exports.configEasing = exports.configBezier = void 0;
    var _util = require_util();
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var ACCURACY = 1e-4;
    var cubicBezierFactor = function cubicBezierFactor2(c1, c2) {
      return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];
    };
    var multyTime = function multyTime2(params, t) {
      return params.map(function(param, i) {
        return param * Math.pow(t, i);
      }).reduce(function(pre, curr) {
        return pre + curr;
      });
    };
    var cubicBezier = function cubicBezier2(c1, c2) {
      return function(t) {
        var params = cubicBezierFactor(c1, c2);
        return multyTime(params, t);
      };
    };
    var derivativeCubicBezier = function derivativeCubicBezier2(c1, c2) {
      return function(t) {
        var params = cubicBezierFactor(c1, c2);
        var newParams = [].concat(_toConsumableArray(params.map(function(param, i) {
          return param * i;
        }).slice(1)), [0]);
        return multyTime(newParams, t);
      };
    };
    var configBezier = exports.configBezier = function configBezier2() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var x1 = args[0], y1 = args[1], x2 = args[2], y2 = args[3];
      if (args.length === 1) {
        switch (args[0]) {
          case "linear":
            x1 = 0;
            y1 = 0;
            x2 = 1;
            y2 = 1;
            break;
          case "ease":
            x1 = 0.25;
            y1 = 0.1;
            x2 = 0.25;
            y2 = 1;
            break;
          case "ease-in":
            x1 = 0.42;
            y1 = 0;
            x2 = 1;
            y2 = 1;
            break;
          case "ease-out":
            x1 = 0.42;
            y1 = 0;
            x2 = 0.58;
            y2 = 1;
            break;
          case "ease-in-out":
            x1 = 0;
            y1 = 0;
            x2 = 0.58;
            y2 = 1;
            break;
          default: {
            var easing = args[0].split("(");
            if (easing[0] === "cubic-bezier" && easing[1].split(")")[0].split(",").length === 4) {
              var _easing$1$split$0$spl = easing[1].split(")")[0].split(",").map(function(x) {
                return parseFloat(x);
              });
              var _easing$1$split$0$spl2 = _slicedToArray(_easing$1$split$0$spl, 4);
              x1 = _easing$1$split$0$spl2[0];
              y1 = _easing$1$split$0$spl2[1];
              x2 = _easing$1$split$0$spl2[2];
              y2 = _easing$1$split$0$spl2[3];
            } else {
              (0, _util.warn)(false, "[configBezier]: arguments should be one of oneOf 'linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', instead received %s", args);
            }
          }
        }
      }
      (0, _util.warn)([x1, x2, y1, y2].every(function(num) {
        return typeof num === "number" && num >= 0 && num <= 1;
      }), "[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s", args);
      var curveX = cubicBezier(x1, x2);
      var curveY = cubicBezier(y1, y2);
      var derCurveX = derivativeCubicBezier(x1, x2);
      var rangeValue = function rangeValue2(value) {
        if (value > 1) {
          return 1;
        }
        if (value < 0) {
          return 0;
        }
        return value;
      };
      var bezier = function bezier2(_t) {
        var t = _t > 1 ? 1 : _t;
        var x = t;
        for (var i = 0; i < 8; ++i) {
          var evalT = curveX(x) - t;
          var derVal = derCurveX(x);
          if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {
            return curveY(x);
          }
          x = rangeValue(x - evalT / derVal);
        }
        return curveY(x);
      };
      bezier.isStepper = false;
      return bezier;
    };
    var configSpring = exports.configSpring = function configSpring2() {
      var config2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _config$stiff = config2.stiff, stiff = _config$stiff === void 0 ? 100 : _config$stiff, _config$damping = config2.damping, damping = _config$damping === void 0 ? 8 : _config$damping, _config$dt = config2.dt, dt = _config$dt === void 0 ? 17 : _config$dt;
      var stepper = function stepper2(currX, destX, currV) {
        var FSpring = -(currX - destX) * stiff;
        var FDamping = currV * damping;
        var newV = currV + (FSpring - FDamping) * dt / 1e3;
        var newX = currV * dt / 1e3 + currX;
        if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {
          return [destX, 0];
        }
        return [newX, newV];
      };
      stepper.isStepper = true;
      stepper.dt = dt;
      return stepper;
    };
    var configEasing = exports.configEasing = function configEasing2() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      var easing = args[0];
      if (typeof easing === "string") {
        switch (easing) {
          case "ease":
          case "ease-in-out":
          case "ease-out":
          case "ease-in":
          case "linear":
            return configBezier(easing);
          case "spring":
            return configSpring();
          default:
            if (easing.split("(")[0] === "cubic-bezier") {
              return configBezier(easing);
            }
            (0, _util.warn)(false, "[configEasing]: first argument should be one of 'ease', 'ease-in', 'ease-out', 'ease-in-out','cubic-bezier(x1,y1,x2,y2)', 'linear' and 'spring', instead  received %s", args);
        }
      }
      if (typeof easing === "function") {
        return easing;
      }
      (0, _util.warn)(false, "[configEasing]: first argument type should be function or string, instead received %s", args);
      return null;
    };
  }
});

// node_modules/react-smooth/lib/configUpdate.js
var require_configUpdate = __commonJS({
  "node_modules/react-smooth/lib/configUpdate.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _util = require_util();
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var alpha = function alpha2(begin, end, k) {
      return begin + (end - begin) * k;
    };
    var needContinue = function needContinue2(_ref) {
      var from = _ref.from, to = _ref.to;
      return from !== to;
    };
    var calStepperVals = function calStepperVals2(easing, preVals, steps) {
      var nextStepVals = (0, _util.mapObject)(function(key, val) {
        if (needContinue(val)) {
          var _easing = easing(val.from, val.to, val.velocity), _easing2 = _slicedToArray(_easing, 2), newX = _easing2[0], newV = _easing2[1];
          return _objectSpread(_objectSpread({}, val), {}, {
            from: newX,
            velocity: newV
          });
        }
        return val;
      }, preVals);
      if (steps < 1) {
        return (0, _util.mapObject)(function(key, val) {
          if (needContinue(val)) {
            return _objectSpread(_objectSpread({}, val), {}, {
              velocity: alpha(val.velocity, nextStepVals[key].velocity, steps),
              from: alpha(val.from, nextStepVals[key].from, steps)
            });
          }
          return val;
        }, preVals);
      }
      return calStepperVals2(easing, nextStepVals, steps - 1);
    };
    var _default = exports.default = function _default2(from, to, easing, duration, render) {
      var interKeys = (0, _util.getIntersectionKeys)(from, to);
      var timingStyle = interKeys.reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, [from[key], to[key]]));
      }, {});
      var stepperStyle = interKeys.reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, {
          from: from[key],
          velocity: 0,
          to: to[key]
        }));
      }, {});
      var cafId = -1;
      var preTime;
      var beginTime;
      var update = function update2() {
        return null;
      };
      var getCurrStyle = function getCurrStyle2() {
        return (0, _util.mapObject)(function(key, val) {
          return val.from;
        }, stepperStyle);
      };
      var shouldStopAnimation = function shouldStopAnimation2() {
        return !Object.values(stepperStyle).filter(needContinue).length;
      };
      var stepperUpdate = function stepperUpdate2(now) {
        if (!preTime) {
          preTime = now;
        }
        var deltaTime = now - preTime;
        var steps = deltaTime / easing.dt;
        stepperStyle = calStepperVals(easing, stepperStyle, steps);
        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), getCurrStyle(stepperStyle)));
        preTime = now;
        if (!shouldStopAnimation()) {
          cafId = requestAnimationFrame(update);
        }
      };
      var timingUpdate = function timingUpdate2(now) {
        if (!beginTime) {
          beginTime = now;
        }
        var t = (now - beginTime) / duration;
        var currStyle = (0, _util.mapObject)(function(key, val) {
          return alpha.apply(void 0, _toConsumableArray(val).concat([easing(t)]));
        }, timingStyle);
        render(_objectSpread(_objectSpread(_objectSpread({}, from), to), currStyle));
        if (t < 1) {
          cafId = requestAnimationFrame(update);
        } else {
          var finalStyle = (0, _util.mapObject)(function(key, val) {
            return alpha.apply(void 0, _toConsumableArray(val).concat([easing(1)]));
          }, timingStyle);
          render(_objectSpread(_objectSpread(_objectSpread({}, from), to), finalStyle));
        }
      };
      update = easing.isStepper ? stepperUpdate : timingUpdate;
      return function() {
        requestAnimationFrame(update);
        return function() {
          cancelAnimationFrame(cafId);
        };
      };
    };
  }
});

// node_modules/react-smooth/lib/Animate.js
var require_Animate = __commonJS({
  "node_modules/react-smooth/lib/Animate.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _fastEquals = require_cjs();
    var _AnimateManager = _interopRequireDefault(require_AnimateManager());
    var _easing = require_easing();
    var _configUpdate = _interopRequireDefault(require_configUpdate());
    var _util = require_util();
    var _excluded = ["children", "begin", "duration", "attributeName", "easing", "isActive", "steps", "from", "to", "canBegin", "onAnimationEnd", "shouldReAnimate", "onAnimationReStart"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    var Animate = function(_PureComponent) {
      _inherits(Animate2, _PureComponent);
      var _super = _createSuper(Animate2);
      function Animate2(props, context) {
        var _this;
        _classCallCheck(this, Animate2);
        _this = _super.call(this, props, context);
        var _this$props = _this.props, isActive = _this$props.isActive, attributeName = _this$props.attributeName, from = _this$props.from, to = _this$props.to, steps = _this$props.steps, children = _this$props.children, duration = _this$props.duration;
        _this.handleStyleChange = _this.handleStyleChange.bind(_assertThisInitialized(_this));
        _this.changeStyle = _this.changeStyle.bind(_assertThisInitialized(_this));
        if (!isActive || duration <= 0) {
          _this.state = {
            style: {}
          };
          if (typeof children === "function") {
            _this.state = {
              style: to
            };
          }
          return _possibleConstructorReturn(_this);
        }
        if (steps && steps.length) {
          _this.state = {
            style: steps[0].style
          };
        } else if (from) {
          if (typeof children === "function") {
            _this.state = {
              style: from
            };
            return _possibleConstructorReturn(_this);
          }
          _this.state = {
            style: attributeName ? _defineProperty({}, attributeName, from) : from
          };
        } else {
          _this.state = {
            style: {}
          };
        }
        return _this;
      }
      _createClass(Animate2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props2 = this.props, isActive = _this$props2.isActive, canBegin = _this$props2.canBegin;
          this.mounted = true;
          if (!isActive || !canBegin) {
            return;
          }
          this.runAnimation(this.props);
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
          var _this$props3 = this.props, isActive = _this$props3.isActive, canBegin = _this$props3.canBegin, attributeName = _this$props3.attributeName, shouldReAnimate = _this$props3.shouldReAnimate, to = _this$props3.to, currentFrom = _this$props3.from;
          var style = this.state.style;
          if (!canBegin) {
            return;
          }
          if (!isActive) {
            var newState = {
              style: attributeName ? _defineProperty({}, attributeName, to) : to
            };
            if (this.state && style) {
              if (attributeName && style[attributeName] !== to || !attributeName && style !== to) {
                this.setState(newState);
              }
            }
            return;
          }
          if ((0, _fastEquals.deepEqual)(prevProps.to, to) && prevProps.canBegin && prevProps.isActive) {
            return;
          }
          var isTriggered = !prevProps.canBegin || !prevProps.isActive;
          if (this.manager) {
            this.manager.stop();
          }
          if (this.stopJSAnimation) {
            this.stopJSAnimation();
          }
          var from = isTriggered || shouldReAnimate ? currentFrom : prevProps.to;
          if (this.state && style) {
            var _newState = {
              style: attributeName ? _defineProperty({}, attributeName, from) : from
            };
            if (attributeName && style[attributeName] !== from || !attributeName && style !== from) {
              this.setState(_newState);
            }
          }
          this.runAnimation(_objectSpread(_objectSpread({}, this.props), {}, {
            from,
            begin: 0
          }));
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.mounted = false;
          var onAnimationEnd = this.props.onAnimationEnd;
          if (this.unSubscribe) {
            this.unSubscribe();
          }
          if (this.manager) {
            this.manager.stop();
            this.manager = null;
          }
          if (this.stopJSAnimation) {
            this.stopJSAnimation();
          }
          if (onAnimationEnd) {
            onAnimationEnd();
          }
        }
      }, {
        key: "handleStyleChange",
        value: function handleStyleChange(style) {
          this.changeStyle(style);
        }
      }, {
        key: "changeStyle",
        value: function changeStyle(style) {
          if (this.mounted) {
            this.setState({
              style
            });
          }
        }
      }, {
        key: "runJSAnimation",
        value: function runJSAnimation(props) {
          var _this2 = this;
          var from = props.from, to = props.to, duration = props.duration, easing = props.easing, begin = props.begin, onAnimationEnd = props.onAnimationEnd, onAnimationStart = props.onAnimationStart;
          var startAnimation = (0, _configUpdate.default)(from, to, (0, _easing.configEasing)(easing), duration, this.changeStyle);
          var finalStartAnimation = function finalStartAnimation2() {
            _this2.stopJSAnimation = startAnimation();
          };
          this.manager.start([onAnimationStart, begin, finalStartAnimation, duration, onAnimationEnd]);
        }
      }, {
        key: "runStepAnimation",
        value: function runStepAnimation(props) {
          var _this3 = this;
          var steps = props.steps, begin = props.begin, onAnimationStart = props.onAnimationStart;
          var _steps$ = steps[0], initialStyle = _steps$.style, _steps$$duration = _steps$.duration, initialTime = _steps$$duration === void 0 ? 0 : _steps$$duration;
          var addStyle = function addStyle2(sequence, nextItem, index) {
            if (index === 0) {
              return sequence;
            }
            var duration = nextItem.duration, _nextItem$easing = nextItem.easing, easing = _nextItem$easing === void 0 ? "ease" : _nextItem$easing, style = nextItem.style, nextProperties = nextItem.properties, onAnimationEnd = nextItem.onAnimationEnd;
            var preItem = index > 0 ? steps[index - 1] : nextItem;
            var properties = nextProperties || Object.keys(style);
            if (typeof easing === "function" || easing === "spring") {
              return [].concat(_toConsumableArray(sequence), [_this3.runJSAnimation.bind(_this3, {
                from: preItem.style,
                to: style,
                duration,
                easing
              }), duration]);
            }
            var transition = (0, _util.getTransitionVal)(properties, duration, easing);
            var newStyle = _objectSpread(_objectSpread(_objectSpread({}, preItem.style), style), {}, {
              transition
            });
            return [].concat(_toConsumableArray(sequence), [newStyle, duration, onAnimationEnd]).filter(_util.identity);
          };
          return this.manager.start([onAnimationStart].concat(_toConsumableArray(steps.reduce(addStyle, [initialStyle, Math.max(initialTime, begin)])), [props.onAnimationEnd]));
        }
      }, {
        key: "runAnimation",
        value: function runAnimation(props) {
          if (!this.manager) {
            this.manager = (0, _AnimateManager.default)();
          }
          var begin = props.begin, duration = props.duration, attributeName = props.attributeName, propsTo = props.to, easing = props.easing, onAnimationStart = props.onAnimationStart, onAnimationEnd = props.onAnimationEnd, steps = props.steps, children = props.children;
          var manager = this.manager;
          this.unSubscribe = manager.subscribe(this.handleStyleChange);
          if (typeof easing === "function" || typeof children === "function" || easing === "spring") {
            this.runJSAnimation(props);
            return;
          }
          if (steps.length > 1) {
            this.runStepAnimation(props);
            return;
          }
          var to = attributeName ? _defineProperty({}, attributeName, propsTo) : propsTo;
          var transition = (0, _util.getTransitionVal)(Object.keys(to), duration, easing);
          manager.start([onAnimationStart, begin, _objectSpread(_objectSpread({}, to), {}, {
            transition
          }), duration, onAnimationEnd]);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props4 = this.props, children = _this$props4.children, begin = _this$props4.begin, duration = _this$props4.duration, attributeName = _this$props4.attributeName, easing = _this$props4.easing, isActive = _this$props4.isActive, steps = _this$props4.steps, from = _this$props4.from, to = _this$props4.to, canBegin = _this$props4.canBegin, onAnimationEnd = _this$props4.onAnimationEnd, shouldReAnimate = _this$props4.shouldReAnimate, onAnimationReStart = _this$props4.onAnimationReStart, others = _objectWithoutProperties(_this$props4, _excluded);
          var count = _react.Children.count(children);
          var stateStyle = this.state.style;
          if (typeof children === "function") {
            return children(stateStyle);
          }
          if (!isActive || count === 0 || duration <= 0) {
            return children;
          }
          var cloneContainer = function cloneContainer2(container) {
            var _container$props = container.props, _container$props$styl = _container$props.style, style = _container$props$styl === void 0 ? {} : _container$props$styl, className = _container$props.className;
            var res = (0, _react.cloneElement)(container, _objectSpread(_objectSpread({}, others), {}, {
              style: _objectSpread(_objectSpread({}, style), stateStyle),
              className
            }));
            return res;
          };
          if (count === 1) {
            return cloneContainer(_react.Children.only(children));
          }
          return _react.default.createElement("div", null, _react.Children.map(children, function(child) {
            return cloneContainer(child);
          }));
        }
      }]);
      return Animate2;
    }(_react.PureComponent);
    Animate.displayName = "Animate";
    Animate.defaultProps = {
      begin: 0,
      duration: 1e3,
      from: "",
      to: "",
      attributeName: "",
      easing: "ease",
      isActive: true,
      canBegin: true,
      steps: [],
      onAnimationEnd: function onAnimationEnd() {
      },
      onAnimationStart: function onAnimationStart() {
      }
    };
    Animate.propTypes = {
      from: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
      to: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
      attributeName: _propTypes.default.string,
      // animation duration
      duration: _propTypes.default.number,
      begin: _propTypes.default.number,
      easing: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
      steps: _propTypes.default.arrayOf(_propTypes.default.shape({
        duration: _propTypes.default.number.isRequired,
        style: _propTypes.default.object.isRequired,
        easing: _propTypes.default.oneOfType([_propTypes.default.oneOf(["ease", "ease-in", "ease-out", "ease-in-out", "linear"]), _propTypes.default.func]),
        // transition css properties(dash case), optional
        properties: _propTypes.default.arrayOf("string"),
        onAnimationEnd: _propTypes.default.func
      })),
      children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
      isActive: _propTypes.default.bool,
      canBegin: _propTypes.default.bool,
      onAnimationEnd: _propTypes.default.func,
      // decide if it should reanimate with initial from style when props change
      shouldReAnimate: _propTypes.default.bool,
      onAnimationStart: _propTypes.default.func,
      onAnimationReStart: _propTypes.default.func
    };
    var _default = exports.default = Animate;
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : {
        "default": e
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/dom-helpers/cjs/hasClass.js
var require_hasClass = __commonJS({
  "node_modules/dom-helpers/cjs/hasClass.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = hasClass;
    function hasClass(element, className) {
      if (element.classList) return !!className && element.classList.contains(className);
      return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
    }
    module.exports = exports["default"];
  }
});

// node_modules/dom-helpers/cjs/addClass.js
var require_addClass = __commonJS({
  "node_modules/dom-helpers/cjs/addClass.js"(exports, module) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = addClass;
    var _hasClass = _interopRequireDefault(require_hasClass());
    function addClass(element, className) {
      if (element.classList) element.classList.add(className);
      else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === "string") element.className = element.className + " " + className;
      else element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
    }
    module.exports = exports["default"];
  }
});

// node_modules/dom-helpers/cjs/removeClass.js
var require_removeClass = __commonJS({
  "node_modules/dom-helpers/cjs/removeClass.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = removeClass;
    function replaceClassName(origClass, classToRemove) {
      return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
    }
    function removeClass(element, className) {
      if (element.classList) {
        element.classList.remove(className);
      } else if (typeof element.className === "string") {
        element.className = replaceClassName(element.className, className);
      } else {
        element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-transition-group/cjs/config.js
var require_config = __commonJS({
  "node_modules/react-transition-group/cjs/config.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _default = {
      disabled: false
    };
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-transition-group/cjs/utils/PropTypes.js
var require_PropTypes = __commonJS({
  "node_modules/react-transition-group/cjs/utils/PropTypes.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.classNamesShape = exports.timeoutsShape = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timeoutsShape = true ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      enter: _propTypes.default.number,
      exit: _propTypes.default.number,
      appear: _propTypes.default.number
    }).isRequired]) : null;
    exports.timeoutsShape = timeoutsShape;
    var classNamesShape = true ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      enter: _propTypes.default.string,
      exit: _propTypes.default.string,
      active: _propTypes.default.string
    }), _propTypes.default.shape({
      enter: _propTypes.default.string,
      enterDone: _propTypes.default.string,
      enterActive: _propTypes.default.string,
      exit: _propTypes.default.string,
      exitDone: _propTypes.default.string,
      exitActive: _propTypes.default.string
    })]) : null;
    exports.classNamesShape = classNamesShape;
  }
});

// node_modules/react-transition-group/cjs/TransitionGroupContext.js
var require_TransitionGroupContext = __commonJS({
  "node_modules/react-transition-group/cjs/TransitionGroupContext.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = _react.default.createContext(null);
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-transition-group/cjs/utils/reflow.js
var require_reflow = __commonJS({
  "node_modules/react-transition-group/cjs/utils/reflow.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.forceReflow = void 0;
    var forceReflow = function forceReflow2(node) {
      return node.scrollTop;
    };
    exports.forceReflow = forceReflow;
  }
});

// node_modules/react-transition-group/cjs/Transition.js
var require_Transition = __commonJS({
  "node_modules/react-transition-group/cjs/Transition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _config = _interopRequireDefault(require_config());
    var _PropTypes = require_PropTypes();
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _reflow = require_reflow();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var UNMOUNTED = "unmounted";
    exports.UNMOUNTED = UNMOUNTED;
    var EXITED = "exited";
    exports.EXITED = EXITED;
    var ENTERING = "entering";
    exports.ENTERING = ENTERING;
    var ENTERED = "entered";
    exports.ENTERED = ENTERED;
    var EXITING = "exiting";
    exports.EXITING = EXITING;
    var Transition = function(_React$Component) {
      _inheritsLoose(Transition2, _React$Component);
      function Transition2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = {
          status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
      }
      Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return {
            status: EXITED
          };
        }
        return null;
      };
      var _proto = Transition2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          if (this.props.in) {
            if (status !== ENTERING && status !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status === ENTERING || status === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== "number") {
          exit = timeout.exit;
          enter = timeout.enter;
          appear = timeout.appear !== void 0 ? timeout.appear : enter;
        }
        return {
          exit,
          enter,
          appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          if (nextStatus === ENTERING) {
            if (this.props.unmountOnExit || this.props.mountOnEnter) {
              var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
              if (node) (0, _reflow.forceReflow)(node);
            }
            this.performEnter(mounting);
          } else {
            this.performExit();
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({
            status: UNMOUNTED
          });
        }
      };
      _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [appearing] : [_reactDom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        if (!mounting && !enter || _config.default.disabled) {
          this.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(maybeNode);
          });
          return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
          status: ENTERING
        }, function() {
          _this2.props.onEntering(maybeNode, maybeAppearing);
          _this2.onTransitionEnd(enterTimeout, function() {
            _this2.safeSetState({
              status: ENTERED
            }, function() {
              _this2.props.onEntered(maybeNode, maybeAppearing);
            });
          });
        });
      };
      _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? void 0 : _reactDom.default.findDOMNode(this);
        if (!exit || _config.default.disabled) {
          this.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(maybeNode);
          });
          return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
          status: EXITING
        }, function() {
          _this3.props.onExiting(maybeNode);
          _this3.onTransitionEnd(timeouts.exit, function() {
            _this3.safeSetState({
              status: EXITED
            }, function() {
              _this3.props.onExited(maybeNode);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function() {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
          this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) {
          setTimeout(this.nextCallback, timeout);
        }
      };
      _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
        return (
          // allows for nested Transitions
          _react.default.createElement(_TransitionGroupContext.default.Provider, {
            value: null
          }, typeof children === "function" ? children(status, childProps) : _react.default.cloneElement(_react.default.Children.only(children), childProps))
        );
      };
      return Transition2;
    }(_react.default.Component);
    Transition.contextType = _TransitionGroupContext.default;
    Transition.propTypes = true ? {
      /**
       * A React reference to DOM element that need to transition:
       * https://stackoverflow.com/a/51127130/4671932
       *
       *   - When `nodeRef` prop is used, `node` is not passed to callback functions
       *      (e.g. `onEnter`) because user already has direct access to the node.
       *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
       *     `nodeRef` need to be provided to `Transition` with changed `key` prop
       *     (see
       *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
       */
      nodeRef: _propTypes.default.shape({
        current: typeof Element === "undefined" ? _propTypes.default.any : function(propValue, key, componentName, location, propFullName, secret) {
          var value = propValue[key];
          return _propTypes.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
      }),
      /**
       * A `function` child can be used instead of a React element. This function is
       * called with the current transition status (`'entering'`, `'entered'`,
       * `'exiting'`, `'exited'`), which can be used to apply context
       * specific props to a component.
       *
       * ```jsx
       * <Transition in={this.state.in} timeout={150}>
       *   {state => (
       *     <MyComponent className={`fade fade-${state}`} />
       *   )}
       * </Transition>
       * ```
       */
      children: _propTypes.default.oneOfType([_propTypes.default.func.isRequired, _propTypes.default.element.isRequired]).isRequired,
      /**
       * Show the component; triggers the enter or exit states
       */
      in: _propTypes.default.bool,
      /**
       * By default the child component is mounted immediately along with
       * the parent `Transition` component. If you want to "lazy mount" the component on the
       * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
       * mounted, even on "exited", unless you also specify `unmountOnExit`.
       */
      mountOnEnter: _propTypes.default.bool,
      /**
       * By default the child component stays mounted after it reaches the `'exited'` state.
       * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
       */
      unmountOnExit: _propTypes.default.bool,
      /**
       * By default the child component does not perform the enter transition when
       * it first mounts, regardless of the value of `in`. If you want this
       * behavior, set both `appear` and `in` to `true`.
       *
       * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
       * > only adds an additional enter transition. However, in the
       * > `<CSSTransition>` component that first enter transition does result in
       * > additional `.appear-*` classes, that way you can choose to style it
       * > differently.
       */
      appear: _propTypes.default.bool,
      /**
       * Enable or disable enter transitions.
       */
      enter: _propTypes.default.bool,
      /**
       * Enable or disable exit transitions.
       */
      exit: _propTypes.default.bool,
      /**
       * The duration of the transition, in milliseconds.
       * Required unless `addEndListener` is provided.
       *
       * You may specify a single timeout for all transitions:
       *
       * ```jsx
       * timeout={500}
       * ```
       *
       * or individually:
       *
       * ```jsx
       * timeout={{
       *  appear: 500,
       *  enter: 300,
       *  exit: 500,
       * }}
       * ```
       *
       * - `appear` defaults to the value of `enter`
       * - `enter` defaults to `0`
       * - `exit` defaults to `0`
       *
       * @type {number | { enter?: number, exit?: number, appear?: number }}
       */
      timeout: function timeout(props) {
        var pt = _PropTypes.timeoutsShape;
        if (!props.addEndListener) pt = pt.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt.apply(void 0, [props].concat(args));
      },
      /**
       * Add a custom transition end trigger. Called with the transitioning
       * DOM node and a `done` callback. Allows for more fine grained transition end
       * logic. Timeouts are still used as a fallback if provided.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * ```jsx
       * addEndListener={(node, done) => {
       *   // use the css transitionend event to mark the finish of a transition
       *   node.addEventListener('transitionend', done, false);
       * }}
       * ```
       */
      addEndListener: _propTypes.default.func,
      /**
       * Callback fired before the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEnter: _propTypes.default.func,
      /**
       * Callback fired after the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: _propTypes.default.func,
      /**
       * Callback fired after the "entered" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEntered: _propTypes.default.func,
      /**
       * Callback fired before the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExit: _propTypes.default.func,
      /**
       * Callback fired after the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExiting: _propTypes.default.func,
      /**
       * Callback fired after the "exited" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExited: _propTypes.default.func
    } : {};
    function noop() {
    }
    Transition.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop
    };
    Transition.UNMOUNTED = UNMOUNTED;
    Transition.EXITED = EXITED;
    Transition.ENTERING = ENTERING;
    Transition.ENTERED = ENTERED;
    Transition.EXITING = EXITING;
    var _default = Transition;
    exports.default = _default;
  }
});

// node_modules/react-transition-group/cjs/CSSTransition.js
var require_CSSTransition = __commonJS({
  "node_modules/react-transition-group/cjs/CSSTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _addClass2 = _interopRequireDefault(require_addClass());
    var _removeClass = _interopRequireDefault(require_removeClass());
    var _react = _interopRequireDefault(require_react());
    var _Transition = _interopRequireDefault(require_Transition());
    var _PropTypes = require_PropTypes();
    var _reflow = require_reflow();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var _addClass = function addClass(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c) {
        return (0, _addClass2.default)(node, c);
      });
    };
    var removeClass = function removeClass2(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c) {
        return (0, _removeClass.default)(node, c);
      });
    };
    var CSSTransition = function(_React$Component) {
      _inheritsLoose(CSSTransition2, _React$Component);
      function CSSTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.appliedClasses = {
          appear: {},
          enter: {},
          exit: {}
        };
        _this.onEnter = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
          _this.removeClasses(node, "exit");
          _this.addClass(node, appearing ? "appear" : "enter", "base");
          if (_this.props.onEnter) {
            _this.props.onEnter(maybeNode, maybeAppearing);
          }
        };
        _this.onEntering = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
          var type = appearing ? "appear" : "enter";
          _this.addClass(node, type, "active");
          if (_this.props.onEntering) {
            _this.props.onEntering(maybeNode, maybeAppearing);
          }
        };
        _this.onEntered = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
          var type = appearing ? "appear" : "enter";
          _this.removeClasses(node, type);
          _this.addClass(node, type, "done");
          if (_this.props.onEntered) {
            _this.props.onEntered(maybeNode, maybeAppearing);
          }
        };
        _this.onExit = function(maybeNode) {
          var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
          _this.removeClasses(node, "appear");
          _this.removeClasses(node, "enter");
          _this.addClass(node, "exit", "base");
          if (_this.props.onExit) {
            _this.props.onExit(maybeNode);
          }
        };
        _this.onExiting = function(maybeNode) {
          var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
          _this.addClass(node, "exit", "active");
          if (_this.props.onExiting) {
            _this.props.onExiting(maybeNode);
          }
        };
        _this.onExited = function(maybeNode) {
          var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
          _this.removeClasses(node, "exit");
          _this.addClass(node, "exit", "done");
          if (_this.props.onExited) {
            _this.props.onExited(maybeNode);
          }
        };
        _this.resolveArguments = function(maybeNode, maybeAppearing) {
          return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
        };
        _this.getClassNames = function(type) {
          var classNames = _this.props.classNames;
          var isStringClassNames = typeof classNames === "string";
          var prefix = isStringClassNames && classNames ? classNames + "-" : "";
          var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
          var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
          var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
          return {
            baseClassName,
            activeClassName,
            doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition2.prototype;
      _proto.addClass = function addClass(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
        if (type === "appear" && phase === "done" && doneClassName) {
          className += " " + doneClassName;
        }
        if (phase === "active") {
          if (node) (0, _reflow.forceReflow)(node);
        }
        if (className) {
          this.appliedClasses[type][phase] = className;
          _addClass(node, className);
        }
      };
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {};
        if (baseClassName) {
          removeClass(node, baseClassName);
        }
        if (activeClassName) {
          removeClass(node, activeClassName);
        }
        if (doneClassName) {
          removeClass(node, doneClassName);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
        return _react.default.createElement(_Transition.default, _extends({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition2;
    }(_react.default.Component);
    CSSTransition.defaultProps = {
      classNames: ""
    };
    CSSTransition.propTypes = true ? _extends({}, _Transition.default.propTypes, {
      /**
       * The animation classNames applied to the component as it appears, enters,
       * exits or has finished the transition. A single name can be provided, which
       * will be suffixed for each stage, e.g. `classNames="fade"` applies:
       *
       * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
       * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
       * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
       *
       * A few details to note about how these classes are applied:
       *
       * 1. They are _joined_ with the ones that are already defined on the child
       *    component, so if you want to add some base styles, you can use
       *    `className` without worrying that it will be overridden.
       *
       * 2. If the transition component mounts with `in={false}`, no classes are
       *    applied yet. You might be expecting `*-exit-done`, but if you think
       *    about it, a component cannot finish exiting if it hasn't entered yet.
       *
       * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
       *    allows you to define different behavior for when appearing is done and
       *    when regular entering is done, using selectors like
       *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
       *    an epic entrance animation when element first appears in the DOM using
       *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
       *    simply use `fade-enter-done` for defining both cases.
       *
       * Each individual classNames can also be specified independently like:
       *
       * ```js
       * classNames={{
       *  appear: 'my-appear',
       *  appearActive: 'my-active-appear',
       *  appearDone: 'my-done-appear',
       *  enter: 'my-enter',
       *  enterActive: 'my-active-enter',
       *  enterDone: 'my-done-enter',
       *  exit: 'my-exit',
       *  exitActive: 'my-active-exit',
       *  exitDone: 'my-done-exit',
       * }}
       * ```
       *
       * If you want to set these classes using CSS Modules:
       *
       * ```js
       * import styles from './styles.css';
       * ```
       *
       * you might want to use camelCase in your CSS file, that way could simply
       * spread them instead of listing them one by one:
       *
       * ```js
       * classNames={{ ...styles }}
       * ```
       *
       * @type {string | {
       *  appear?: string,
       *  appearActive?: string,
       *  appearDone?: string,
       *  enter?: string,
       *  enterActive?: string,
       *  enterDone?: string,
       *  exit?: string,
       *  exitActive?: string,
       *  exitDone?: string,
       * }}
       */
      classNames: _PropTypes.classNamesShape,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEnter: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter-active' or
       * 'appear-active' class is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or
       * 'appear' classes are **removed** and the `done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntered: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExit: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExiting: _propTypes.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' classes
       * are **removed** and the `exit-done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExited: _propTypes.default.func
    }) : {};
    var _default = CSSTransition;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-transition-group/cjs/utils/ChildMapping.js
var require_ChildMapping = __commonJS({
  "node_modules/react-transition-group/cjs/utils/ChildMapping.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getChildMapping = getChildMapping;
    exports.mergeChildMappings = mergeChildMappings;
    exports.getInitialChildMapping = getInitialChildMapping;
    exports.getNextChildMapping = getNextChildMapping;
    var _react = require_react();
    function getChildMapping(children, mapFn) {
      var mapper = function mapper2(child) {
        return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
      };
      var result = /* @__PURE__ */ Object.create(null);
      if (children) _react.Children.map(children, function(c) {
        return c;
      }).forEach(function(child) {
        result[child.key] = mapper(child);
      });
      return result;
    }
    function mergeChildMappings(prev, next) {
      prev = prev || {};
      next = next || {};
      function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
      }
      var nextKeysPending = /* @__PURE__ */ Object.create(null);
      var pendingKeys = [];
      for (var prevKey in prev) {
        if (prevKey in next) {
          if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
          }
        } else {
          pendingKeys.push(prevKey);
        }
      }
      var i;
      var childMapping = {};
      for (var nextKey in next) {
        if (nextKeysPending[nextKey]) {
          for (i = 0; i < nextKeysPending[nextKey].length; i++) {
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
          }
        }
        childMapping[nextKey] = getValueForKey(nextKey);
      }
      for (i = 0; i < pendingKeys.length; i++) {
        childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
      }
      return childMapping;
    }
    function getProp(child, prop, props) {
      return props[prop] != null ? props[prop] : child.props[prop];
    }
    function getInitialChildMapping(props, onExited) {
      return getChildMapping(props.children, function(child) {
        return (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          appear: getProp(child, "appear", props),
          enter: getProp(child, "enter", props),
          exit: getProp(child, "exit", props)
        });
      });
    }
    function getNextChildMapping(nextProps, prevChildMapping, onExited) {
      var nextChildMapping = getChildMapping(nextProps.children);
      var children = mergeChildMappings(prevChildMapping, nextChildMapping);
      Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!(0, _react.isValidElement)(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;
        if (hasNext && (!hasPrev || isLeaving)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        } else if (!hasNext && hasPrev && !isLeaving) {
          children[key] = (0, _react.cloneElement)(child, {
            in: false
          });
        } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        }
      });
      return children;
    }
  }
});

// node_modules/react-transition-group/cjs/TransitionGroup.js
var require_TransitionGroup = __commonJS({
  "node_modules/react-transition-group/cjs/TransitionGroup.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _ChildMapping = require_ChildMapping();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var values = Object.values || function(obj) {
      return Object.keys(obj).map(function(k) {
        return obj[k];
      });
    };
    var defaultProps = {
      component: "div",
      childFactory: function childFactory(child) {
        return child;
      }
    };
    var TransitionGroup = function(_React$Component) {
      _inheritsLoose(TransitionGroup2, _React$Component);
      function TransitionGroup2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
        _this.state = {
          contextValue: {
            isMounting: true
          },
          handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
          contextValue: {
            isMounting: false
          }
        });
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function(state) {
            var children = _extends({}, state.children);
            delete children[child.key];
            return {
              children
            };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) {
          return _react.default.createElement(_TransitionGroupContext.default.Provider, {
            value: contextValue
          }, children);
        }
        return _react.default.createElement(_TransitionGroupContext.default.Provider, {
          value: contextValue
        }, _react.default.createElement(Component, props, children));
      };
      return TransitionGroup2;
    }(_react.default.Component);
    TransitionGroup.propTypes = true ? {
      /**
       * `<TransitionGroup>` renders a `<div>` by default. You can change this
       * behavior by providing a `component` prop.
       * If you use React v16+ and would like to avoid a wrapping `<div>` element
       * you can pass in `component={null}`. This is useful if the wrapping div
       * borks your css styles.
       */
      component: _propTypes.default.any,
      /**
       * A set of `<Transition>` components, that are toggled `in` and out as they
       * leave. the `<TransitionGroup>` will inject specific transition props, so
       * remember to spread them through if you are wrapping the `<Transition>` as
       * with our `<Fade>` example.
       *
       * While this component is meant for multiple `Transition` or `CSSTransition`
       * children, sometimes you may want to have a single transition child with
       * content that you want to be transitioned out and in when you change it
       * (e.g. routes, images etc.) In that case you can change the `key` prop of
       * the transition child as you change its content, this will cause
       * `TransitionGroup` to transition the child out and back in.
       */
      children: _propTypes.default.node,
      /**
       * A convenience prop that enables or disables appear animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      appear: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables enter animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      enter: _propTypes.default.bool,
      /**
       * A convenience prop that enables or disables exit animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      exit: _propTypes.default.bool,
      /**
       * You may need to apply reactive updates to a child as it is exiting.
       * This is generally done by using `cloneElement` however in the case of an exiting
       * child the element has already been removed and not accessible to the consumer.
       *
       * If you do need to update a child as it leaves you can provide a `childFactory`
       * to wrap every child, even the ones that are leaving.
       *
       * @type Function(child: ReactElement) -> ReactElement
       */
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup.defaultProps = defaultProps;
    var _default = TransitionGroup;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-transition-group/cjs/ReplaceTransition.js
var require_ReplaceTransition = __commonJS({
  "node_modules/react-transition-group/cjs/ReplaceTransition.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = function(_React$Component) {
      _inheritsLoose(ReplaceTransition2, _React$Component);
      function ReplaceTransition2() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle("onEnter", 0, args);
        };
        _this.handleEntering = function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle("onEntering", 0, args);
        };
        _this.handleEntered = function() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle("onEntered", 0, args);
        };
        _this.handleExit = function() {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle("onExit", 1, args);
        };
        _this.handleExiting = function() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle("onExiting", 1, args);
        };
        _this.handleExited = function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle("onExited", 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition2.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler]) {
          var maybeNode = child.props.nodeRef ? void 0 : _reactDom.default.findDOMNode(this);
          this.props[handler](maybeNode);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: "first",
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: "second",
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition2;
    }(_react.default.Component);
    ReplaceTransition.propTypes = true ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2) return new Error('"' + propName + '" must be exactly two transition components.');
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-transition-group/cjs/SwitchTransition.js
var require_SwitchTransition = __commonJS({
  "node_modules/react-transition-group/cjs/SwitchTransition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.modes = void 0;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _Transition = require_Transition();
    var _TransitionGroupContext = _interopRequireDefault(require_TransitionGroupContext());
    var _leaveRenders;
    var _enterRenders;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    function areChildrenDifferent(oldChildren, newChildren) {
      if (oldChildren === newChildren) return false;
      if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
        return false;
      }
      return true;
    }
    var modes = {
      out: "out-in",
      in: "in-out"
    };
    exports.modes = modes;
    var callHook = function callHook2(element, name, cb) {
      return function() {
        var _element$props;
        element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
        cb();
      };
    };
    var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
      var current = _ref.current, changeState = _ref.changeState;
      return _react.default.cloneElement(current, {
        in: false,
        onExited: callHook(current, "onExited", function() {
          changeState(_Transition.ENTERING, null);
        })
      });
    }, _leaveRenders[modes.in] = function(_ref2) {
      var current = _ref2.current, changeState = _ref2.changeState, children = _ref2.children;
      return [current, _react.default.cloneElement(children, {
        in: true,
        onEntered: callHook(children, "onEntered", function() {
          changeState(_Transition.ENTERING);
        })
      })];
    }, _leaveRenders);
    var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
      var children = _ref3.children, changeState = _ref3.changeState;
      return _react.default.cloneElement(children, {
        in: true,
        onEntered: callHook(children, "onEntered", function() {
          changeState(_Transition.ENTERED, _react.default.cloneElement(children, {
            in: true
          }));
        })
      });
    }, _enterRenders[modes.in] = function(_ref4) {
      var current = _ref4.current, children = _ref4.children, changeState = _ref4.changeState;
      return [_react.default.cloneElement(current, {
        in: false,
        onExited: callHook(current, "onExited", function() {
          changeState(_Transition.ENTERED, _react.default.cloneElement(children, {
            in: true
          }));
        })
      }), _react.default.cloneElement(children, {
        in: true
      })];
    }, _enterRenders);
    var SwitchTransition = function(_React$Component) {
      _inheritsLoose(SwitchTransition2, _React$Component);
      function SwitchTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.state = {
          status: _Transition.ENTERED,
          current: null
        };
        _this.appeared = false;
        _this.changeState = function(status, current) {
          if (current === void 0) {
            current = _this.state.current;
          }
          _this.setState({
            status,
            current
          });
        };
        return _this;
      }
      var _proto = SwitchTransition2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
      };
      SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.children == null) {
          return {
            current: null
          };
        }
        if (state.status === _Transition.ENTERING && props.mode === modes.in) {
          return {
            status: _Transition.ENTERING
          };
        }
        if (state.current && areChildrenDifferent(state.current, props.children)) {
          return {
            status: _Transition.EXITING
          };
        }
        return {
          current: _react.default.cloneElement(props.children, {
            in: true
          })
        };
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
        var data = {
          children,
          current,
          changeState: this.changeState,
          status
        };
        var component;
        switch (status) {
          case _Transition.ENTERING:
            component = enterRenders[mode](data);
            break;
          case _Transition.EXITING:
            component = leaveRenders[mode](data);
            break;
          case _Transition.ENTERED:
            component = current;
        }
        return _react.default.createElement(_TransitionGroupContext.default.Provider, {
          value: {
            isMounting: !this.appeared
          }
        }, component);
      };
      return SwitchTransition2;
    }(_react.default.Component);
    SwitchTransition.propTypes = true ? {
      /**
       * Transition modes.
       * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
       * `in-out`: New element transitions in first, then when complete, the current element transitions out.
       *
       * @type {'out-in'|'in-out'}
       */
      mode: _propTypes.default.oneOf([modes.in, modes.out]),
      /**
       * Any `Transition` or `CSSTransition` component.
       */
      children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])
    } : {};
    SwitchTransition.defaultProps = {
      mode: modes.out
    };
    var _default = SwitchTransition;
    exports.default = _default;
  }
});

// node_modules/react-transition-group/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/react-transition-group/cjs/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.config = exports.Transition = exports.TransitionGroup = exports.SwitchTransition = exports.ReplaceTransition = exports.CSSTransition = void 0;
    var _CSSTransition = _interopRequireDefault(require_CSSTransition());
    exports.CSSTransition = _CSSTransition.default;
    var _ReplaceTransition = _interopRequireDefault(require_ReplaceTransition());
    exports.ReplaceTransition = _ReplaceTransition.default;
    var _SwitchTransition = _interopRequireDefault(require_SwitchTransition());
    exports.SwitchTransition = _SwitchTransition.default;
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    exports.TransitionGroup = _TransitionGroup.default;
    var _Transition = _interopRequireDefault(require_Transition());
    exports.Transition = _Transition.default;
    var _config = _interopRequireDefault(require_config());
    exports.config = _config.default;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/react-smooth/lib/AnimateGroupChild.js
var require_AnimateGroupChild = __commonJS({
  "node_modules/react-smooth/lib/AnimateGroupChild.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactTransitionGroup = require_cjs2();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _Animate = _interopRequireDefault(require_Animate());
    var _excluded = ["children", "appearOptions", "enterOptions", "leaveOptions"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if (typeof Proxy === "function") return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    var parseDurationOfSingleTransition = function parseDurationOfSingleTransition2() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var steps = options.steps, duration = options.duration;
      if (steps && steps.length) {
        return steps.reduce(function(result, entry) {
          return result + (Number.isFinite(entry.duration) && entry.duration > 0 ? entry.duration : 0);
        }, 0);
      }
      if (Number.isFinite(duration)) {
        return duration;
      }
      return 0;
    };
    var AnimateGroupChild = function(_Component) {
      _inherits(AnimateGroupChild2, _Component);
      var _super = _createSuper(AnimateGroupChild2);
      function AnimateGroupChild2() {
        var _this;
        _classCallCheck(this, AnimateGroupChild2);
        _this = _super.call(this);
        _defineProperty(_assertThisInitialized(_this), "handleEnter", function(node, isAppearing) {
          var _this$props = _this.props, appearOptions = _this$props.appearOptions, enterOptions = _this$props.enterOptions;
          _this.handleStyleActive(isAppearing ? appearOptions : enterOptions);
        });
        _defineProperty(_assertThisInitialized(_this), "handleExit", function() {
          var leaveOptions = _this.props.leaveOptions;
          _this.handleStyleActive(leaveOptions);
        });
        _this.state = {
          isActive: false
        };
        return _this;
      }
      _createClass(AnimateGroupChild2, [{
        key: "handleStyleActive",
        value: function handleStyleActive(style) {
          if (style) {
            var onAnimationEnd = style.onAnimationEnd ? function() {
              style.onAnimationEnd();
            } : null;
            this.setState(_objectSpread(_objectSpread({}, style), {}, {
              onAnimationEnd,
              isActive: true
            }));
          }
        }
      }, {
        key: "parseTimeout",
        value: function parseTimeout() {
          var _this$props2 = this.props, appearOptions = _this$props2.appearOptions, enterOptions = _this$props2.enterOptions, leaveOptions = _this$props2.leaveOptions;
          return parseDurationOfSingleTransition(appearOptions) + parseDurationOfSingleTransition(enterOptions) + parseDurationOfSingleTransition(leaveOptions);
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _this$props3 = this.props, children = _this$props3.children, appearOptions = _this$props3.appearOptions, enterOptions = _this$props3.enterOptions, leaveOptions = _this$props3.leaveOptions, props = _objectWithoutProperties(_this$props3, _excluded);
          return _react.default.createElement(_reactTransitionGroup.Transition, _extends({}, props, {
            onEnter: this.handleEnter,
            onExit: this.handleExit,
            timeout: this.parseTimeout()
          }), function() {
            return _react.default.createElement(_Animate.default, _this2.state, _react.Children.only(children));
          });
        }
      }]);
      return AnimateGroupChild2;
    }(_react.Component);
    AnimateGroupChild.propTypes = {
      appearOptions: _propTypes.default.object,
      enterOptions: _propTypes.default.object,
      leaveOptions: _propTypes.default.object,
      children: _propTypes.default.element
    };
    var _default = exports.default = AnimateGroupChild;
  }
});

// node_modules/react-smooth/lib/AnimateGroup.js
var require_AnimateGroup = __commonJS({
  "node_modules/react-smooth/lib/AnimateGroup.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactTransitionGroup = require_cjs2();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _AnimateGroupChild = _interopRequireDefault(require_AnimateGroupChild());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function AnimateGroup(props) {
      var component = props.component, children = props.children, appear = props.appear, enter = props.enter, leave = props.leave;
      return _react.default.createElement(_reactTransitionGroup.TransitionGroup, {
        component
      }, _react.Children.map(children, function(child, index) {
        return _react.default.createElement(_AnimateGroupChild.default, {
          appearOptions: appear,
          enterOptions: enter,
          leaveOptions: leave,
          key: "child-".concat(index)
          // eslint-disable-line
        }, child);
      }));
    }
    AnimateGroup.propTypes = {
      appear: _propTypes.default.object,
      enter: _propTypes.default.object,
      leave: _propTypes.default.object,
      children: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.element]),
      component: _propTypes.default.any
    };
    AnimateGroup.defaultProps = {
      component: "span"
    };
    var _default = exports.default = AnimateGroup;
  }
});

// node_modules/react-smooth/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/react-smooth/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "AnimateGroup", {
      enumerable: true,
      get: function get() {
        return _AnimateGroup.default;
      }
    });
    Object.defineProperty(exports, "configBezier", {
      enumerable: true,
      get: function get() {
        return _easing.configBezier;
      }
    });
    Object.defineProperty(exports, "configSpring", {
      enumerable: true,
      get: function get() {
        return _easing.configSpring;
      }
    });
    exports.default = void 0;
    var _Animate = _interopRequireDefault(require_Animate());
    var _easing = require_easing();
    var _AnimateGroup = _interopRequireDefault(require_AnimateGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = exports.default = _Animate.default;
  }
});

// node_modules/recharts/lib/shape/Rectangle.js
var require_Rectangle = __commonJS({
  "node_modules/recharts/lib/shape/Rectangle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isInRectangle = exports.Rectangle = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getRectanglePath = function getRectanglePath2(x, y, width, height, radius) {
      var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);
      var ySign = height >= 0 ? 1 : -1;
      var xSign = width >= 0 ? 1 : -1;
      var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;
      var path;
      if (maxRadius > 0 && radius instanceof Array) {
        var newRadius = [0, 0, 0, 0];
        for (var i = 0, len = 4; i < len; i++) {
          newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];
        }
        path = "M".concat(x, ",").concat(y + ySign * newRadius[0]);
        if (newRadius[0] > 0) {
          path += "A ".concat(newRadius[0], ",").concat(newRadius[0], ",0,0,").concat(clockWise, ",").concat(x + xSign * newRadius[0], ",").concat(y);
        }
        path += "L ".concat(x + width - xSign * newRadius[1], ",").concat(y);
        if (newRadius[1] > 0) {
          path += "A ".concat(newRadius[1], ",").concat(newRadius[1], ",0,0,").concat(clockWise, ",\n        ").concat(x + width, ",").concat(y + ySign * newRadius[1]);
        }
        path += "L ".concat(x + width, ",").concat(y + height - ySign * newRadius[2]);
        if (newRadius[2] > 0) {
          path += "A ".concat(newRadius[2], ",").concat(newRadius[2], ",0,0,").concat(clockWise, ",\n        ").concat(x + width - xSign * newRadius[2], ",").concat(y + height);
        }
        path += "L ".concat(x + xSign * newRadius[3], ",").concat(y + height);
        if (newRadius[3] > 0) {
          path += "A ".concat(newRadius[3], ",").concat(newRadius[3], ",0,0,").concat(clockWise, ",\n        ").concat(x, ",").concat(y + height - ySign * newRadius[3]);
        }
        path += "Z";
      } else if (maxRadius > 0 && radius === +radius && radius > 0) {
        var _newRadius = Math.min(maxRadius, radius);
        path = "M ".concat(x, ",").concat(y + ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + xSign * _newRadius, ",").concat(y, "\n            L ").concat(x + width - xSign * _newRadius, ",").concat(y, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width, ",").concat(y + ySign * _newRadius, "\n            L ").concat(x + width, ",").concat(y + height - ySign * _newRadius, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x + width - xSign * _newRadius, ",").concat(y + height, "\n            L ").concat(x + xSign * _newRadius, ",").concat(y + height, "\n            A ").concat(_newRadius, ",").concat(_newRadius, ",0,0,").concat(clockWise, ",").concat(x, ",").concat(y + height - ySign * _newRadius, " Z");
      } else {
        path = "M ".concat(x, ",").concat(y, " h ").concat(width, " v ").concat(height, " h ").concat(-width, " Z");
      }
      return path;
    };
    var isInRectangle = exports.isInRectangle = function isInRectangle2(point, rect) {
      if (!point || !rect) {
        return false;
      }
      var px = point.x, py = point.y;
      var x = rect.x, y = rect.y, width = rect.width, height = rect.height;
      if (Math.abs(width) > 0 && Math.abs(height) > 0) {
        var minX = Math.min(x, x + width);
        var maxX = Math.max(x, x + width);
        var minY = Math.min(y, y + height);
        var maxY = Math.max(y, y + height);
        return px >= minX && px <= maxX && py >= minY && py <= maxY;
      }
      return false;
    };
    var defaultProps = {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      // The radius of border
      // The radius of four corners when radius is a number
      // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array
      radius: 0,
      isAnimationActive: false,
      isUpdateAnimationActive: false,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease"
    };
    var Rectangle = exports.Rectangle = function Rectangle2(rectangleProps) {
      var props = _objectSpread(_objectSpread({}, defaultProps), rectangleProps);
      var pathRef = (0, _react.useRef)();
      var _useState = (0, _react.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
      (0, _react.useEffect)(function() {
        if (pathRef.current && pathRef.current.getTotalLength) {
          try {
            var pathTotalLength = pathRef.current.getTotalLength();
            if (pathTotalLength) {
              setTotalLength(pathTotalLength);
            }
          } catch (err) {
          }
        }
      }, []);
      var x = props.x, y = props.y, width = props.width, height = props.height, radius = props.radius, className = props.className;
      var animationEasing = props.animationEasing, animationDuration = props.animationDuration, animationBegin = props.animationBegin, isAnimationActive = props.isAnimationActive, isUpdateAnimationActive = props.isUpdateAnimationActive;
      if (x !== +x || y !== +y || width !== +width || height !== +height || width === 0 || height === 0) {
        return null;
      }
      var layerClass = (0, _clsx["default"])("recharts-rectangle", className);
      if (!isUpdateAnimationActive) {
        return _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(props, true), {
          className: layerClass,
          d: getRectanglePath(x, y, width, height, radius)
        }));
      }
      return _react["default"].createElement(_reactSmooth["default"], {
        canBegin: totalLength > 0,
        from: {
          width,
          height,
          x,
          y
        },
        to: {
          width,
          height,
          x,
          y
        },
        duration: animationDuration,
        animationEasing,
        isActive: isUpdateAnimationActive
      }, function(_ref) {
        var currWidth = _ref.width, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
        return _react["default"].createElement(_reactSmooth["default"], {
          canBegin: totalLength > 0,
          from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
          to: "".concat(totalLength, "px 0px"),
          attributeName: "strokeDasharray",
          begin: animationBegin,
          duration: animationDuration,
          isActive: isAnimationActive,
          easing: animationEasing
        }, _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(props, true), {
          className: layerClass,
          d: getRectanglePath(currX, currY, currWidth, currHeight, radius),
          ref: pathRef
        })));
      });
    };
  }
});

// node_modules/recharts/lib/shape/Polygon.js
var require_Polygon = __commonJS({
  "node_modules/recharts/lib/shape/Polygon.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Polygon = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["points", "className", "baseLinePoints", "connectNulls"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var isValidatePoint = function isValidatePoint2(point) {
      return point && point.x === +point.x && point.y === +point.y;
    };
    var getParsedPoints = function getParsedPoints2() {
      var points = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var segmentPoints = [[]];
      points.forEach(function(entry) {
        if (isValidatePoint(entry)) {
          segmentPoints[segmentPoints.length - 1].push(entry);
        } else if (segmentPoints[segmentPoints.length - 1].length > 0) {
          segmentPoints.push([]);
        }
      });
      if (isValidatePoint(points[0])) {
        segmentPoints[segmentPoints.length - 1].push(points[0]);
      }
      if (segmentPoints[segmentPoints.length - 1].length <= 0) {
        segmentPoints = segmentPoints.slice(0, -1);
      }
      return segmentPoints;
    };
    var getSinglePolygonPath = function getSinglePolygonPath2(points, connectNulls) {
      var segmentPoints = getParsedPoints(points);
      if (connectNulls) {
        segmentPoints = [segmentPoints.reduce(function(res, segPoints) {
          return [].concat(_toConsumableArray(res), _toConsumableArray(segPoints));
        }, [])];
      }
      var polygonPath = segmentPoints.map(function(segPoints) {
        return segPoints.reduce(function(path, point, index) {
          return "".concat(path).concat(index === 0 ? "M" : "L").concat(point.x, ",").concat(point.y);
        }, "");
      }).join("");
      return segmentPoints.length === 1 ? "".concat(polygonPath, "Z") : polygonPath;
    };
    var getRanglePath = function getRanglePath2(points, baseLinePoints, connectNulls) {
      var outerPath = getSinglePolygonPath(points, connectNulls);
      return "".concat(outerPath.slice(-1) === "Z" ? outerPath.slice(0, -1) : outerPath, "L").concat(getSinglePolygonPath(baseLinePoints.reverse(), connectNulls).slice(1));
    };
    var Polygon = exports.Polygon = function Polygon2(props) {
      var points = props.points, className = props.className, baseLinePoints = props.baseLinePoints, connectNulls = props.connectNulls, others = _objectWithoutProperties(props, _excluded);
      if (!points || !points.length) {
        return null;
      }
      var layerClass = (0, _clsx["default"])("recharts-polygon", className);
      if (baseLinePoints && baseLinePoints.length) {
        var hasStroke = others.stroke && others.stroke !== "none";
        var rangePath = getRanglePath(points, baseLinePoints, connectNulls);
        return _react["default"].createElement("g", {
          className: layerClass
        }, _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(others, true), {
          fill: rangePath.slice(-1) === "Z" ? others.fill : "none",
          stroke: "none",
          d: rangePath
        })), hasStroke ? _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(others, true), {
          fill: "none",
          d: getSinglePolygonPath(points, connectNulls)
        })) : null, hasStroke ? _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(others, true), {
          fill: "none",
          d: getSinglePolygonPath(baseLinePoints, connectNulls)
        })) : null);
      }
      var singlePath = getSinglePolygonPath(points, connectNulls);
      return _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(others, true), {
        fill: singlePath.slice(-1) === "Z" ? others.fill : "none",
        className: layerClass,
        d: singlePath
      }));
    };
  }
});

// node_modules/recharts/lib/shape/Dot.js
var require_Dot = __commonJS({
  "node_modules/recharts/lib/shape/Dot.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Dot = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _types = require_types();
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    var Dot = exports.Dot = function Dot2(props) {
      var cx = props.cx, cy = props.cy, r = props.r, className = props.className;
      var layerClass = (0, _clsx["default"])("recharts-dot", className);
      if (cx === +cx && cy === +cy && r === +r) {
        return _react["default"].createElement("circle", _extends({}, (0, _ReactUtils.filterProps)(props, false), (0, _types.adaptEventHandlers)(props), {
          className: layerClass,
          cx,
          cy,
          r
        }));
      }
      return null;
    };
  }
});

// node_modules/recharts/lib/shape/Cross.js
var require_Cross = __commonJS({
  "node_modules/recharts/lib/shape/Cross.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Cross = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _DataUtils = require_DataUtils();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["x", "y", "top", "left", "width", "height", "className"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    var getPath = function getPath2(x, y, width, height, top, left) {
      return "M".concat(x, ",").concat(top, "v").concat(height, "M").concat(left, ",").concat(y, "h").concat(width);
    };
    var Cross = exports.Cross = function Cross2(_ref) {
      var _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, _ref$top = _ref.top, top = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left = _ref$left === void 0 ? 0 : _ref$left, _ref$width = _ref.width, width = _ref$width === void 0 ? 0 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 0 : _ref$height, className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded);
      var props = _objectSpread({
        x,
        y,
        top,
        left,
        width,
        height
      }, rest);
      if (!(0, _DataUtils.isNumber)(x) || !(0, _DataUtils.isNumber)(y) || !(0, _DataUtils.isNumber)(width) || !(0, _DataUtils.isNumber)(height) || !(0, _DataUtils.isNumber)(top) || !(0, _DataUtils.isNumber)(left)) {
        return null;
      }
      return _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(props, true), {
        className: (0, _clsx["default"])("recharts-cross", className),
        d: getPath(x, y, width, height, top, left)
      }));
    };
  }
});

// node_modules/recharts/lib/polar/PolarGrid.js
var require_PolarGrid = __commonJS({
  "node_modules/recharts/lib/polar/PolarGrid.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PolarGrid = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _PolarUtils = require_PolarUtils();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["cx", "cy", "innerRadius", "outerRadius", "gridType", "radialLines"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getPolygonPath = function getPolygonPath2(radius, cx, cy, polarAngles) {
      var path = "";
      polarAngles.forEach(function(angle, i) {
        var point = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle);
        if (i) {
          path += "L ".concat(point.x, ",").concat(point.y);
        } else {
          path += "M ".concat(point.x, ",").concat(point.y);
        }
      });
      path += "Z";
      return path;
    };
    var PolarAngles = function PolarAngles2(props) {
      var cx = props.cx, cy = props.cy, innerRadius = props.innerRadius, outerRadius = props.outerRadius, polarAngles = props.polarAngles, radialLines = props.radialLines;
      if (!polarAngles || !polarAngles.length || !radialLines) {
        return null;
      }
      var polarAnglesProps = _objectSpread({
        stroke: "#ccc"
      }, (0, _ReactUtils.filterProps)(props, false));
      return _react["default"].createElement("g", {
        className: "recharts-polar-grid-angle"
      }, polarAngles.map(function(entry) {
        var start = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, entry);
        var end = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, entry);
        return _react["default"].createElement("line", _extends({}, polarAnglesProps, {
          key: "line-".concat(entry),
          x1: start.x,
          y1: start.y,
          x2: end.x,
          y2: end.y
        }));
      }));
    };
    var ConcentricCircle = function ConcentricCircle2(props) {
      var cx = props.cx, cy = props.cy, radius = props.radius, index = props.index;
      var concentricCircleProps = _objectSpread(_objectSpread({
        stroke: "#ccc"
      }, (0, _ReactUtils.filterProps)(props, false)), {}, {
        fill: "none"
      });
      return _react["default"].createElement("circle", _extends({}, concentricCircleProps, {
        className: (0, _clsx["default"])("recharts-polar-grid-concentric-circle", props.className),
        key: "circle-".concat(index),
        cx,
        cy,
        r: radius
      }));
    };
    var ConcentricPolygon = function ConcentricPolygon2(props) {
      var radius = props.radius, index = props.index;
      var concentricPolygonProps = _objectSpread(_objectSpread({
        stroke: "#ccc"
      }, (0, _ReactUtils.filterProps)(props, false)), {}, {
        fill: "none"
      });
      return _react["default"].createElement("path", _extends({}, concentricPolygonProps, {
        className: (0, _clsx["default"])("recharts-polar-grid-concentric-polygon", props.className),
        key: "path-".concat(index),
        d: getPolygonPath(radius, props.cx, props.cy, props.polarAngles)
      }));
    };
    var ConcentricPath = function ConcentricPath2(props) {
      var polarRadius = props.polarRadius, gridType = props.gridType;
      if (!polarRadius || !polarRadius.length) {
        return null;
      }
      return _react["default"].createElement("g", {
        className: "recharts-polar-grid-concentric"
      }, polarRadius.map(function(entry, i) {
        var key = i;
        if (gridType === "circle") return _react["default"].createElement(ConcentricCircle, _extends({
          key
        }, props, {
          radius: entry,
          index: i
        }));
        return _react["default"].createElement(ConcentricPolygon, _extends({
          key
        }, props, {
          radius: entry,
          index: i
        }));
      }));
    };
    var PolarGrid = exports.PolarGrid = function PolarGrid2(_ref) {
      var _ref$cx = _ref.cx, cx = _ref$cx === void 0 ? 0 : _ref$cx, _ref$cy = _ref.cy, cy = _ref$cy === void 0 ? 0 : _ref$cy, _ref$innerRadius = _ref.innerRadius, innerRadius = _ref$innerRadius === void 0 ? 0 : _ref$innerRadius, _ref$outerRadius = _ref.outerRadius, outerRadius = _ref$outerRadius === void 0 ? 0 : _ref$outerRadius, _ref$gridType = _ref.gridType, gridType = _ref$gridType === void 0 ? "polygon" : _ref$gridType, _ref$radialLines = _ref.radialLines, radialLines = _ref$radialLines === void 0 ? true : _ref$radialLines, props = _objectWithoutProperties(_ref, _excluded);
      if (outerRadius <= 0) {
        return null;
      }
      return _react["default"].createElement("g", {
        className: "recharts-polar-grid"
      }, _react["default"].createElement(PolarAngles, _extends({
        cx,
        cy,
        innerRadius,
        outerRadius,
        gridType,
        radialLines
      }, props)), _react["default"].createElement(ConcentricPath, _extends({
        cx,
        cy,
        innerRadius,
        outerRadius,
        gridType,
        radialLines
      }, props)));
    };
    PolarGrid.displayName = "PolarGrid";
  }
});

// node_modules/lodash/maxBy.js
var require_maxBy = __commonJS({
  "node_modules/lodash/maxBy.js"(exports, module) {
    var baseExtremum = require_baseExtremum();
    var baseGt = require_baseGt();
    var baseIteratee = require_baseIteratee();
    function maxBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : void 0;
    }
    module.exports = maxBy;
  }
});

// node_modules/lodash/minBy.js
var require_minBy = __commonJS({
  "node_modules/lodash/minBy.js"(exports, module) {
    var baseExtremum = require_baseExtremum();
    var baseIteratee = require_baseIteratee();
    var baseLt = require_baseLt();
    function minBy(array, iteratee) {
      return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt) : void 0;
    }
    module.exports = minBy;
  }
});

// node_modules/recharts/lib/polar/PolarRadiusAxis.js
var require_PolarRadiusAxis = __commonJS({
  "node_modules/recharts/lib/polar/PolarRadiusAxis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PolarRadiusAxis = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _maxBy = _interopRequireDefault(require_maxBy());
    var _minBy = _interopRequireDefault(require_minBy());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Text = require_Text();
    var _Label = require_Label();
    var _Layer = require_Layer();
    var _PolarUtils = require_PolarUtils();
    var _types = require_types();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["cx", "cy", "angle", "ticks", "axisLine"];
    var _excluded2 = ["ticks", "tick", "angle", "tickFormatter", "stroke"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var PolarRadiusAxis = exports.PolarRadiusAxis = function(_PureComponent) {
      function PolarRadiusAxis2() {
        _classCallCheck(this, PolarRadiusAxis2);
        return _callSuper(this, PolarRadiusAxis2, arguments);
      }
      _inherits(PolarRadiusAxis2, _PureComponent);
      return _createClass(PolarRadiusAxis2, [{
        key: "getTickValueCoord",
        value: (
          /**
           * Calculate the coordinate of tick
           * @param  {Number} coordinate The radius of tick
           * @return {Object} (x, y)
           */
          function getTickValueCoord(_ref) {
            var coordinate = _ref.coordinate;
            var _this$props = this.props, angle = _this$props.angle, cx = _this$props.cx, cy = _this$props.cy;
            return (0, _PolarUtils.polarToCartesian)(cx, cy, coordinate, angle);
          }
        )
      }, {
        key: "getTickTextAnchor",
        value: function getTickTextAnchor() {
          var orientation = this.props.orientation;
          var textAnchor;
          switch (orientation) {
            case "left":
              textAnchor = "end";
              break;
            case "right":
              textAnchor = "start";
              break;
            default:
              textAnchor = "middle";
              break;
          }
          return textAnchor;
        }
      }, {
        key: "getViewBox",
        value: function getViewBox() {
          var _this$props2 = this.props, cx = _this$props2.cx, cy = _this$props2.cy, angle = _this$props2.angle, ticks = _this$props2.ticks;
          var maxRadiusTick = (0, _maxBy["default"])(ticks, function(entry) {
            return entry.coordinate || 0;
          });
          var minRadiusTick = (0, _minBy["default"])(ticks, function(entry) {
            return entry.coordinate || 0;
          });
          return {
            cx,
            cy,
            startAngle: angle,
            endAngle: angle,
            innerRadius: minRadiusTick.coordinate || 0,
            outerRadius: maxRadiusTick.coordinate || 0
          };
        }
      }, {
        key: "renderAxisLine",
        value: function renderAxisLine() {
          var _this$props3 = this.props, cx = _this$props3.cx, cy = _this$props3.cy, angle = _this$props3.angle, ticks = _this$props3.ticks, axisLine = _this$props3.axisLine, others = _objectWithoutProperties(_this$props3, _excluded);
          var extent = ticks.reduce(function(result, entry) {
            return [Math.min(result[0], entry.coordinate), Math.max(result[1], entry.coordinate)];
          }, [Infinity, -Infinity]);
          var point0 = (0, _PolarUtils.polarToCartesian)(cx, cy, extent[0], angle);
          var point1 = (0, _PolarUtils.polarToCartesian)(cx, cy, extent[1], angle);
          var props = _objectSpread(_objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(others, false)), {}, {
            fill: "none"
          }, (0, _ReactUtils.filterProps)(axisLine, false)), {}, {
            x1: point0.x,
            y1: point0.y,
            x2: point1.x,
            y2: point1.y
          });
          return _react["default"].createElement("line", _extends({
            className: "recharts-polar-radius-axis-line"
          }, props));
        }
      }, {
        key: "renderTicks",
        value: function renderTicks() {
          var _this = this;
          var _this$props4 = this.props, ticks = _this$props4.ticks, tick = _this$props4.tick, angle = _this$props4.angle, tickFormatter = _this$props4.tickFormatter, stroke = _this$props4.stroke, others = _objectWithoutProperties(_this$props4, _excluded2);
          var textAnchor = this.getTickTextAnchor();
          var axisProps = (0, _ReactUtils.filterProps)(others, false);
          var customTickProps = (0, _ReactUtils.filterProps)(tick, false);
          var items = ticks.map(function(entry, i) {
            var coord = _this.getTickValueCoord(entry);
            var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
              textAnchor,
              transform: "rotate(".concat(90 - angle, ", ").concat(coord.x, ", ").concat(coord.y, ")")
            }, axisProps), {}, {
              stroke: "none",
              fill: stroke
            }, customTickProps), {}, {
              index: i
            }, coord), {}, {
              payload: entry
            });
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: (0, _clsx["default"])("recharts-polar-radius-axis-tick", (0, _PolarUtils.getTickClassName)(tick)),
              key: "tick-".concat(entry.coordinate)
            }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), PolarRadiusAxis2.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-polar-radius-axis-ticks"
          }, items);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props5 = this.props, ticks = _this$props5.ticks, axisLine = _this$props5.axisLine, tick = _this$props5.tick;
          if (!ticks || !ticks.length) {
            return null;
          }
          return _react["default"].createElement(_Layer.Layer, {
            className: (0, _clsx["default"])("recharts-polar-radius-axis", this.props.className)
          }, axisLine && this.renderAxisLine(), tick && this.renderTicks(), _Label.Label.renderCallByParent(this.props, this.getViewBox()));
        }
      }], [{
        key: "renderTickItem",
        value: function renderTickItem(option, props, value) {
          var tickItem;
          if (_react["default"].isValidElement(option)) {
            tickItem = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            tickItem = option(props);
          } else {
            tickItem = _react["default"].createElement(_Text.Text, _extends({}, props, {
              className: "recharts-polar-radius-axis-tick-value"
            }), value);
          }
          return tickItem;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(PolarRadiusAxis, "displayName", "PolarRadiusAxis");
    _defineProperty(PolarRadiusAxis, "axisType", "radiusAxis");
    _defineProperty(PolarRadiusAxis, "defaultProps", {
      type: "number",
      radiusAxisId: 0,
      cx: 0,
      cy: 0,
      angle: 0,
      orientation: "right",
      stroke: "#ccc",
      axisLine: true,
      tick: true,
      tickCount: 5,
      allowDataOverflow: false,
      scale: "auto",
      allowDuplicatedCategory: true
    });
  }
});

// node_modules/recharts/lib/polar/PolarAngleAxis.js
var require_PolarAngleAxis = __commonJS({
  "node_modules/recharts/lib/polar/PolarAngleAxis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PolarAngleAxis = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _Dot = require_Dot();
    var _Polygon = require_Polygon();
    var _Text = require_Text();
    var _types = require_types();
    var _ReactUtils = require_ReactUtils();
    var _PolarUtils = require_PolarUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var RADIAN = Math.PI / 180;
    var eps = 1e-5;
    var PolarAngleAxis = exports.PolarAngleAxis = function(_PureComponent) {
      function PolarAngleAxis2() {
        _classCallCheck(this, PolarAngleAxis2);
        return _callSuper(this, PolarAngleAxis2, arguments);
      }
      _inherits(PolarAngleAxis2, _PureComponent);
      return _createClass(PolarAngleAxis2, [{
        key: "getTickLineCoord",
        value: (
          /**
           * Calculate the coordinate of line endpoint
           * @param  {Object} data The Data if ticks
           * @return {Object} (x0, y0): The start point of text,
           *                  (x1, y1): The end point close to text,
           *                  (x2, y2): The end point close to axis
           */
          function getTickLineCoord(data) {
            var _this$props = this.props, cx = _this$props.cx, cy = _this$props.cy, radius = _this$props.radius, orientation = _this$props.orientation, tickSize = _this$props.tickSize;
            var tickLineSize = tickSize || 8;
            var p1 = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, data.coordinate);
            var p2 = (0, _PolarUtils.polarToCartesian)(cx, cy, radius + (orientation === "inner" ? -1 : 1) * tickLineSize, data.coordinate);
            return {
              x1: p1.x,
              y1: p1.y,
              x2: p2.x,
              y2: p2.y
            };
          }
        )
        /**
         * Get the text-anchor of each tick
         * @param  {Object} data Data of ticks
         * @return {String} text-anchor
         */
      }, {
        key: "getTickTextAnchor",
        value: function getTickTextAnchor(data) {
          var orientation = this.props.orientation;
          var cos = Math.cos(-data.coordinate * RADIAN);
          var textAnchor;
          if (cos > eps) {
            textAnchor = orientation === "outer" ? "start" : "end";
          } else if (cos < -eps) {
            textAnchor = orientation === "outer" ? "end" : "start";
          } else {
            textAnchor = "middle";
          }
          return textAnchor;
        }
      }, {
        key: "renderAxisLine",
        value: function renderAxisLine() {
          var _this$props2 = this.props, cx = _this$props2.cx, cy = _this$props2.cy, radius = _this$props2.radius, axisLine = _this$props2.axisLine, axisLineType = _this$props2.axisLineType;
          var props = _objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(this.props, false)), {}, {
            fill: "none"
          }, (0, _ReactUtils.filterProps)(axisLine, false));
          if (axisLineType === "circle") {
            return _react["default"].createElement(_Dot.Dot, _extends({
              className: "recharts-polar-angle-axis-line"
            }, props, {
              cx,
              cy,
              r: radius
            }));
          }
          var ticks = this.props.ticks;
          var points = ticks.map(function(entry) {
            return (0, _PolarUtils.polarToCartesian)(cx, cy, radius, entry.coordinate);
          });
          return _react["default"].createElement(_Polygon.Polygon, _extends({
            className: "recharts-polar-angle-axis-line"
          }, props, {
            points
          }));
        }
      }, {
        key: "renderTicks",
        value: function renderTicks() {
          var _this = this;
          var _this$props3 = this.props, ticks = _this$props3.ticks, tick = _this$props3.tick, tickLine = _this$props3.tickLine, tickFormatter = _this$props3.tickFormatter, stroke = _this$props3.stroke;
          var axisProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customTickProps = (0, _ReactUtils.filterProps)(tick, false);
          var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {
            fill: "none"
          }, (0, _ReactUtils.filterProps)(tickLine, false));
          var items = ticks.map(function(entry, i) {
            var lineCoord = _this.getTickLineCoord(entry);
            var textAnchor = _this.getTickTextAnchor(entry);
            var tickProps = _objectSpread(_objectSpread(_objectSpread({
              textAnchor
            }, axisProps), {}, {
              stroke: "none",
              fill: stroke
            }, customTickProps), {}, {
              index: i,
              payload: entry,
              x: lineCoord.x2,
              y: lineCoord.y2
            });
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: (0, _clsx["default"])("recharts-polar-angle-axis-tick", (0, _PolarUtils.getTickClassName)(tick)),
              key: "tick-".concat(entry.coordinate)
            }, (0, _types.adaptEventsOfChild)(_this.props, entry, i)), tickLine && _react["default"].createElement("line", _extends({
              className: "recharts-polar-angle-axis-tick-line"
            }, tickLineProps, lineCoord)), tick && PolarAngleAxis2.renderTickItem(tick, tickProps, tickFormatter ? tickFormatter(entry.value, i) : entry.value));
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-polar-angle-axis-ticks"
          }, items);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props4 = this.props, ticks = _this$props4.ticks, radius = _this$props4.radius, axisLine = _this$props4.axisLine;
          if (radius <= 0 || !ticks || !ticks.length) {
            return null;
          }
          return _react["default"].createElement(_Layer.Layer, {
            className: (0, _clsx["default"])("recharts-polar-angle-axis", this.props.className)
          }, axisLine && this.renderAxisLine(), this.renderTicks());
        }
      }], [{
        key: "renderTickItem",
        value: function renderTickItem(option, props, value) {
          var tickItem;
          if (_react["default"].isValidElement(option)) {
            tickItem = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            tickItem = option(props);
          } else {
            tickItem = _react["default"].createElement(_Text.Text, _extends({}, props, {
              className: "recharts-polar-angle-axis-tick-value"
            }), value);
          }
          return tickItem;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(PolarAngleAxis, "displayName", "PolarAngleAxis");
    _defineProperty(PolarAngleAxis, "axisType", "angleAxis");
    _defineProperty(PolarAngleAxis, "defaultProps", {
      type: "category",
      angleAxisId: 0,
      scale: "auto",
      cx: 0,
      cy: 0,
      orientation: "outer",
      axisLine: true,
      tickLine: true,
      tickSize: 8,
      tick: true,
      hide: false,
      allowDuplicatedCategory: true
    });
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/lodash/isBoolean.js
var require_isBoolean = __commonJS({
  "node_modules/lodash/isBoolean.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var boolTag = "[object Boolean]";
    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
    }
    module.exports = isBoolean;
  }
});

// node_modules/recharts/lib/shape/Trapezoid.js
var require_Trapezoid = __commonJS({
  "node_modules/recharts/lib/shape/Trapezoid.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Trapezoid = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getTrapezoidPath = function getTrapezoidPath2(x, y, upperWidth, lowerWidth, height) {
      var widthGap = upperWidth - lowerWidth;
      var path;
      path = "M ".concat(x, ",").concat(y);
      path += "L ".concat(x + upperWidth, ",").concat(y);
      path += "L ".concat(x + upperWidth - widthGap / 2, ",").concat(y + height);
      path += "L ".concat(x + upperWidth - widthGap / 2 - lowerWidth, ",").concat(y + height);
      path += "L ".concat(x, ",").concat(y, " Z");
      return path;
    };
    var defaultProps = {
      x: 0,
      y: 0,
      upperWidth: 0,
      lowerWidth: 0,
      height: 0,
      isUpdateAnimationActive: false,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease"
    };
    var Trapezoid = exports.Trapezoid = function Trapezoid2(props) {
      var trapezoidProps = _objectSpread(_objectSpread({}, defaultProps), props);
      var pathRef = (0, _react.useRef)();
      var _useState = (0, _react.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];
      (0, _react.useEffect)(function() {
        if (pathRef.current && pathRef.current.getTotalLength) {
          try {
            var pathTotalLength = pathRef.current.getTotalLength();
            if (pathTotalLength) {
              setTotalLength(pathTotalLength);
            }
          } catch (err) {
          }
        }
      }, []);
      var x = trapezoidProps.x, y = trapezoidProps.y, upperWidth = trapezoidProps.upperWidth, lowerWidth = trapezoidProps.lowerWidth, height = trapezoidProps.height, className = trapezoidProps.className;
      var animationEasing = trapezoidProps.animationEasing, animationDuration = trapezoidProps.animationDuration, animationBegin = trapezoidProps.animationBegin, isUpdateAnimationActive = trapezoidProps.isUpdateAnimationActive;
      if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {
        return null;
      }
      var layerClass = (0, _clsx["default"])("recharts-trapezoid", className);
      if (!isUpdateAnimationActive) {
        return _react["default"].createElement("g", null, _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(trapezoidProps, true), {
          className: layerClass,
          d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)
        })));
      }
      return _react["default"].createElement(_reactSmooth["default"], {
        canBegin: totalLength > 0,
        from: {
          upperWidth: 0,
          lowerWidth: 0,
          height,
          x,
          y
        },
        to: {
          upperWidth,
          lowerWidth,
          height,
          x,
          y
        },
        duration: animationDuration,
        animationEasing,
        isActive: isUpdateAnimationActive
      }, function(_ref) {
        var currUpperWidth = _ref.upperWidth, currLowerWidth = _ref.lowerWidth, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;
        return _react["default"].createElement(_reactSmooth["default"], {
          canBegin: totalLength > 0,
          from: "0px ".concat(totalLength === -1 ? 1 : totalLength, "px"),
          to: "".concat(totalLength, "px 0px"),
          attributeName: "strokeDasharray",
          begin: animationBegin,
          duration: animationDuration,
          easing: animationEasing
        }, _react["default"].createElement("path", _extends({}, (0, _ReactUtils.filterProps)(trapezoidProps, true), {
          className: layerClass,
          d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),
          ref: pathRef
        })));
      });
    };
  }
});

// node_modules/recharts/lib/util/ActiveShapeUtils.js
var require_ActiveShapeUtils = __commonJS({
  "node_modules/recharts/lib/util/ActiveShapeUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Shape = Shape;
    exports.compareFunnel = compareFunnel;
    exports.comparePie = comparePie;
    exports.compareScatter = compareScatter;
    exports.getActiveShapeIndexForTooltip = getActiveShapeIndexForTooltip;
    exports.getPropsFromShapeOption = getPropsFromShapeOption;
    exports.isFunnel = isFunnel;
    exports.isPie = isPie;
    exports.isScatter = isScatter;
    var _react = _interopRequireWildcard(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isPlainObject = _interopRequireDefault(require_isPlainObject());
    var _isBoolean = _interopRequireDefault(require_isBoolean());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _Rectangle = require_Rectangle();
    var _Trapezoid = require_Trapezoid();
    var _Sector = require_Sector();
    var _Layer = require_Layer();
    var _Symbols = require_Symbols();
    var _excluded = ["option", "shapeType", "propTransformer", "activeClassName", "isActive"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function defaultPropTransformer(option, props) {
      return _objectSpread(_objectSpread({}, props), option);
    }
    function isSymbolsProps(shapeType, _elementProps) {
      return shapeType === "symbols";
    }
    function ShapeSelector(_ref) {
      var shapeType = _ref.shapeType, elementProps = _ref.elementProps;
      switch (shapeType) {
        case "rectangle":
          return _react["default"].createElement(_Rectangle.Rectangle, elementProps);
        case "trapezoid":
          return _react["default"].createElement(_Trapezoid.Trapezoid, elementProps);
        case "sector":
          return _react["default"].createElement(_Sector.Sector, elementProps);
        case "symbols":
          if (isSymbolsProps(shapeType, elementProps)) {
            return _react["default"].createElement(_Symbols.Symbols, elementProps);
          }
          break;
        default:
          return null;
      }
    }
    function getPropsFromShapeOption(option) {
      if ((0, _react.isValidElement)(option)) {
        return option.props;
      }
      return option;
    }
    function Shape(_ref2) {
      var option = _ref2.option, shapeType = _ref2.shapeType, _ref2$propTransformer = _ref2.propTransformer, propTransformer = _ref2$propTransformer === void 0 ? defaultPropTransformer : _ref2$propTransformer, _ref2$activeClassName = _ref2.activeClassName, activeClassName = _ref2$activeClassName === void 0 ? "recharts-active-shape" : _ref2$activeClassName, isActive = _ref2.isActive, props = _objectWithoutProperties(_ref2, _excluded);
      var shape;
      if ((0, _react.isValidElement)(option)) {
        shape = (0, _react.cloneElement)(option, _objectSpread(_objectSpread({}, props), getPropsFromShapeOption(option)));
      } else if ((0, _isFunction["default"])(option)) {
        shape = option(props);
      } else if ((0, _isPlainObject["default"])(option) && !(0, _isBoolean["default"])(option)) {
        var nextProps = propTransformer(option, props);
        shape = _react["default"].createElement(ShapeSelector, {
          shapeType,
          elementProps: nextProps
        });
      } else {
        var elementProps = props;
        shape = _react["default"].createElement(ShapeSelector, {
          shapeType,
          elementProps
        });
      }
      if (isActive) {
        return _react["default"].createElement(_Layer.Layer, {
          className: activeClassName
        }, shape);
      }
      return shape;
    }
    function isFunnel(graphicalItem, _item) {
      return _item != null && "trapezoids" in graphicalItem.props;
    }
    function isPie(graphicalItem, _item) {
      return _item != null && "sectors" in graphicalItem.props;
    }
    function isScatter(graphicalItem, _item) {
      return _item != null && "points" in graphicalItem.props;
    }
    function compareFunnel(shapeData, activeTooltipItem) {
      var _activeTooltipItem$la, _activeTooltipItem$la2;
      var xMatches = shapeData.x === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la === void 0 ? void 0 : _activeTooltipItem$la.x) || shapeData.x === activeTooltipItem.x;
      var yMatches = shapeData.y === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la2 = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la2 === void 0 ? void 0 : _activeTooltipItem$la2.y) || shapeData.y === activeTooltipItem.y;
      return xMatches && yMatches;
    }
    function comparePie(shapeData, activeTooltipItem) {
      var startAngleMatches = shapeData.endAngle === activeTooltipItem.endAngle;
      var endAngleMatches = shapeData.startAngle === activeTooltipItem.startAngle;
      return startAngleMatches && endAngleMatches;
    }
    function compareScatter(shapeData, activeTooltipItem) {
      var xMatches = shapeData.x === activeTooltipItem.x;
      var yMatches = shapeData.y === activeTooltipItem.y;
      var zMatches = shapeData.z === activeTooltipItem.z;
      return xMatches && yMatches && zMatches;
    }
    function getComparisonFn(graphicalItem, activeItem) {
      var comparison;
      if (isFunnel(graphicalItem, activeItem)) {
        comparison = compareFunnel;
      } else if (isPie(graphicalItem, activeItem)) {
        comparison = comparePie;
      } else if (isScatter(graphicalItem, activeItem)) {
        comparison = compareScatter;
      }
      return comparison;
    }
    function getShapeDataKey(graphicalItem, activeItem) {
      var shapeKey;
      if (isFunnel(graphicalItem, activeItem)) {
        shapeKey = "trapezoids";
      } else if (isPie(graphicalItem, activeItem)) {
        shapeKey = "sectors";
      } else if (isScatter(graphicalItem, activeItem)) {
        shapeKey = "points";
      }
      return shapeKey;
    }
    function getActiveShapeTooltipPayload(graphicalItem, activeItem) {
      if (isFunnel(graphicalItem, activeItem)) {
        var _activeItem$tooltipPa;
        return (_activeItem$tooltipPa = activeItem.tooltipPayload) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa[0]) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa.payload) === null || _activeItem$tooltipPa === void 0 ? void 0 : _activeItem$tooltipPa.payload;
      }
      if (isPie(graphicalItem, activeItem)) {
        var _activeItem$tooltipPa2;
        return (_activeItem$tooltipPa2 = activeItem.tooltipPayload) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2[0]) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2.payload) === null || _activeItem$tooltipPa2 === void 0 ? void 0 : _activeItem$tooltipPa2.payload;
      }
      if (isScatter(graphicalItem, activeItem)) {
        return activeItem.payload;
      }
      return {};
    }
    function getActiveShapeIndexForTooltip(_ref3) {
      var activeTooltipItem = _ref3.activeTooltipItem, graphicalItem = _ref3.graphicalItem, itemData = _ref3.itemData;
      var shapeKey = getShapeDataKey(graphicalItem, activeTooltipItem);
      var tooltipPayload = getActiveShapeTooltipPayload(graphicalItem, activeTooltipItem);
      var activeItemMatches = itemData.filter(function(datum, dataIndex) {
        var valuesMatch = (0, _isEqual["default"])(tooltipPayload, datum);
        var mouseCoordinateMatches = graphicalItem.props[shapeKey].filter(function(shapeData) {
          var comparison = getComparisonFn(graphicalItem, activeTooltipItem);
          return comparison(shapeData, activeTooltipItem);
        });
        var indexOfMouseCoordinates = graphicalItem.props[shapeKey].indexOf(mouseCoordinateMatches[mouseCoordinateMatches.length - 1]);
        var coordinatesMatch = dataIndex === indexOfMouseCoordinates;
        return valuesMatch && coordinatesMatch;
      });
      var activeIndex = itemData.indexOf(activeItemMatches[activeItemMatches.length - 1]);
      return activeIndex;
    }
  }
});

// node_modules/recharts/lib/polar/Pie.js
var require_Pie = __commonJS({
  "node_modules/recharts/lib/polar/Pie.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Pie = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _get = _interopRequireDefault(require_get());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _Curve = require_Curve();
    var _Text = require_Text();
    var _Label = require_Label();
    var _LabelList = require_LabelList();
    var _Cell = require_Cell();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _PolarUtils = require_PolarUtils();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _LogUtils = require_LogUtils();
    var _types = require_types();
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    var _Pie;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Pie = exports.Pie = function(_PureComponent) {
      function Pie2(props) {
        var _this;
        _classCallCheck(this, Pie2);
        _this = _callSuper(this, Pie2, [props]);
        _defineProperty(_this, "pieRef", null);
        _defineProperty(_this, "sectorRefs", []);
        _defineProperty(_this, "id", (0, _DataUtils.uniqueId)("recharts-pie-"));
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        _this.state = {
          isAnimationFinished: !props.isAnimationActive,
          prevIsAnimationActive: props.isAnimationActive,
          prevAnimationId: props.animationId,
          sectorToFocus: 0
        };
        return _this;
      }
      _inherits(Pie2, _PureComponent);
      return _createClass(Pie2, [{
        key: "isActiveIndex",
        value: function isActiveIndex(i) {
          var activeIndex = this.props.activeIndex;
          if (Array.isArray(activeIndex)) {
            return activeIndex.indexOf(i) !== -1;
          }
          return i === activeIndex;
        }
      }, {
        key: "hasActiveIndex",
        value: function hasActiveIndex() {
          var activeIndex = this.props.activeIndex;
          return Array.isArray(activeIndex) ? activeIndex.length !== 0 : activeIndex || activeIndex === 0;
        }
      }, {
        key: "renderLabels",
        value: function renderLabels(sectors) {
          var isAnimationActive = this.props.isAnimationActive;
          if (isAnimationActive && !this.state.isAnimationFinished) {
            return null;
          }
          var _this$props = this.props, label = _this$props.label, labelLine = _this$props.labelLine, dataKey = _this$props.dataKey, valueKey = _this$props.valueKey;
          var pieProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customLabelProps = (0, _ReactUtils.filterProps)(label, false);
          var customLabelLineProps = (0, _ReactUtils.filterProps)(labelLine, false);
          var offsetRadius = label && label.offsetRadius || 20;
          var labels = sectors.map(function(entry, i) {
            var midAngle = (entry.startAngle + entry.endAngle) / 2;
            var endPoint = (0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius + offsetRadius, midAngle);
            var labelProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, pieProps), entry), {}, {
              stroke: "none"
            }, customLabelProps), {}, {
              index: i,
              textAnchor: Pie2.getTextAnchor(endPoint.x, entry.cx)
            }, endPoint);
            var lineProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, pieProps), entry), {}, {
              fill: "none",
              stroke: entry.fill
            }, customLabelLineProps), {}, {
              index: i,
              points: [(0, _PolarUtils.polarToCartesian)(entry.cx, entry.cy, entry.outerRadius, midAngle), endPoint]
            });
            var realDataKey = dataKey;
            if ((0, _isNil["default"])(dataKey) && (0, _isNil["default"])(valueKey)) {
              realDataKey = "value";
            } else if ((0, _isNil["default"])(dataKey)) {
              realDataKey = valueKey;
            }
            return (
              // eslint-disable-next-line react/no-array-index-key
              _react["default"].createElement(_Layer.Layer, {
                key: "label-".concat(entry.startAngle, "-").concat(entry.endAngle, "-").concat(entry.midAngle, "-").concat(i)
              }, labelLine && Pie2.renderLabelLineItem(labelLine, lineProps, "line"), Pie2.renderLabelItem(label, labelProps, (0, _ChartUtils.getValueByDataKey)(entry, realDataKey)))
            );
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-pie-labels"
          }, labels);
        }
      }, {
        key: "renderSectorsStatically",
        value: function renderSectorsStatically(sectors) {
          var _this2 = this;
          var _this$props2 = this.props, activeShape = _this$props2.activeShape, blendStroke = _this$props2.blendStroke, inactiveShapeProp = _this$props2.inactiveShape;
          return sectors.map(function(entry, i) {
            if ((entry === null || entry === void 0 ? void 0 : entry.startAngle) === 0 && (entry === null || entry === void 0 ? void 0 : entry.endAngle) === 0 && sectors.length !== 1) return null;
            var isActive = _this2.isActiveIndex(i);
            var inactiveShape = inactiveShapeProp && _this2.hasActiveIndex() ? inactiveShapeProp : null;
            var sectorOptions = isActive ? activeShape : inactiveShape;
            var sectorProps = _objectSpread(_objectSpread({}, entry), {}, {
              stroke: blendStroke ? entry.fill : entry.stroke,
              tabIndex: -1
            });
            return _react["default"].createElement(_Layer.Layer, _extends({
              ref: function ref(_ref) {
                if (_ref && !_this2.sectorRefs.includes(_ref)) {
                  _this2.sectorRefs.push(_ref);
                }
              },
              tabIndex: -1,
              className: "recharts-pie-sector"
            }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
              // eslint-disable-next-line react/no-array-index-key
              key: "sector-".concat(entry === null || entry === void 0 ? void 0 : entry.startAngle, "-").concat(entry === null || entry === void 0 ? void 0 : entry.endAngle, "-").concat(entry.midAngle, "-").concat(i)
            }), _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
              option: sectorOptions,
              isActive,
              shapeType: "sector"
            }, sectorProps)));
          });
        }
      }, {
        key: "renderSectorsWithAnimation",
        value: function renderSectorsWithAnimation() {
          var _this3 = this;
          var _this$props3 = this.props, sectors = _this$props3.sectors, isAnimationActive = _this$props3.isAnimationActive, animationBegin = _this$props3.animationBegin, animationDuration = _this$props3.animationDuration, animationEasing = _this$props3.animationEasing, animationId = _this$props3.animationId;
          var _this$state = this.state, prevSectors = _this$state.prevSectors, prevIsAnimationActive = _this$state.prevIsAnimationActive;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "pie-".concat(animationId, "-").concat(prevIsAnimationActive),
            onAnimationStart: this.handleAnimationStart,
            onAnimationEnd: this.handleAnimationEnd
          }, function(_ref2) {
            var t = _ref2.t;
            var stepData = [];
            var first = sectors && sectors[0];
            var curAngle = first.startAngle;
            sectors.forEach(function(entry, index) {
              var prev = prevSectors && prevSectors[index];
              var paddingAngle = index > 0 ? (0, _get["default"])(entry, "paddingAngle", 0) : 0;
              if (prev) {
                var angleIp = (0, _DataUtils.interpolateNumber)(prev.endAngle - prev.startAngle, entry.endAngle - entry.startAngle);
                var latest = _objectSpread(_objectSpread({}, entry), {}, {
                  startAngle: curAngle + paddingAngle,
                  endAngle: curAngle + angleIp(t) + paddingAngle
                });
                stepData.push(latest);
                curAngle = latest.endAngle;
              } else {
                var endAngle = entry.endAngle, startAngle = entry.startAngle;
                var interpolatorAngle = (0, _DataUtils.interpolateNumber)(0, endAngle - startAngle);
                var deltaAngle = interpolatorAngle(t);
                var _latest = _objectSpread(_objectSpread({}, entry), {}, {
                  startAngle: curAngle + paddingAngle,
                  endAngle: curAngle + deltaAngle + paddingAngle
                });
                stepData.push(_latest);
                curAngle = _latest.endAngle;
              }
            });
            return _react["default"].createElement(_Layer.Layer, null, _this3.renderSectorsStatically(stepData));
          });
        }
      }, {
        key: "attachKeyboardHandlers",
        value: function attachKeyboardHandlers(pieRef) {
          var _this4 = this;
          pieRef.onkeydown = function(e) {
            if (!e.altKey) {
              switch (e.key) {
                case "ArrowLeft": {
                  var next = ++_this4.state.sectorToFocus % _this4.sectorRefs.length;
                  _this4.sectorRefs[next].focus();
                  _this4.setState({
                    sectorToFocus: next
                  });
                  break;
                }
                case "ArrowRight": {
                  var _next = --_this4.state.sectorToFocus < 0 ? _this4.sectorRefs.length - 1 : _this4.state.sectorToFocus % _this4.sectorRefs.length;
                  _this4.sectorRefs[_next].focus();
                  _this4.setState({
                    sectorToFocus: _next
                  });
                  break;
                }
                case "Escape": {
                  _this4.sectorRefs[_this4.state.sectorToFocus].blur();
                  _this4.setState({
                    sectorToFocus: 0
                  });
                  break;
                }
                default: {
                }
              }
            }
          };
        }
      }, {
        key: "renderSectors",
        value: function renderSectors() {
          var _this$props4 = this.props, sectors = _this$props4.sectors, isAnimationActive = _this$props4.isAnimationActive;
          var prevSectors = this.state.prevSectors;
          if (isAnimationActive && sectors && sectors.length && (!prevSectors || !(0, _isEqual["default"])(prevSectors, sectors))) {
            return this.renderSectorsWithAnimation();
          }
          return this.renderSectorsStatically(sectors);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if (this.pieRef) {
            this.attachKeyboardHandlers(this.pieRef);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this5 = this;
          var _this$props5 = this.props, hide = _this$props5.hide, sectors = _this$props5.sectors, className = _this$props5.className, label = _this$props5.label, cx = _this$props5.cx, cy = _this$props5.cy, innerRadius = _this$props5.innerRadius, outerRadius = _this$props5.outerRadius, isAnimationActive = _this$props5.isAnimationActive;
          var isAnimationFinished = this.state.isAnimationFinished;
          if (hide || !sectors || !sectors.length || !(0, _DataUtils.isNumber)(cx) || !(0, _DataUtils.isNumber)(cy) || !(0, _DataUtils.isNumber)(innerRadius) || !(0, _DataUtils.isNumber)(outerRadius)) {
            return null;
          }
          var layerClass = (0, _clsx["default"])("recharts-pie", className);
          return _react["default"].createElement(_Layer.Layer, {
            tabIndex: this.props.rootTabIndex,
            className: layerClass,
            ref: function ref(_ref3) {
              _this5.pieRef = _ref3;
            }
          }, this.renderSectors(), label && this.renderLabels(sectors), _Label.Label.renderCallByParent(this.props, null, false), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, sectors, false));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (prevState.prevIsAnimationActive !== nextProps.isAnimationActive) {
            return {
              prevIsAnimationActive: nextProps.isAnimationActive,
              prevAnimationId: nextProps.animationId,
              curSectors: nextProps.sectors,
              prevSectors: [],
              isAnimationFinished: true
            };
          }
          if (nextProps.isAnimationActive && nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curSectors: nextProps.sectors,
              prevSectors: prevState.curSectors,
              isAnimationFinished: true
            };
          }
          if (nextProps.sectors !== prevState.curSectors) {
            return {
              curSectors: nextProps.sectors,
              isAnimationFinished: true
            };
          }
          return null;
        }
      }, {
        key: "getTextAnchor",
        value: function getTextAnchor(x, cx) {
          if (x > cx) {
            return "start";
          }
          if (x < cx) {
            return "end";
          }
          return "middle";
        }
      }, {
        key: "renderLabelLineItem",
        value: function renderLabelLineItem(option, props, key) {
          if (_react["default"].isValidElement(option)) {
            return _react["default"].cloneElement(option, props);
          }
          if ((0, _isFunction["default"])(option)) {
            return option(props);
          }
          var className = (0, _clsx["default"])("recharts-pie-label-line", typeof option !== "boolean" ? option.className : "");
          return _react["default"].createElement(_Curve.Curve, _extends({}, props, {
            key,
            type: "linear",
            className
          }));
        }
      }, {
        key: "renderLabelItem",
        value: function renderLabelItem(option, props, value) {
          if (_react["default"].isValidElement(option)) {
            return _react["default"].cloneElement(option, props);
          }
          var label = value;
          if ((0, _isFunction["default"])(option)) {
            label = option(props);
            if (_react["default"].isValidElement(label)) {
              return label;
            }
          }
          var className = (0, _clsx["default"])("recharts-pie-label-text", typeof option !== "boolean" && !(0, _isFunction["default"])(option) ? option.className : "");
          return _react["default"].createElement(_Text.Text, _extends({}, props, {
            alignmentBaseline: "middle",
            className
          }), label);
        }
      }]);
    }(_react.PureComponent);
    _Pie = Pie;
    _defineProperty(Pie, "displayName", "Pie");
    _defineProperty(Pie, "defaultProps", {
      stroke: "#fff",
      fill: "#808080",
      legendType: "rect",
      cx: "50%",
      cy: "50%",
      startAngle: 0,
      endAngle: 360,
      innerRadius: 0,
      outerRadius: "80%",
      paddingAngle: 0,
      labelLine: true,
      hide: false,
      minAngle: 0,
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 400,
      animationDuration: 1500,
      animationEasing: "ease",
      nameKey: "name",
      blendStroke: false,
      rootTabIndex: 0
    });
    _defineProperty(Pie, "parseDeltaAngle", function(startAngle, endAngle) {
      var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);
      var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
      return sign * deltaAngle;
    });
    _defineProperty(Pie, "getRealPieData", function(itemProps) {
      var data = itemProps.data, children = itemProps.children;
      var presentationProps = (0, _ReactUtils.filterProps)(itemProps, false);
      var cells = (0, _ReactUtils.findAllByType)(children, _Cell.Cell);
      if (data && data.length) {
        return data.map(function(entry, index) {
          return _objectSpread(_objectSpread(_objectSpread({
            payload: entry
          }, presentationProps), entry), cells && cells[index] && cells[index].props);
        });
      }
      if (cells && cells.length) {
        return cells.map(function(cell) {
          return _objectSpread(_objectSpread({}, presentationProps), cell.props);
        });
      }
      return [];
    });
    _defineProperty(Pie, "parseCoordinateOfPie", function(itemProps, offset) {
      var top = offset.top, left = offset.left, width = offset.width, height = offset.height;
      var maxPieRadius = (0, _PolarUtils.getMaxRadius)(width, height);
      var cx = left + (0, _DataUtils.getPercentValue)(itemProps.cx, width, width / 2);
      var cy = top + (0, _DataUtils.getPercentValue)(itemProps.cy, height, height / 2);
      var innerRadius = (0, _DataUtils.getPercentValue)(itemProps.innerRadius, maxPieRadius, 0);
      var outerRadius = (0, _DataUtils.getPercentValue)(itemProps.outerRadius, maxPieRadius, maxPieRadius * 0.8);
      var maxRadius = itemProps.maxRadius || Math.sqrt(width * width + height * height) / 2;
      return {
        cx,
        cy,
        innerRadius,
        outerRadius,
        maxRadius
      };
    });
    _defineProperty(Pie, "getComposedData", function(_ref4) {
      var item = _ref4.item, offset = _ref4.offset;
      var itemProps = item.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
      var pieData = _Pie.getRealPieData(itemProps);
      if (!pieData || !pieData.length) {
        return null;
      }
      var cornerRadius = itemProps.cornerRadius, startAngle = itemProps.startAngle, endAngle = itemProps.endAngle, paddingAngle = itemProps.paddingAngle, dataKey = itemProps.dataKey, nameKey = itemProps.nameKey, valueKey = itemProps.valueKey, tooltipType = itemProps.tooltipType;
      var minAngle = Math.abs(itemProps.minAngle);
      var coordinate = _Pie.parseCoordinateOfPie(itemProps, offset);
      var deltaAngle = _Pie.parseDeltaAngle(startAngle, endAngle);
      var absDeltaAngle = Math.abs(deltaAngle);
      var realDataKey = dataKey;
      if ((0, _isNil["default"])(dataKey) && (0, _isNil["default"])(valueKey)) {
        (0, _LogUtils.warn)(false, 'Use "dataKey" to specify the value of pie,\n      the props "valueKey" will be deprecated in 1.1.0');
        realDataKey = "value";
      } else if ((0, _isNil["default"])(dataKey)) {
        (0, _LogUtils.warn)(false, 'Use "dataKey" to specify the value of pie,\n      the props "valueKey" will be deprecated in 1.1.0');
        realDataKey = valueKey;
      }
      var notZeroItemCount = pieData.filter(function(entry) {
        return (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0) !== 0;
      }).length;
      var totalPadingAngle = (absDeltaAngle >= 360 ? notZeroItemCount : notZeroItemCount - 1) * paddingAngle;
      var realTotalAngle = absDeltaAngle - notZeroItemCount * minAngle - totalPadingAngle;
      var sum = pieData.reduce(function(result, entry) {
        var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);
        return result + ((0, _DataUtils.isNumber)(val) ? val : 0);
      }, 0);
      var sectors;
      if (sum > 0) {
        var prev;
        sectors = pieData.map(function(entry, i) {
          var val = (0, _ChartUtils.getValueByDataKey)(entry, realDataKey, 0);
          var name = (0, _ChartUtils.getValueByDataKey)(entry, nameKey, i);
          var percent = ((0, _DataUtils.isNumber)(val) ? val : 0) / sum;
          var tempStartAngle;
          if (i) {
            tempStartAngle = prev.endAngle + (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle * (val !== 0 ? 1 : 0);
          } else {
            tempStartAngle = startAngle;
          }
          var tempEndAngle = tempStartAngle + (0, _DataUtils.mathSign)(deltaAngle) * ((val !== 0 ? minAngle : 0) + percent * realTotalAngle);
          var midAngle = (tempStartAngle + tempEndAngle) / 2;
          var middleRadius = (coordinate.innerRadius + coordinate.outerRadius) / 2;
          var tooltipPayload = [{
            name,
            value: val,
            payload: entry,
            dataKey: realDataKey,
            type: tooltipType
          }];
          var tooltipPosition = (0, _PolarUtils.polarToCartesian)(coordinate.cx, coordinate.cy, middleRadius, midAngle);
          prev = _objectSpread(_objectSpread(_objectSpread({
            percent,
            cornerRadius,
            name,
            tooltipPayload,
            midAngle,
            middleRadius,
            tooltipPosition
          }, entry), coordinate), {}, {
            value: (0, _ChartUtils.getValueByDataKey)(entry, realDataKey),
            startAngle: tempStartAngle,
            endAngle: tempEndAngle,
            payload: entry,
            paddingAngle: (0, _DataUtils.mathSign)(deltaAngle) * paddingAngle
          });
          return prev;
        });
      }
      return _objectSpread(_objectSpread({}, coordinate), {}, {
        sectors,
        data: pieData
      });
    });
  }
});

// node_modules/lodash/head.js
var require_head = __commonJS({
  "node_modules/lodash/head.js"(exports, module) {
    function head(array) {
      return array && array.length ? array[0] : void 0;
    }
    module.exports = head;
  }
});

// node_modules/lodash/first.js
var require_first = __commonJS({
  "node_modules/lodash/first.js"(exports, module) {
    module.exports = require_head();
  }
});

// node_modules/recharts/lib/polar/Radar.js
var require_Radar = __commonJS({
  "node_modules/recharts/lib/polar/Radar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Radar = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isNil = _interopRequireDefault(require_isNil());
    var _last = _interopRequireDefault(require_last());
    var _first = _interopRequireDefault(require_first());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _DataUtils = require_DataUtils();
    var _Global = require_Global();
    var _PolarUtils = require_PolarUtils();
    var _ChartUtils = require_ChartUtils();
    var _Polygon = require_Polygon();
    var _Dot = require_Dot();
    var _Layer = require_Layer();
    var _LabelList = require_LabelList();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["key"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Radar = exports.Radar = function(_PureComponent) {
      function Radar2() {
        var _this;
        _classCallCheck(this, Radar2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Radar2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: false
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        _defineProperty(_this, "handleMouseEnter", function(e) {
          var onMouseEnter = _this.props.onMouseEnter;
          if (onMouseEnter) {
            onMouseEnter(_this.props, e);
          }
        });
        _defineProperty(_this, "handleMouseLeave", function(e) {
          var onMouseLeave = _this.props.onMouseLeave;
          if (onMouseLeave) {
            onMouseLeave(_this.props, e);
          }
        });
        return _this;
      }
      _inherits(Radar2, _PureComponent);
      return _createClass(Radar2, [{
        key: "renderDots",
        value: function renderDots(points) {
          var _this$props = this.props, dot = _this$props.dot, dataKey = _this$props.dataKey;
          var baseProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customDotProps = (0, _ReactUtils.filterProps)(dot, true);
          var dots = points.map(function(entry, i) {
            var dotProps = _objectSpread(_objectSpread(_objectSpread({
              key: "dot-".concat(i),
              r: 3
            }, baseProps), customDotProps), {}, {
              dataKey,
              cx: entry.x,
              cy: entry.y,
              index: i,
              payload: entry
            });
            return Radar2.renderDotItem(dot, dotProps);
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-radar-dots"
          }, dots);
        }
      }, {
        key: "renderPolygonStatically",
        value: function renderPolygonStatically(points) {
          var _this$props2 = this.props, shape = _this$props2.shape, dot = _this$props2.dot, isRange = _this$props2.isRange, baseLinePoints = _this$props2.baseLinePoints, connectNulls = _this$props2.connectNulls;
          var radar;
          if (_react["default"].isValidElement(shape)) {
            radar = _react["default"].cloneElement(shape, _objectSpread(_objectSpread({}, this.props), {}, {
              points
            }));
          } else if ((0, _isFunction["default"])(shape)) {
            radar = shape(_objectSpread(_objectSpread({}, this.props), {}, {
              points
            }));
          } else {
            radar = _react["default"].createElement(_Polygon.Polygon, _extends({}, (0, _ReactUtils.filterProps)(this.props, true), {
              onMouseEnter: this.handleMouseEnter,
              onMouseLeave: this.handleMouseLeave,
              points,
              baseLinePoints: isRange ? baseLinePoints : null,
              connectNulls
            }));
          }
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-radar-polygon"
          }, radar, dot ? this.renderDots(points) : null);
        }
      }, {
        key: "renderPolygonWithAnimation",
        value: function renderPolygonWithAnimation() {
          var _this2 = this;
          var _this$props3 = this.props, points = _this$props3.points, isAnimationActive = _this$props3.isAnimationActive, animationBegin = _this$props3.animationBegin, animationDuration = _this$props3.animationDuration, animationEasing = _this$props3.animationEasing, animationId = _this$props3.animationId;
          var prevPoints = this.state.prevPoints;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "radar-".concat(animationId),
            onAnimationEnd: this.handleAnimationEnd,
            onAnimationStart: this.handleAnimationStart
          }, function(_ref) {
            var t = _ref.t;
            var prevPointsDiffFactor = prevPoints && prevPoints.length / points.length;
            var stepData = points.map(function(entry, index) {
              var prev = prevPoints && prevPoints[Math.floor(index * prevPointsDiffFactor)];
              if (prev) {
                var _interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                var _interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  x: _interpolatorX(t),
                  y: _interpolatorY(t)
                });
              }
              var interpolatorX = (0, _DataUtils.interpolateNumber)(entry.cx, entry.x);
              var interpolatorY = (0, _DataUtils.interpolateNumber)(entry.cy, entry.y);
              return _objectSpread(_objectSpread({}, entry), {}, {
                x: interpolatorX(t),
                y: interpolatorY(t)
              });
            });
            return _this2.renderPolygonStatically(stepData);
          });
        }
      }, {
        key: "renderPolygon",
        value: function renderPolygon() {
          var _this$props4 = this.props, points = _this$props4.points, isAnimationActive = _this$props4.isAnimationActive, isRange = _this$props4.isRange;
          var prevPoints = this.state.prevPoints;
          if (isAnimationActive && points && points.length && !isRange && (!prevPoints || !(0, _isEqual["default"])(prevPoints, points))) {
            return this.renderPolygonWithAnimation();
          }
          return this.renderPolygonStatically(points);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props5 = this.props, hide = _this$props5.hide, className = _this$props5.className, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;
          if (hide || !points || !points.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var layerClass = (0, _clsx["default"])("recharts-radar", className);
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, this.renderPolygon(), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, points));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curPoints: nextProps.points,
              prevPoints: prevState.curPoints
            };
          }
          if (nextProps.points !== prevState.curPoints) {
            return {
              curPoints: nextProps.points
            };
          }
          return null;
        }
      }, {
        key: "renderDotItem",
        value: function renderDotItem(option, props) {
          var dotItem;
          if (_react["default"].isValidElement(option)) {
            dotItem = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            dotItem = option(props);
          } else {
            var key = props.key, dotProps = _objectWithoutProperties(props, _excluded);
            dotItem = _react["default"].createElement(_Dot.Dot, _extends({}, dotProps, {
              key,
              className: (0, _clsx["default"])("recharts-radar-dot", typeof option !== "boolean" ? option.className : "")
            }));
          }
          return dotItem;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Radar, "displayName", "Radar");
    _defineProperty(Radar, "defaultProps", {
      angleAxisId: 0,
      radiusAxisId: 0,
      hide: false,
      activeDot: true,
      dot: false,
      legendType: "rect",
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease"
    });
    _defineProperty(Radar, "getComposedData", function(_ref2) {
      var radiusAxis = _ref2.radiusAxis, angleAxis = _ref2.angleAxis, displayedData = _ref2.displayedData, dataKey = _ref2.dataKey, bandSize = _ref2.bandSize;
      var cx = angleAxis.cx, cy = angleAxis.cy;
      var isRange = false;
      var points = [];
      var angleBandSize = angleAxis.type !== "number" ? bandSize !== null && bandSize !== void 0 ? bandSize : 0 : 0;
      displayedData.forEach(function(entry, i) {
        var name = (0, _ChartUtils.getValueByDataKey)(entry, angleAxis.dataKey, i);
        var value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);
        var angle = angleAxis.scale(name) + angleBandSize;
        var pointValue = Array.isArray(value) ? (0, _last["default"])(value) : value;
        var radius = (0, _isNil["default"])(pointValue) ? void 0 : radiusAxis.scale(pointValue);
        if (Array.isArray(value) && value.length >= 2) {
          isRange = true;
        }
        points.push(_objectSpread(_objectSpread({}, (0, _PolarUtils.polarToCartesian)(cx, cy, radius, angle)), {}, {
          name,
          value,
          cx,
          cy,
          radius,
          angle,
          payload: entry
        }));
      });
      var baseLinePoints = [];
      if (isRange) {
        points.forEach(function(point) {
          if (Array.isArray(point.value)) {
            var baseValue = (0, _first["default"])(point.value);
            var radius = (0, _isNil["default"])(baseValue) ? void 0 : radiusAxis.scale(baseValue);
            baseLinePoints.push(_objectSpread(_objectSpread({}, point), {}, {
              radius
            }, (0, _PolarUtils.polarToCartesian)(cx, cy, radius, point.angle)));
          } else {
            baseLinePoints.push(point);
          }
        });
      }
      return {
        points,
        isRange,
        baseLinePoints
      };
    });
  }
});

// node_modules/recharts/lib/util/RadialBarUtils.js
var require_RadialBarUtils = __commonJS({
  "node_modules/recharts/lib/util/RadialBarUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RadialBarSector = RadialBarSector;
    exports.parseCornerRadius = parseCornerRadius;
    exports.typeGuardSectorProps = typeGuardSectorProps;
    var _react = _interopRequireDefault(require_react());
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function parseCornerRadius(cornerRadius) {
      if (typeof cornerRadius === "string") {
        return parseInt(cornerRadius, 10);
      }
      return cornerRadius;
    }
    function typeGuardSectorProps(option, props) {
      var cxValue = "".concat(props.cx || option.cx);
      var cx = Number(cxValue);
      var cyValue = "".concat(props.cy || option.cy);
      var cy = Number(cyValue);
      return _objectSpread(_objectSpread(_objectSpread({}, props), option), {}, {
        cx,
        cy
      });
    }
    function RadialBarSector(props) {
      return _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
        shapeType: "sector",
        propTransformer: typeGuardSectorProps
      }, props));
    }
  }
});

// node_modules/recharts/lib/polar/RadialBar.js
var require_RadialBar = __commonJS({
  "node_modules/recharts/lib/polar/RadialBar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RadialBar = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _RadialBarUtils = require_RadialBarUtils();
    var _Layer = require_Layer();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _LabelList = require_LabelList();
    var _Cell = require_Cell();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _types = require_types();
    var _PolarUtils = require_PolarUtils();
    var _excluded = ["shape", "activeShape", "activeIndex", "cornerRadius"];
    var _excluded2 = ["value", "background"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var RadialBar = exports.RadialBar = function(_PureComponent) {
      function RadialBar2() {
        var _this;
        _classCallCheck(this, RadialBar2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, RadialBar2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: false
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(RadialBar2, _PureComponent);
      return _createClass(RadialBar2, [{
        key: "getDeltaAngle",
        value: function getDeltaAngle() {
          var _this$props = this.props, startAngle = _this$props.startAngle, endAngle = _this$props.endAngle;
          var sign = (0, _DataUtils.mathSign)(endAngle - startAngle);
          var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);
          return sign * deltaAngle;
        }
      }, {
        key: "renderSectorsStatically",
        value: function renderSectorsStatically(sectors) {
          var _this2 = this;
          var _this$props2 = this.props, shape = _this$props2.shape, activeShape = _this$props2.activeShape, activeIndex = _this$props2.activeIndex, cornerRadius = _this$props2.cornerRadius, others = _objectWithoutProperties(_this$props2, _excluded);
          var baseProps = (0, _ReactUtils.filterProps)(others, false);
          return sectors.map(function(entry, i) {
            var isActive = i === activeIndex;
            var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, baseProps), {}, {
              cornerRadius: (0, _RadialBarUtils.parseCornerRadius)(cornerRadius)
            }, entry), (0, _types.adaptEventsOfChild)(_this2.props, entry, i)), {}, {
              className: "recharts-radial-bar-sector ".concat(entry.className),
              forceCornerRadius: others.forceCornerRadius,
              cornerIsExternal: others.cornerIsExternal,
              isActive,
              option: isActive ? activeShape : shape
            });
            return _react["default"].createElement(_RadialBarUtils.RadialBarSector, _extends({}, props, {
              key: "sector-".concat(i)
            }));
          });
        }
      }, {
        key: "renderSectorsWithAnimation",
        value: function renderSectorsWithAnimation() {
          var _this3 = this;
          var _this$props3 = this.props, data = _this$props3.data, isAnimationActive = _this$props3.isAnimationActive, animationBegin = _this$props3.animationBegin, animationDuration = _this$props3.animationDuration, animationEasing = _this$props3.animationEasing, animationId = _this$props3.animationId;
          var prevData = this.state.prevData;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "radialBar-".concat(animationId),
            onAnimationStart: this.handleAnimationStart,
            onAnimationEnd: this.handleAnimationEnd
          }, function(_ref) {
            var t = _ref.t;
            var stepData = data.map(function(entry, index) {
              var prev = prevData && prevData[index];
              if (prev) {
                var interpolatorStartAngle = (0, _DataUtils.interpolateNumber)(prev.startAngle, entry.startAngle);
                var interpolatorEndAngle = (0, _DataUtils.interpolateNumber)(prev.endAngle, entry.endAngle);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  startAngle: interpolatorStartAngle(t),
                  endAngle: interpolatorEndAngle(t)
                });
              }
              var endAngle = entry.endAngle, startAngle = entry.startAngle;
              var interpolator = (0, _DataUtils.interpolateNumber)(startAngle, endAngle);
              return _objectSpread(_objectSpread({}, entry), {}, {
                endAngle: interpolator(t)
              });
            });
            return _react["default"].createElement(_Layer.Layer, null, _this3.renderSectorsStatically(stepData));
          });
        }
      }, {
        key: "renderSectors",
        value: function renderSectors() {
          var _this$props4 = this.props, data = _this$props4.data, isAnimationActive = _this$props4.isAnimationActive;
          var prevData = this.state.prevData;
          if (isAnimationActive && data && data.length && (!prevData || !(0, _isEqual["default"])(prevData, data))) {
            return this.renderSectorsWithAnimation();
          }
          return this.renderSectorsStatically(data);
        }
      }, {
        key: "renderBackground",
        value: function renderBackground(sectors) {
          var _this4 = this;
          var cornerRadius = this.props.cornerRadius;
          var backgroundProps = (0, _ReactUtils.filterProps)(this.props.background, false);
          return sectors.map(function(entry, i) {
            var value = entry.value, background = entry.background, rest = _objectWithoutProperties(entry, _excluded2);
            if (!background) {
              return null;
            }
            var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
              cornerRadius: (0, _RadialBarUtils.parseCornerRadius)(cornerRadius)
            }, rest), {}, {
              fill: "#eee"
            }, background), backgroundProps), (0, _types.adaptEventsOfChild)(_this4.props, entry, i)), {}, {
              index: i,
              className: (0, _clsx["default"])("recharts-radial-bar-background-sector", backgroundProps === null || backgroundProps === void 0 ? void 0 : backgroundProps.className),
              option: background,
              isActive: false
            });
            return _react["default"].createElement(_RadialBarUtils.RadialBarSector, _extends({}, props, {
              key: "sector-".concat(i)
            }));
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props5 = this.props, hide = _this$props5.hide, data = _this$props5.data, className = _this$props5.className, background = _this$props5.background, isAnimationActive = _this$props5.isAnimationActive;
          if (hide || !data || !data.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var layerClass = (0, _clsx["default"])("recharts-area", className);
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, background && _react["default"].createElement(_Layer.Layer, {
            className: "recharts-radial-bar-background"
          }, this.renderBackground(data)), _react["default"].createElement(_Layer.Layer, {
            className: "recharts-radial-bar-sectors"
          }, this.renderSectors()), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(_objectSpread({}, this.props), data));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curData: nextProps.data,
              prevData: prevState.curData
            };
          }
          if (nextProps.data !== prevState.curData) {
            return {
              curData: nextProps.data
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(RadialBar, "displayName", "RadialBar");
    _defineProperty(RadialBar, "defaultProps", {
      angleAxisId: 0,
      radiusAxisId: 0,
      minPointSize: 0,
      hide: false,
      legendType: "rect",
      data: [],
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease",
      forceCornerRadius: false,
      cornerIsExternal: false
    });
    _defineProperty(RadialBar, "getComposedData", function(_ref2) {
      var item = _ref2.item, props = _ref2.props, radiusAxis = _ref2.radiusAxis, radiusAxisTicks = _ref2.radiusAxisTicks, angleAxis = _ref2.angleAxis, angleAxisTicks = _ref2.angleAxisTicks, displayedData = _ref2.displayedData, dataKey = _ref2.dataKey, stackedData = _ref2.stackedData, barPosition = _ref2.barPosition, bandSize = _ref2.bandSize, dataStartIndex = _ref2.dataStartIndex;
      var pos = (0, _ChartUtils.findPositionOfBar)(barPosition, item);
      if (!pos) {
        return null;
      }
      var cx = angleAxis.cx, cy = angleAxis.cy;
      var layout = props.layout;
      var _item$props = item.props, children = _item$props.children, minPointSize = _item$props.minPointSize;
      var numericAxis = layout === "radial" ? angleAxis : radiusAxis;
      var stackedDomain = stackedData ? numericAxis.scale.domain() : null;
      var baseValue = (0, _ChartUtils.getBaseValueOfBar)({
        numericAxis
      });
      var cells = (0, _ReactUtils.findAllByType)(children, _Cell.Cell);
      var sectors = displayedData.map(function(entry, index) {
        var value, innerRadius, outerRadius, startAngle, endAngle, backgroundSector;
        if (stackedData) {
          value = (0, _ChartUtils.truncateByDomain)(stackedData[dataStartIndex + index], stackedDomain);
        } else {
          value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);
          if (!Array.isArray(value)) {
            value = [baseValue, value];
          }
        }
        if (layout === "radial") {
          innerRadius = (0, _ChartUtils.getCateCoordinateOfBar)({
            axis: radiusAxis,
            ticks: radiusAxisTicks,
            bandSize,
            offset: pos.offset,
            entry,
            index
          });
          endAngle = angleAxis.scale(value[1]);
          startAngle = angleAxis.scale(value[0]);
          outerRadius = innerRadius + pos.size;
          var deltaAngle = endAngle - startAngle;
          if (Math.abs(minPointSize) > 0 && Math.abs(deltaAngle) < Math.abs(minPointSize)) {
            var delta = (0, _DataUtils.mathSign)(deltaAngle || minPointSize) * (Math.abs(minPointSize) - Math.abs(deltaAngle));
            endAngle += delta;
          }
          backgroundSector = {
            background: {
              cx,
              cy,
              innerRadius,
              outerRadius,
              startAngle: props.startAngle,
              endAngle: props.endAngle
            }
          };
        } else {
          innerRadius = radiusAxis.scale(value[0]);
          outerRadius = radiusAxis.scale(value[1]);
          startAngle = (0, _ChartUtils.getCateCoordinateOfBar)({
            axis: angleAxis,
            ticks: angleAxisTicks,
            bandSize,
            offset: pos.offset,
            entry,
            index
          });
          endAngle = startAngle + pos.size;
          var deltaRadius = outerRadius - innerRadius;
          if (Math.abs(minPointSize) > 0 && Math.abs(deltaRadius) < Math.abs(minPointSize)) {
            var _delta = (0, _DataUtils.mathSign)(deltaRadius || minPointSize) * (Math.abs(minPointSize) - Math.abs(deltaRadius));
            outerRadius += _delta;
          }
        }
        return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, entry), backgroundSector), {}, {
          payload: entry,
          value: stackedData ? value : value[1],
          cx,
          cy,
          innerRadius,
          outerRadius,
          startAngle,
          endAngle
        }, cells && cells[index] && cells[index].props), {}, {
          tooltipPayload: [(0, _ChartUtils.getTooltipItem)(item, entry)],
          tooltipPosition: (0, _PolarUtils.polarToCartesian)(cx, cy, (innerRadius + outerRadius) / 2, (startAngle + endAngle) / 2)
        });
      });
      return {
        data: sectors,
        layout
      };
    });
  }
});

// node_modules/lodash/_baseRange.js
var require_baseRange = __commonJS({
  "node_modules/lodash/_baseRange.js"(exports, module) {
    var nativeCeil = Math.ceil;
    var nativeMax = Math.max;
    function baseRange(start, end, step, fromRight) {
      var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length);
      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }
    module.exports = baseRange;
  }
});

// node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "node_modules/lodash/toFinite.js"(exports, module) {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  }
});

// node_modules/lodash/_createRange.js
var require_createRange = __commonJS({
  "node_modules/lodash/_createRange.js"(exports, module) {
    var baseRange = require_baseRange();
    var isIterateeCall = require_isIterateeCall();
    var toFinite = require_toFinite();
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
          end = step = void 0;
        }
        start = toFinite(start);
        if (end === void 0) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === void 0 ? start < end ? 1 : -1 : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }
    module.exports = createRange;
  }
});

// node_modules/lodash/range.js
var require_range2 = __commonJS({
  "node_modules/lodash/range.js"(exports, module) {
    var createRange = require_createRange();
    var range = createRange();
    module.exports = range;
  }
});

// node_modules/recharts/lib/util/CssPrefixUtils.js
var require_CssPrefixUtils = __commonJS({
  "node_modules/recharts/lib/util/CssPrefixUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.generatePrefixStyle = void 0;
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var PREFIX_LIST = ["Webkit", "Moz", "O", "ms"];
    var generatePrefixStyle = exports.generatePrefixStyle = function generatePrefixStyle2(name, value) {
      if (!name) {
        return null;
      }
      var camelName = name.replace(/(\w)/, function(v) {
        return v.toUpperCase();
      });
      var result = PREFIX_LIST.reduce(function(res, entry) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, entry + camelName, value));
      }, {});
      result[name] = value;
      return result;
    };
  }
});

// node_modules/recharts/lib/cartesian/Brush.js
var require_Brush = __commonJS({
  "node_modules/recharts/lib/cartesian/Brush.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Brush = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _d3Scale = require_d3_scale();
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _range = _interopRequireDefault(require_range2());
    var _Layer = require_Layer();
    var _Text = require_Text();
    var _ChartUtils = require_ChartUtils();
    var _DataUtils = require_DataUtils();
    var _CssPrefixUtils = require_CssPrefixUtils();
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var createScale = function createScale2(_ref) {
      var data = _ref.data, startIndex = _ref.startIndex, endIndex = _ref.endIndex, x = _ref.x, width = _ref.width, travellerWidth = _ref.travellerWidth;
      if (!data || !data.length) {
        return {};
      }
      var len = data.length;
      var scale = (0, _d3Scale.scalePoint)().domain((0, _range["default"])(0, len)).range([x, x + width - travellerWidth]);
      var scaleValues = scale.domain().map(function(entry) {
        return scale(entry);
      });
      return {
        isTextActive: false,
        isSlideMoving: false,
        isTravellerMoving: false,
        isTravellerFocused: false,
        startX: scale(startIndex),
        endX: scale(endIndex),
        scale,
        scaleValues
      };
    };
    var isTouch = function isTouch2(e) {
      return e.changedTouches && !!e.changedTouches.length;
    };
    var Brush = exports.Brush = function(_PureComponent) {
      function Brush2(props) {
        var _this;
        _classCallCheck(this, Brush2);
        _this = _callSuper(this, Brush2, [props]);
        _defineProperty(_this, "handleDrag", function(e) {
          if (_this.leaveTimer) {
            clearTimeout(_this.leaveTimer);
            _this.leaveTimer = null;
          }
          if (_this.state.isTravellerMoving) {
            _this.handleTravellerMove(e);
          } else if (_this.state.isSlideMoving) {
            _this.handleSlideDrag(e);
          }
        });
        _defineProperty(_this, "handleTouchMove", function(e) {
          if (e.changedTouches != null && e.changedTouches.length > 0) {
            _this.handleDrag(e.changedTouches[0]);
          }
        });
        _defineProperty(_this, "handleDragEnd", function() {
          _this.setState({
            isTravellerMoving: false,
            isSlideMoving: false
          }, function() {
            var _this$props = _this.props, endIndex = _this$props.endIndex, onDragEnd = _this$props.onDragEnd, startIndex = _this$props.startIndex;
            onDragEnd === null || onDragEnd === void 0 || onDragEnd({
              endIndex,
              startIndex
            });
          });
          _this.detachDragEndListener();
        });
        _defineProperty(_this, "handleLeaveWrapper", function() {
          if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {
            _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);
          }
        });
        _defineProperty(_this, "handleEnterSlideOrTraveller", function() {
          _this.setState({
            isTextActive: true
          });
        });
        _defineProperty(_this, "handleLeaveSlideOrTraveller", function() {
          _this.setState({
            isTextActive: false
          });
        });
        _defineProperty(_this, "handleSlideDragStart", function(e) {
          var event = isTouch(e) ? e.changedTouches[0] : e;
          _this.setState({
            isTravellerMoving: false,
            isSlideMoving: true,
            slideMoveStartX: event.pageX
          });
          _this.attachDragEndListener();
        });
        _this.travellerDragStartHandlers = {
          startX: _this.handleTravellerDragStart.bind(_this, "startX"),
          endX: _this.handleTravellerDragStart.bind(_this, "endX")
        };
        _this.state = {};
        return _this;
      }
      _inherits(Brush2, _PureComponent);
      return _createClass(Brush2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.leaveTimer) {
            clearTimeout(this.leaveTimer);
            this.leaveTimer = null;
          }
          this.detachDragEndListener();
        }
      }, {
        key: "getIndex",
        value: function getIndex(_ref2) {
          var startX = _ref2.startX, endX = _ref2.endX;
          var scaleValues = this.state.scaleValues;
          var _this$props2 = this.props, gap = _this$props2.gap, data = _this$props2.data;
          var lastIndex = data.length - 1;
          var min = Math.min(startX, endX);
          var max = Math.max(startX, endX);
          var minIndex = Brush2.getIndexInRange(scaleValues, min);
          var maxIndex = Brush2.getIndexInRange(scaleValues, max);
          return {
            startIndex: minIndex - minIndex % gap,
            endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap
          };
        }
      }, {
        key: "getTextOfTick",
        value: function getTextOfTick(index) {
          var _this$props3 = this.props, data = _this$props3.data, tickFormatter = _this$props3.tickFormatter, dataKey = _this$props3.dataKey;
          var text = (0, _ChartUtils.getValueByDataKey)(data[index], dataKey, index);
          return (0, _isFunction["default"])(tickFormatter) ? tickFormatter(text, index) : text;
        }
      }, {
        key: "attachDragEndListener",
        value: function attachDragEndListener() {
          window.addEventListener("mouseup", this.handleDragEnd, true);
          window.addEventListener("touchend", this.handleDragEnd, true);
          window.addEventListener("mousemove", this.handleDrag, true);
        }
      }, {
        key: "detachDragEndListener",
        value: function detachDragEndListener() {
          window.removeEventListener("mouseup", this.handleDragEnd, true);
          window.removeEventListener("touchend", this.handleDragEnd, true);
          window.removeEventListener("mousemove", this.handleDrag, true);
        }
      }, {
        key: "handleSlideDrag",
        value: function handleSlideDrag(e) {
          var _this$state = this.state, slideMoveStartX = _this$state.slideMoveStartX, startX = _this$state.startX, endX = _this$state.endX;
          var _this$props4 = this.props, x = _this$props4.x, width = _this$props4.width, travellerWidth = _this$props4.travellerWidth, startIndex = _this$props4.startIndex, endIndex = _this$props4.endIndex, onChange = _this$props4.onChange;
          var delta = e.pageX - slideMoveStartX;
          if (delta > 0) {
            delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);
          } else if (delta < 0) {
            delta = Math.max(delta, x - startX, x - endX);
          }
          var newIndex = this.getIndex({
            startX: startX + delta,
            endX: endX + delta
          });
          if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {
            onChange(newIndex);
          }
          this.setState({
            startX: startX + delta,
            endX: endX + delta,
            slideMoveStartX: e.pageX
          });
        }
      }, {
        key: "handleTravellerDragStart",
        value: function handleTravellerDragStart(id, e) {
          var event = isTouch(e) ? e.changedTouches[0] : e;
          this.setState({
            isSlideMoving: false,
            isTravellerMoving: true,
            movingTravellerId: id,
            brushMoveStartX: event.pageX
          });
          this.attachDragEndListener();
        }
      }, {
        key: "handleTravellerMove",
        value: function handleTravellerMove(e) {
          var _this$state2 = this.state, brushMoveStartX = _this$state2.brushMoveStartX, movingTravellerId = _this$state2.movingTravellerId, endX = _this$state2.endX, startX = _this$state2.startX;
          var prevValue = this.state[movingTravellerId];
          var _this$props5 = this.props, x = _this$props5.x, width = _this$props5.width, travellerWidth = _this$props5.travellerWidth, onChange = _this$props5.onChange, gap = _this$props5.gap, data = _this$props5.data;
          var params = {
            startX: this.state.startX,
            endX: this.state.endX
          };
          var delta = e.pageX - brushMoveStartX;
          if (delta > 0) {
            delta = Math.min(delta, x + width - travellerWidth - prevValue);
          } else if (delta < 0) {
            delta = Math.max(delta, x - prevValue);
          }
          params[movingTravellerId] = prevValue + delta;
          var newIndex = this.getIndex(params);
          var startIndex = newIndex.startIndex, endIndex = newIndex.endIndex;
          var isFullGap = function isFullGap2() {
            var lastIndex = data.length - 1;
            if (movingTravellerId === "startX" && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === "endX" && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) {
              return true;
            }
            return false;
          };
          this.setState(_defineProperty(_defineProperty({}, movingTravellerId, prevValue + delta), "brushMoveStartX", e.pageX), function() {
            if (onChange) {
              if (isFullGap()) {
                onChange(newIndex);
              }
            }
          });
        }
      }, {
        key: "handleTravellerMoveKeyboard",
        value: function handleTravellerMoveKeyboard(direction, id) {
          var _this2 = this;
          var _this$state3 = this.state, scaleValues = _this$state3.scaleValues, startX = _this$state3.startX, endX = _this$state3.endX;
          var currentScaleValue = this.state[id];
          var currentIndex = scaleValues.indexOf(currentScaleValue);
          if (currentIndex === -1) {
            return;
          }
          var newIndex = currentIndex + direction;
          if (newIndex === -1 || newIndex >= scaleValues.length) {
            return;
          }
          var newScaleValue = scaleValues[newIndex];
          if (id === "startX" && newScaleValue >= endX || id === "endX" && newScaleValue <= startX) {
            return;
          }
          this.setState(_defineProperty({}, id, newScaleValue), function() {
            _this2.props.onChange(_this2.getIndex({
              startX: _this2.state.startX,
              endX: _this2.state.endX
            }));
          });
        }
      }, {
        key: "renderBackground",
        value: function renderBackground() {
          var _this$props6 = this.props, x = _this$props6.x, y = _this$props6.y, width = _this$props6.width, height = _this$props6.height, fill = _this$props6.fill, stroke = _this$props6.stroke;
          return _react["default"].createElement("rect", {
            stroke,
            fill,
            x,
            y,
            width,
            height
          });
        }
      }, {
        key: "renderPanorama",
        value: function renderPanorama() {
          var _this$props7 = this.props, x = _this$props7.x, y = _this$props7.y, width = _this$props7.width, height = _this$props7.height, data = _this$props7.data, children = _this$props7.children, padding = _this$props7.padding;
          var chartElement = _react.Children.only(children);
          if (!chartElement) {
            return null;
          }
          return _react["default"].cloneElement(chartElement, {
            x,
            y,
            width,
            height,
            margin: padding,
            compact: true,
            data
          });
        }
      }, {
        key: "renderTravellerLayer",
        value: function renderTravellerLayer(travellerX, id) {
          var _data$startIndex, _data$endIndex, _this3 = this;
          var _this$props8 = this.props, y = _this$props8.y, travellerWidth = _this$props8.travellerWidth, height = _this$props8.height, traveller = _this$props8.traveller, ariaLabel = _this$props8.ariaLabel, data = _this$props8.data, startIndex = _this$props8.startIndex, endIndex = _this$props8.endIndex;
          var x = Math.max(travellerX, this.props.x);
          var travellerProps = _objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(this.props, false)), {}, {
            x,
            y,
            width: travellerWidth,
            height
          });
          var ariaLabelBrush = ariaLabel || "Min value: ".concat((_data$startIndex = data[startIndex]) === null || _data$startIndex === void 0 ? void 0 : _data$startIndex.name, ", Max value: ").concat((_data$endIndex = data[endIndex]) === null || _data$endIndex === void 0 ? void 0 : _data$endIndex.name);
          return _react["default"].createElement(_Layer.Layer, {
            tabIndex: 0,
            role: "slider",
            "aria-label": ariaLabelBrush,
            "aria-valuenow": travellerX,
            className: "recharts-brush-traveller",
            onMouseEnter: this.handleEnterSlideOrTraveller,
            onMouseLeave: this.handleLeaveSlideOrTraveller,
            onMouseDown: this.travellerDragStartHandlers[id],
            onTouchStart: this.travellerDragStartHandlers[id],
            onKeyDown: function onKeyDown(e) {
              if (!["ArrowLeft", "ArrowRight"].includes(e.key)) {
                return;
              }
              e.preventDefault();
              e.stopPropagation();
              _this3.handleTravellerMoveKeyboard(e.key === "ArrowRight" ? 1 : -1, id);
            },
            onFocus: function onFocus() {
              _this3.setState({
                isTravellerFocused: true
              });
            },
            onBlur: function onBlur() {
              _this3.setState({
                isTravellerFocused: false
              });
            },
            style: {
              cursor: "col-resize"
            }
          }, Brush2.renderTraveller(traveller, travellerProps));
        }
      }, {
        key: "renderSlide",
        value: function renderSlide(startX, endX) {
          var _this$props9 = this.props, y = _this$props9.y, height = _this$props9.height, stroke = _this$props9.stroke, travellerWidth = _this$props9.travellerWidth;
          var x = Math.min(startX, endX) + travellerWidth;
          var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);
          return _react["default"].createElement("rect", {
            className: "recharts-brush-slide",
            onMouseEnter: this.handleEnterSlideOrTraveller,
            onMouseLeave: this.handleLeaveSlideOrTraveller,
            onMouseDown: this.handleSlideDragStart,
            onTouchStart: this.handleSlideDragStart,
            style: {
              cursor: "move"
            },
            stroke: "none",
            fill: stroke,
            fillOpacity: 0.2,
            x,
            y,
            width,
            height
          });
        }
      }, {
        key: "renderText",
        value: function renderText() {
          var _this$props10 = this.props, startIndex = _this$props10.startIndex, endIndex = _this$props10.endIndex, y = _this$props10.y, height = _this$props10.height, travellerWidth = _this$props10.travellerWidth, stroke = _this$props10.stroke;
          var _this$state4 = this.state, startX = _this$state4.startX, endX = _this$state4.endX;
          var offset = 5;
          var attrs = {
            pointerEvents: "none",
            fill: stroke
          };
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-brush-texts"
          }, _react["default"].createElement(_Text.Text, _extends({
            textAnchor: "end",
            verticalAnchor: "middle",
            x: Math.min(startX, endX) - offset,
            y: y + height / 2
          }, attrs), this.getTextOfTick(startIndex)), _react["default"].createElement(_Text.Text, _extends({
            textAnchor: "start",
            verticalAnchor: "middle",
            x: Math.max(startX, endX) + travellerWidth + offset,
            y: y + height / 2
          }, attrs), this.getTextOfTick(endIndex)));
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props11 = this.props, data = _this$props11.data, className = _this$props11.className, children = _this$props11.children, x = _this$props11.x, y = _this$props11.y, width = _this$props11.width, height = _this$props11.height, alwaysShowText = _this$props11.alwaysShowText;
          var _this$state5 = this.state, startX = _this$state5.startX, endX = _this$state5.endX, isTextActive = _this$state5.isTextActive, isSlideMoving = _this$state5.isSlideMoving, isTravellerMoving = _this$state5.isTravellerMoving, isTravellerFocused = _this$state5.isTravellerFocused;
          if (!data || !data.length || !(0, _DataUtils.isNumber)(x) || !(0, _DataUtils.isNumber)(y) || !(0, _DataUtils.isNumber)(width) || !(0, _DataUtils.isNumber)(height) || width <= 0 || height <= 0) {
            return null;
          }
          var layerClass = (0, _clsx["default"])("recharts-brush", className);
          var isPanoramic = _react["default"].Children.count(children) === 1;
          var style = (0, _CssPrefixUtils.generatePrefixStyle)("userSelect", "none");
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass,
            onMouseLeave: this.handleLeaveWrapper,
            onTouchMove: this.handleTouchMove,
            style
          }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, "startX"), this.renderTravellerLayer(endX, "endX"), (isTextActive || isSlideMoving || isTravellerMoving || isTravellerFocused || alwaysShowText) && this.renderText());
        }
      }], [{
        key: "renderDefaultTraveller",
        value: function renderDefaultTraveller(props) {
          var x = props.x, y = props.y, width = props.width, height = props.height, stroke = props.stroke;
          var lineY = Math.floor(y + height / 2) - 1;
          return _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement("rect", {
            x,
            y,
            width,
            height,
            fill: stroke,
            stroke: "none"
          }), _react["default"].createElement("line", {
            x1: x + 1,
            y1: lineY,
            x2: x + width - 1,
            y2: lineY,
            fill: "none",
            stroke: "#fff"
          }), _react["default"].createElement("line", {
            x1: x + 1,
            y1: lineY + 2,
            x2: x + width - 1,
            y2: lineY + 2,
            fill: "none",
            stroke: "#fff"
          }));
        }
      }, {
        key: "renderTraveller",
        value: function renderTraveller(option, props) {
          var rectangle;
          if (_react["default"].isValidElement(option)) {
            rectangle = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            rectangle = option(props);
          } else {
            rectangle = Brush2.renderDefaultTraveller(props);
          }
          return rectangle;
        }
      }, {
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var data = nextProps.data, width = nextProps.width, x = nextProps.x, travellerWidth = nextProps.travellerWidth, updateId = nextProps.updateId, startIndex = nextProps.startIndex, endIndex = nextProps.endIndex;
          if (data !== prevState.prevData || updateId !== prevState.prevUpdateId) {
            return _objectSpread({
              prevData: data,
              prevTravellerWidth: travellerWidth,
              prevUpdateId: updateId,
              prevX: x,
              prevWidth: width
            }, data && data.length ? createScale({
              data,
              width,
              x,
              travellerWidth,
              startIndex,
              endIndex
            }) : {
              scale: null,
              scaleValues: null
            });
          }
          if (prevState.scale && (width !== prevState.prevWidth || x !== prevState.prevX || travellerWidth !== prevState.prevTravellerWidth)) {
            prevState.scale.range([x, x + width - travellerWidth]);
            var scaleValues = prevState.scale.domain().map(function(entry) {
              return prevState.scale(entry);
            });
            return {
              prevData: data,
              prevTravellerWidth: travellerWidth,
              prevUpdateId: updateId,
              prevX: x,
              prevWidth: width,
              startX: prevState.scale(nextProps.startIndex),
              endX: prevState.scale(nextProps.endIndex),
              scaleValues
            };
          }
          return null;
        }
      }, {
        key: "getIndexInRange",
        value: function getIndexInRange(valueRange, x) {
          var len = valueRange.length;
          var start = 0;
          var end = len - 1;
          while (end - start > 1) {
            var middle = Math.floor((start + end) / 2);
            if (valueRange[middle] > x) {
              end = middle;
            } else {
              start = middle;
            }
          }
          return x >= valueRange[end] ? end : start;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Brush, "displayName", "Brush");
    _defineProperty(Brush, "defaultProps", {
      height: 40,
      travellerWidth: 5,
      gap: 1,
      fill: "#fff",
      stroke: "#666",
      padding: {
        top: 1,
        right: 1,
        bottom: 1,
        left: 1
      },
      leaveTimeOut: 1e3,
      alwaysShowText: false
    });
  }
});

// node_modules/lodash/_baseSome.js
var require_baseSome = __commonJS({
  "node_modules/lodash/_baseSome.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseSome(collection, predicate) {
      var result;
      baseEach(collection, function(value, index, collection2) {
        result = predicate(value, index, collection2);
        return !result;
      });
      return !!result;
    }
    module.exports = baseSome;
  }
});

// node_modules/lodash/some.js
var require_some2 = __commonJS({
  "node_modules/lodash/some.js"(exports, module) {
    var arraySome = require_arraySome();
    var baseIteratee = require_baseIteratee();
    var baseSome = require_baseSome();
    var isArray = require_isArray();
    var isIterateeCall = require_isIterateeCall();
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = void 0;
      }
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = some;
  }
});

// node_modules/recharts/lib/util/IfOverflowMatches.js
var require_IfOverflowMatches = __commonJS({
  "node_modules/recharts/lib/util/IfOverflowMatches.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ifOverflowMatches = void 0;
    var ifOverflowMatches = exports.ifOverflowMatches = function ifOverflowMatches2(props, value) {
      var alwaysShow = props.alwaysShow;
      var ifOverflow = props.ifOverflow;
      if (alwaysShow) {
        ifOverflow = "extendDomain";
      }
      return ifOverflow === value;
    };
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/mapValues.js
var require_mapValues = __commonJS({
  "node_modules/lodash/mapValues.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var baseForOwn = require_baseForOwn();
    var baseIteratee = require_baseIteratee();
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = baseIteratee(iteratee, 3);
      baseForOwn(object, function(value, key, object2) {
        baseAssignValue(result, key, iteratee(value, key, object2));
      });
      return result;
    }
    module.exports = mapValues;
  }
});

// node_modules/lodash/_arrayEvery.js
var require_arrayEvery = __commonJS({
  "node_modules/lodash/_arrayEvery.js"(exports, module) {
    function arrayEvery(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }
    module.exports = arrayEvery;
  }
});

// node_modules/lodash/_baseEvery.js
var require_baseEvery = __commonJS({
  "node_modules/lodash/_baseEvery.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection2) {
        result = !!predicate(value, index, collection2);
        return result;
      });
      return result;
    }
    module.exports = baseEvery;
  }
});

// node_modules/lodash/every.js
var require_every2 = __commonJS({
  "node_modules/lodash/every.js"(exports, module) {
    var arrayEvery = require_arrayEvery();
    var baseEvery = require_baseEvery();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    var isIterateeCall = require_isIterateeCall();
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = void 0;
      }
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = every;
  }
});

// node_modules/recharts/lib/util/BarUtils.js
var require_BarUtils = __commonJS({
  "node_modules/recharts/lib/util/BarUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.BarRectangle = BarRectangle;
    exports.minPointSizeCallback = void 0;
    var _react = _interopRequireDefault(require_react());
    var _tinyInvariant = _interopRequireDefault(require_tiny_invariant_cjs());
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    var _excluded = ["x", "y"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function typeguardBarRectangleProps(_ref, props) {
      var xProp = _ref.x, yProp = _ref.y, option = _objectWithoutProperties(_ref, _excluded);
      var xValue = "".concat(xProp);
      var x = parseInt(xValue, 10);
      var yValue = "".concat(yProp);
      var y = parseInt(yValue, 10);
      var heightValue = "".concat(props.height || option.height);
      var height = parseInt(heightValue, 10);
      var widthValue = "".concat(props.width || option.width);
      var width = parseInt(widthValue, 10);
      return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props), option), x ? {
        x
      } : {}), y ? {
        y
      } : {}), {}, {
        height,
        width,
        name: props.name,
        radius: props.radius
      });
    }
    function BarRectangle(props) {
      return _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
        shapeType: "rectangle",
        propTransformer: typeguardBarRectangleProps,
        activeClassName: "recharts-active-bar"
      }, props));
    }
    var minPointSizeCallback = exports.minPointSizeCallback = function minPointSizeCallback2(minPointSize) {
      var defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      return function(value, index) {
        if (typeof minPointSize === "number") return minPointSize;
        var isValueNumber = typeof value === "number";
        if (isValueNumber) {
          return minPointSize(value, index);
        }
        !isValueNumber ? true ? (0, _tinyInvariant["default"])(false, "minPointSize callback function received a value with type of ".concat(_typeof(value), ". Currently only numbers are supported.")) : (0, _tinyInvariant["default"])(false) : void 0;
        return defaultValue;
      };
    };
  }
});

// node_modules/recharts/lib/cartesian/Bar.js
var require_Bar = __commonJS({
  "node_modules/recharts/lib/cartesian/Bar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Bar = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _isNil = _interopRequireDefault(require_isNil());
    var _Layer = require_Layer();
    var _ErrorBar = require_ErrorBar();
    var _Cell = require_Cell();
    var _LabelList = require_LabelList();
    var _DataUtils = require_DataUtils();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _ChartUtils = require_ChartUtils();
    var _types = require_types();
    var _BarUtils = require_BarUtils();
    var _excluded = ["value", "background"];
    var _Bar;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Bar = exports.Bar = function(_PureComponent) {
      function Bar2() {
        var _this;
        _classCallCheck(this, Bar2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Bar2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: false
        });
        _defineProperty(_this, "id", (0, _DataUtils.uniqueId)("recharts-bar-"));
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if (onAnimationEnd) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if (onAnimationStart) {
            onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(Bar2, _PureComponent);
      return _createClass(Bar2, [{
        key: "renderRectanglesStatically",
        value: function renderRectanglesStatically(data) {
          var _this2 = this;
          var _this$props = this.props, shape = _this$props.shape, dataKey = _this$props.dataKey, activeIndex = _this$props.activeIndex, activeBar = _this$props.activeBar;
          var baseProps = (0, _ReactUtils.filterProps)(this.props, false);
          return data && data.map(function(entry, i) {
            var isActive = i === activeIndex;
            var option = isActive ? activeBar : shape;
            var props = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {
              isActive,
              option,
              index: i,
              dataKey,
              onAnimationStart: _this2.handleAnimationStart,
              onAnimationEnd: _this2.handleAnimationEnd
            });
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: "recharts-bar-rectangle"
            }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
              key: "rectangle-".concat(entry === null || entry === void 0 ? void 0 : entry.x, "-").concat(entry === null || entry === void 0 ? void 0 : entry.y, "-").concat(entry === null || entry === void 0 ? void 0 : entry.value)
            }), _react["default"].createElement(_BarUtils.BarRectangle, props));
          });
        }
      }, {
        key: "renderRectanglesWithAnimation",
        value: function renderRectanglesWithAnimation() {
          var _this3 = this;
          var _this$props2 = this.props, data = _this$props2.data, layout = _this$props2.layout, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;
          var prevData = this.state.prevData;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "bar-".concat(animationId),
            onAnimationEnd: this.handleAnimationEnd,
            onAnimationStart: this.handleAnimationStart
          }, function(_ref) {
            var t = _ref.t;
            var stepData = data.map(function(entry, index) {
              var prev = prevData && prevData[index];
              if (prev) {
                var interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                var interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                var interpolatorWidth = (0, _DataUtils.interpolateNumber)(prev.width, entry.width);
                var interpolatorHeight = (0, _DataUtils.interpolateNumber)(prev.height, entry.height);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  x: interpolatorX(t),
                  y: interpolatorY(t),
                  width: interpolatorWidth(t),
                  height: interpolatorHeight(t)
                });
              }
              if (layout === "horizontal") {
                var _interpolatorHeight = (0, _DataUtils.interpolateNumber)(0, entry.height);
                var h = _interpolatorHeight(t);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  y: entry.y + entry.height - h,
                  height: h
                });
              }
              var interpolator = (0, _DataUtils.interpolateNumber)(0, entry.width);
              var w = interpolator(t);
              return _objectSpread(_objectSpread({}, entry), {}, {
                width: w
              });
            });
            return _react["default"].createElement(_Layer.Layer, null, _this3.renderRectanglesStatically(stepData));
          });
        }
      }, {
        key: "renderRectangles",
        value: function renderRectangles() {
          var _this$props3 = this.props, data = _this$props3.data, isAnimationActive = _this$props3.isAnimationActive;
          var prevData = this.state.prevData;
          if (isAnimationActive && data && data.length && (!prevData || !(0, _isEqual["default"])(prevData, data))) {
            return this.renderRectanglesWithAnimation();
          }
          return this.renderRectanglesStatically(data);
        }
      }, {
        key: "renderBackground",
        value: function renderBackground() {
          var _this4 = this;
          var _this$props4 = this.props, data = _this$props4.data, dataKey = _this$props4.dataKey, activeIndex = _this$props4.activeIndex;
          var backgroundProps = (0, _ReactUtils.filterProps)(this.props.background, false);
          return data.map(function(entry, i) {
            var value = entry.value, background = entry.background, rest = _objectWithoutProperties(entry, _excluded);
            if (!background) {
              return null;
            }
            var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), {}, {
              fill: "#eee"
            }, background), backgroundProps), (0, _types.adaptEventsOfChild)(_this4.props, entry, i)), {}, {
              onAnimationStart: _this4.handleAnimationStart,
              onAnimationEnd: _this4.handleAnimationEnd,
              dataKey,
              index: i,
              className: "recharts-bar-background-rectangle"
            });
            return _react["default"].createElement(_BarUtils.BarRectangle, _extends({
              key: "background-bar-".concat(i),
              option: _this4.props.background,
              isActive: i === activeIndex
            }, props));
          });
        }
      }, {
        key: "renderErrorBar",
        value: function renderErrorBar(needClip, clipPathId) {
          if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
            return null;
          }
          var _this$props5 = this.props, data = _this$props5.data, xAxis = _this$props5.xAxis, yAxis = _this$props5.yAxis, layout = _this$props5.layout, children = _this$props5.children;
          var errorBarItems = (0, _ReactUtils.findAllByType)(children, _ErrorBar.ErrorBar);
          if (!errorBarItems) {
            return null;
          }
          var offset = layout === "vertical" ? data[0].height / 2 : data[0].width / 2;
          var dataPointFormatter = function dataPointFormatter2(dataPoint, dataKey) {
            var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;
            return {
              x: dataPoint.x,
              y: dataPoint.y,
              value,
              errorVal: (0, _ChartUtils.getValueByDataKey)(dataPoint, dataKey)
            };
          };
          var errorBarProps = {
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
          };
          return _react["default"].createElement(_Layer.Layer, errorBarProps, errorBarItems.map(function(item) {
            return _react["default"].cloneElement(item, {
              key: "error-bar-".concat(clipPathId, "-").concat(item.props.dataKey),
              data,
              xAxis,
              yAxis,
              layout,
              offset,
              dataPointFormatter
            });
          }));
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props6 = this.props, hide = _this$props6.hide, data = _this$props6.data, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, left = _this$props6.left, top = _this$props6.top, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, background = _this$props6.background, id = _this$props6.id;
          if (hide || !data || !data.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var layerClass = (0, _clsx["default"])("recharts-bar", className);
          var needClipX = xAxis && xAxis.allowDataOverflow;
          var needClipY = yAxis && yAxis.allowDataOverflow;
          var needClip = needClipX || needClipY;
          var clipPathId = (0, _isNil["default"])(id) ? this.id : id;
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, needClipX || needClipY ? _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
            id: "clipPath-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: needClipX ? left : left - width / 2,
            y: needClipY ? top : top - height / 2,
            width: needClipX ? width : width * 2,
            height: needClipY ? height : height * 2
          }))) : null, _react["default"].createElement(_Layer.Layer, {
            className: "recharts-bar-rectangles",
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
          }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, data));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curData: nextProps.data,
              prevData: prevState.curData
            };
          }
          if (nextProps.data !== prevState.curData) {
            return {
              curData: nextProps.data
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _Bar = Bar;
    _defineProperty(Bar, "displayName", "Bar");
    _defineProperty(Bar, "defaultProps", {
      xAxisId: 0,
      yAxisId: 0,
      legendType: "rect",
      minPointSize: 0,
      hide: false,
      data: [],
      layout: "vertical",
      activeBar: false,
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 400,
      animationEasing: "ease"
    });
    _defineProperty(Bar, "getComposedData", function(_ref2) {
      var props = _ref2.props, item = _ref2.item, barPosition = _ref2.barPosition, bandSize = _ref2.bandSize, xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, stackedData = _ref2.stackedData, dataStartIndex = _ref2.dataStartIndex, displayedData = _ref2.displayedData, offset = _ref2.offset;
      var pos = (0, _ChartUtils.findPositionOfBar)(barPosition, item);
      if (!pos) {
        return null;
      }
      var layout = props.layout;
      var itemDefaultProps = item.type.defaultProps;
      var itemProps = itemDefaultProps !== void 0 ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : item.props;
      var dataKey = itemProps.dataKey, children = itemProps.children, minPointSizeProp = itemProps.minPointSize;
      var numericAxis = layout === "horizontal" ? yAxis : xAxis;
      var stackedDomain = stackedData ? numericAxis.scale.domain() : null;
      var baseValue = (0, _ChartUtils.getBaseValueOfBar)({
        numericAxis
      });
      var cells = (0, _ReactUtils.findAllByType)(children, _Cell.Cell);
      var rects = displayedData.map(function(entry, index) {
        var value, x, y, width, height, background;
        if (stackedData) {
          value = (0, _ChartUtils.truncateByDomain)(stackedData[dataStartIndex + index], stackedDomain);
        } else {
          value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);
          if (!Array.isArray(value)) {
            value = [baseValue, value];
          }
        }
        var minPointSize = (0, _BarUtils.minPointSizeCallback)(minPointSizeProp, _Bar.defaultProps.minPointSize)(value[1], index);
        if (layout === "horizontal") {
          var _ref4;
          var _ref3 = [yAxis.scale(value[0]), yAxis.scale(value[1])], baseValueScale = _ref3[0], currentValueScale = _ref3[1];
          x = (0, _ChartUtils.getCateCoordinateOfBar)({
            axis: xAxis,
            ticks: xAxisTicks,
            bandSize,
            offset: pos.offset,
            entry,
            index
          });
          y = (_ref4 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref4 !== void 0 ? _ref4 : void 0;
          width = pos.size;
          var computedHeight = baseValueScale - currentValueScale;
          height = Number.isNaN(computedHeight) ? 0 : computedHeight;
          background = {
            x,
            y: yAxis.y,
            width,
            height: yAxis.height
          };
          if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {
            var delta = (0, _DataUtils.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));
            y -= delta;
            height += delta;
          }
        } else {
          var _ref5 = [xAxis.scale(value[0]), xAxis.scale(value[1])], _baseValueScale = _ref5[0], _currentValueScale = _ref5[1];
          x = _baseValueScale;
          y = (0, _ChartUtils.getCateCoordinateOfBar)({
            axis: yAxis,
            ticks: yAxisTicks,
            bandSize,
            offset: pos.offset,
            entry,
            index
          });
          width = _currentValueScale - _baseValueScale;
          height = pos.size;
          background = {
            x: xAxis.x,
            y,
            width: xAxis.width,
            height
          };
          if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {
            var _delta = (0, _DataUtils.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));
            width += _delta;
          }
        }
        return _objectSpread(_objectSpread(_objectSpread({}, entry), {}, {
          x,
          y,
          width,
          height,
          value: stackedData ? value : value[1],
          payload: entry,
          background
        }, cells && cells[index] && cells[index].props), {}, {
          tooltipPayload: [(0, _ChartUtils.getTooltipItem)(item, entry)],
          tooltipPosition: {
            x: x + width / 2,
            y: y + height / 2
          }
        });
      });
      return _objectSpread({
        data: rects,
        layout
      }, offset);
    });
  }
});

// node_modules/recharts/lib/util/CartesianUtils.js
var require_CartesianUtils = __commonJS({
  "node_modules/recharts/lib/util/CartesianUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getAngledRectangleWidth = exports.formatAxisMap = exports.createLabeledScales = exports.ScaleHelper = void 0;
    exports.normalizeAngle = normalizeAngle;
    exports.rectWithPoints = exports.rectWithCoords = void 0;
    var _mapValues = _interopRequireDefault(require_mapValues());
    var _every = _interopRequireDefault(require_every2());
    var _ChartUtils = require_ChartUtils();
    var _ReactUtils = require_ReactUtils();
    var _DataUtils = require_DataUtils();
    var _Bar = require_Bar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var formatAxisMap = exports.formatAxisMap = function formatAxisMap2(props, axisMap, offset, axisType, chartName) {
      var width = props.width, height = props.height, layout = props.layout, children = props.children;
      var ids = Object.keys(axisMap);
      var steps = {
        left: offset.left,
        leftMirror: offset.left,
        right: width - offset.right,
        rightMirror: width - offset.right,
        top: offset.top,
        topMirror: offset.top,
        bottom: height - offset.bottom,
        bottomMirror: height - offset.bottom
      };
      var hasBar = !!(0, _ReactUtils.findChildByType)(children, _Bar.Bar);
      return ids.reduce(function(result, id) {
        var axis = axisMap[id];
        var orientation = axis.orientation, domain = axis.domain, _axis$padding = axis.padding, padding = _axis$padding === void 0 ? {} : _axis$padding, mirror = axis.mirror, reversed = axis.reversed;
        var offsetKey = "".concat(orientation).concat(mirror ? "Mirror" : "");
        var calculatedPadding, range, x, y, needSpace;
        if (axis.type === "number" && (axis.padding === "gap" || axis.padding === "no-gap")) {
          var diff = domain[1] - domain[0];
          var smallestDistanceBetweenValues = Infinity;
          var sortedValues = axis.categoricalDomain.sort();
          sortedValues.forEach(function(value, index) {
            if (index > 0) {
              smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index - 1] || 0), smallestDistanceBetweenValues);
            }
          });
          if (Number.isFinite(smallestDistanceBetweenValues)) {
            var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;
            var rangeWidth = axis.layout === "vertical" ? offset.height : offset.width;
            if (axis.padding === "gap") {
              calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;
            }
            if (axis.padding === "no-gap") {
              var gap = (0, _DataUtils.getPercentValue)(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);
              var halfBand = smallestDistanceInPercent * rangeWidth / 2;
              calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;
            }
          }
        }
        if (axisType === "xAxis") {
          range = [offset.left + (padding.left || 0) + (calculatedPadding || 0), offset.left + offset.width - (padding.right || 0) - (calculatedPadding || 0)];
        } else if (axisType === "yAxis") {
          range = layout === "horizontal" ? [offset.top + offset.height - (padding.bottom || 0), offset.top + (padding.top || 0)] : [offset.top + (padding.top || 0) + (calculatedPadding || 0), offset.top + offset.height - (padding.bottom || 0) - (calculatedPadding || 0)];
        } else {
          range = axis.range;
        }
        if (reversed) {
          range = [range[1], range[0]];
        }
        var _parseScale = (0, _ChartUtils.parseScale)(axis, chartName, hasBar), scale = _parseScale.scale, realScaleType = _parseScale.realScaleType;
        scale.domain(domain).range(range);
        (0, _ChartUtils.checkDomainOfScale)(scale);
        var ticks = (0, _ChartUtils.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {
          realScaleType
        }));
        if (axisType === "xAxis") {
          needSpace = orientation === "top" && !mirror || orientation === "bottom" && mirror;
          x = offset.left;
          y = steps[offsetKey] - needSpace * axis.height;
        } else if (axisType === "yAxis") {
          needSpace = orientation === "left" && !mirror || orientation === "right" && mirror;
          x = steps[offsetKey] - needSpace * axis.width;
          y = offset.top;
        }
        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {
          realScaleType,
          x,
          y,
          scale,
          width: axisType === "xAxis" ? offset.width : axis.width,
          height: axisType === "yAxis" ? offset.height : axis.height
        });
        finalAxis.bandSize = (0, _ChartUtils.getBandSizeOfAxis)(finalAxis, ticks);
        if (!axis.hide && axisType === "xAxis") {
          steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;
        } else if (!axis.hide) {
          steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));
      }, {});
    };
    var rectWithPoints = exports.rectWithPoints = function rectWithPoints2(_ref, _ref2) {
      var x1 = _ref.x, y1 = _ref.y;
      var x2 = _ref2.x, y2 = _ref2.y;
      return {
        x: Math.min(x1, x2),
        y: Math.min(y1, y2),
        width: Math.abs(x2 - x1),
        height: Math.abs(y2 - y1)
      };
    };
    var rectWithCoords = exports.rectWithCoords = function rectWithCoords2(_ref3) {
      var x1 = _ref3.x1, y1 = _ref3.y1, x2 = _ref3.x2, y2 = _ref3.y2;
      return rectWithPoints({
        x: x1,
        y: y1
      }, {
        x: x2,
        y: y2
      });
    };
    var ScaleHelper = exports.ScaleHelper = function() {
      function ScaleHelper2(scale) {
        _classCallCheck(this, ScaleHelper2);
        this.scale = scale;
      }
      return _createClass(ScaleHelper2, [{
        key: "domain",
        get: function get() {
          return this.scale.domain;
        }
      }, {
        key: "range",
        get: function get() {
          return this.scale.range;
        }
      }, {
        key: "rangeMin",
        get: function get() {
          return this.range()[0];
        }
      }, {
        key: "rangeMax",
        get: function get() {
          return this.range()[1];
        }
      }, {
        key: "bandwidth",
        get: function get() {
          return this.scale.bandwidth;
        }
      }, {
        key: "apply",
        value: function apply(value) {
          var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref4.bandAware, position = _ref4.position;
          if (value === void 0) {
            return void 0;
          }
          if (position) {
            switch (position) {
              case "start": {
                return this.scale(value);
              }
              case "middle": {
                var offset = this.bandwidth ? this.bandwidth() / 2 : 0;
                return this.scale(value) + offset;
              }
              case "end": {
                var _offset = this.bandwidth ? this.bandwidth() : 0;
                return this.scale(value) + _offset;
              }
              default: {
                return this.scale(value);
              }
            }
          }
          if (bandAware) {
            var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;
            return this.scale(value) + _offset2;
          }
          return this.scale(value);
        }
      }, {
        key: "isInRange",
        value: function isInRange(value) {
          var range = this.range();
          var first = range[0];
          var last = range[range.length - 1];
          return first <= last ? value >= first && value <= last : value >= last && value <= first;
        }
      }], [{
        key: "create",
        value: function create(obj) {
          return new ScaleHelper2(obj);
        }
      }]);
    }();
    _defineProperty(ScaleHelper, "EPS", 1e-4);
    var createLabeledScales = exports.createLabeledScales = function createLabeledScales2(options) {
      var scales = Object.keys(options).reduce(function(res, key) {
        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, ScaleHelper.create(options[key])));
      }, {});
      return _objectSpread(_objectSpread({}, scales), {}, {
        apply: function apply(coord) {
          var _ref5 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, bandAware = _ref5.bandAware, position = _ref5.position;
          return (0, _mapValues["default"])(coord, function(value, label) {
            return scales[label].apply(value, {
              bandAware,
              position
            });
          });
        },
        isInRange: function isInRange(coord) {
          return (0, _every["default"])(coord, function(value, label) {
            return scales[label].isInRange(value);
          });
        }
      });
    };
    function normalizeAngle(angle) {
      return (angle % 180 + 180) % 180;
    }
    var getAngledRectangleWidth = exports.getAngledRectangleWidth = function getAngledRectangleWidth2(_ref6) {
      var width = _ref6.width, height = _ref6.height;
      var angle = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var normalizedAngle = normalizeAngle(angle);
      var angleRadians = normalizedAngle * Math.PI / 180;
      var angleThreshold = Math.atan(height / width);
      var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);
      return Math.abs(angledWidth);
    };
  }
});

// node_modules/lodash/_createFind.js
var require_createFind = __commonJS({
  "node_modules/lodash/_createFind.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var isArrayLike = require_isArrayLike();
    var keys = require_keys();
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = baseIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : void 0;
      };
    }
    module.exports = createFind;
  }
});

// node_modules/lodash/toInteger.js
var require_toInteger = __commonJS({
  "node_modules/lodash/toInteger.js"(exports, module) {
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger;
  }
});

// node_modules/lodash/findIndex.js
var require_findIndex = __commonJS({
  "node_modules/lodash/findIndex.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIteratee = require_baseIteratee();
    var toInteger = require_toInteger();
    var nativeMax = Math.max;
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, baseIteratee(predicate, 3), index);
    }
    module.exports = findIndex;
  }
});

// node_modules/lodash/find.js
var require_find = __commonJS({
  "node_modules/lodash/find.js"(exports, module) {
    var createFind = require_createFind();
    var findIndex = require_findIndex();
    var find = createFind(findIndex);
    module.exports = find;
  }
});

// node_modules/recharts/lib/util/calculateViewBox.js
var require_calculateViewBox = __commonJS({
  "node_modules/recharts/lib/util/calculateViewBox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.calculateViewBox = void 0;
    var _memoize = _interopRequireDefault(require_memoize());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var calculateViewBox = exports.calculateViewBox = (0, _memoize["default"])(function(offset) {
      return {
        x: offset.left,
        y: offset.top,
        width: offset.width,
        height: offset.height
      };
    }, function(offset) {
      return ["l", offset.left, "t", offset.top, "w", offset.width, "h", offset.height].join("");
    });
  }
});

// node_modules/recharts/lib/context/chartLayoutContext.js
var require_chartLayoutContext = __commonJS({
  "node_modules/recharts/lib/context/chartLayoutContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.useYAxisWithFiniteDomainOrRandom = exports.useYAxisOrThrow = exports.useXAxisOrThrow = exports.useViewBox = exports.useOffset = exports.useClipPathId = exports.useChartWidth = exports.useChartHeight = exports.useArbitraryYAxis = exports.useArbitraryXAxis = exports.YAxisContext = exports.XAxisContext = exports.ViewBoxContext = exports.OffsetContext = exports.ClipPathIdContext = exports.ChartWidthContext = exports.ChartLayoutContextProvider = exports.ChartHeightContext = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _tinyInvariant = _interopRequireDefault(require_tiny_invariant_cjs());
    var _find = _interopRequireDefault(require_find());
    var _every = _interopRequireDefault(require_every2());
    var _calculateViewBox = require_calculateViewBox();
    var _DataUtils = require_DataUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    var XAxisContext = exports.XAxisContext = (0, _react.createContext)(void 0);
    var YAxisContext = exports.YAxisContext = (0, _react.createContext)(void 0);
    var ViewBoxContext = exports.ViewBoxContext = (0, _react.createContext)(void 0);
    var OffsetContext = exports.OffsetContext = (0, _react.createContext)({});
    var ClipPathIdContext = exports.ClipPathIdContext = (0, _react.createContext)(void 0);
    var ChartHeightContext = exports.ChartHeightContext = (0, _react.createContext)(0);
    var ChartWidthContext = exports.ChartWidthContext = (0, _react.createContext)(0);
    var ChartLayoutContextProvider = exports.ChartLayoutContextProvider = function ChartLayoutContextProvider2(props) {
      var _props$state = props.state, xAxisMap = _props$state.xAxisMap, yAxisMap = _props$state.yAxisMap, offset = _props$state.offset, clipPathId = props.clipPathId, children = props.children, width = props.width, height = props.height;
      var viewBox = (0, _calculateViewBox.calculateViewBox)(offset);
      return _react["default"].createElement(XAxisContext.Provider, {
        value: xAxisMap
      }, _react["default"].createElement(YAxisContext.Provider, {
        value: yAxisMap
      }, _react["default"].createElement(OffsetContext.Provider, {
        value: offset
      }, _react["default"].createElement(ViewBoxContext.Provider, {
        value: viewBox
      }, _react["default"].createElement(ClipPathIdContext.Provider, {
        value: clipPathId
      }, _react["default"].createElement(ChartHeightContext.Provider, {
        value: height
      }, _react["default"].createElement(ChartWidthContext.Provider, {
        value: width
      }, children)))))));
    };
    var useClipPathId = exports.useClipPathId = function useClipPathId2() {
      return (0, _react.useContext)(ClipPathIdContext);
    };
    function getKeysForDebug(object) {
      var keys = Object.keys(object);
      if (keys.length === 0) {
        return "There are no available ids.";
      }
      return "Available ids are: ".concat(keys, ".");
    }
    var useXAxisOrThrow = exports.useXAxisOrThrow = function useXAxisOrThrow2(xAxisId) {
      var xAxisMap = (0, _react.useContext)(XAxisContext);
      !(xAxisMap != null) ? true ? (0, _tinyInvariant["default"])(false, "Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?") : (0, _tinyInvariant["default"])(false) : void 0;
      var xAxis = xAxisMap[xAxisId];
      !(xAxis != null) ? true ? (0, _tinyInvariant["default"])(false, 'Could not find xAxis by id "'.concat(xAxisId, '" [').concat(_typeof(xAxisId), "]. ").concat(getKeysForDebug(xAxisMap))) : (0, _tinyInvariant["default"])(false) : void 0;
      return xAxis;
    };
    var useArbitraryXAxis = exports.useArbitraryXAxis = function useArbitraryXAxis2() {
      var xAxisMap = (0, _react.useContext)(XAxisContext);
      return (0, _DataUtils.getAnyElementOfObject)(xAxisMap);
    };
    var useArbitraryYAxis = exports.useArbitraryYAxis = function useArbitraryYAxis2() {
      var yAxisMap = (0, _react.useContext)(YAxisContext);
      return (0, _DataUtils.getAnyElementOfObject)(yAxisMap);
    };
    var useYAxisWithFiniteDomainOrRandom = exports.useYAxisWithFiniteDomainOrRandom = function useYAxisWithFiniteDomainOrRandom2() {
      var yAxisMap = (0, _react.useContext)(YAxisContext);
      var yAxisWithFiniteDomain = (0, _find["default"])(yAxisMap, function(axis) {
        return (0, _every["default"])(axis.domain, Number.isFinite);
      });
      return yAxisWithFiniteDomain || (0, _DataUtils.getAnyElementOfObject)(yAxisMap);
    };
    var useYAxisOrThrow = exports.useYAxisOrThrow = function useYAxisOrThrow2(yAxisId) {
      var yAxisMap = (0, _react.useContext)(YAxisContext);
      !(yAxisMap != null) ? true ? (0, _tinyInvariant["default"])(false, "Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?") : (0, _tinyInvariant["default"])(false) : void 0;
      var yAxis = yAxisMap[yAxisId];
      !(yAxis != null) ? true ? (0, _tinyInvariant["default"])(false, 'Could not find yAxis by id "'.concat(yAxisId, '" [').concat(_typeof(yAxisId), "]. ").concat(getKeysForDebug(yAxisMap))) : (0, _tinyInvariant["default"])(false) : void 0;
      return yAxis;
    };
    var useViewBox = exports.useViewBox = function useViewBox2() {
      var viewBox = (0, _react.useContext)(ViewBoxContext);
      return viewBox;
    };
    var useOffset = exports.useOffset = function useOffset2() {
      return (0, _react.useContext)(OffsetContext);
    };
    var useChartWidth = exports.useChartWidth = function useChartWidth2() {
      return (0, _react.useContext)(ChartWidthContext);
    };
    var useChartHeight = exports.useChartHeight = function useChartHeight2() {
      return (0, _react.useContext)(ChartHeightContext);
    };
  }
});

// node_modules/recharts/lib/cartesian/ReferenceLine.js
var require_ReferenceLine = __commonJS({
  "node_modules/recharts/lib/cartesian/ReferenceLine.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getEndPoints = exports.ReferenceLine = void 0;
    var _react = _interopRequireDefault(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _some = _interopRequireDefault(require_some2());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _Label = require_Label();
    var _IfOverflowMatches = require_IfOverflowMatches();
    var _DataUtils = require_DataUtils();
    var _CartesianUtils = require_CartesianUtils();
    var _LogUtils = require_LogUtils();
    var _ReactUtils = require_ReactUtils();
    var _chartLayoutContext = require_chartLayoutContext();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    var renderLine = function renderLine2(option, props) {
      var line;
      if (_react["default"].isValidElement(option)) {
        line = _react["default"].cloneElement(option, props);
      } else if ((0, _isFunction["default"])(option)) {
        line = option(props);
      } else {
        line = _react["default"].createElement("line", _extends({}, props, {
          className: "recharts-reference-line-line"
        }));
      }
      return line;
    };
    var getEndPoints = exports.getEndPoints = function getEndPoints2(scales, isFixedX, isFixedY, isSegment, viewBox, position, xAxisOrientation, yAxisOrientation, props) {
      var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;
      if (isFixedY) {
        var yCoord = props.y;
        var coord = scales.y.apply(yCoord, {
          position
        });
        if ((0, _IfOverflowMatches.ifOverflowMatches)(props, "discard") && !scales.y.isInRange(coord)) {
          return null;
        }
        var points = [{
          x: x + width,
          y: coord
        }, {
          x,
          y: coord
        }];
        return yAxisOrientation === "left" ? points.reverse() : points;
      }
      if (isFixedX) {
        var xCoord = props.x;
        var _coord = scales.x.apply(xCoord, {
          position
        });
        if ((0, _IfOverflowMatches.ifOverflowMatches)(props, "discard") && !scales.x.isInRange(_coord)) {
          return null;
        }
        var _points = [{
          x: _coord,
          y: y + height
        }, {
          x: _coord,
          y
        }];
        return xAxisOrientation === "top" ? _points.reverse() : _points;
      }
      if (isSegment) {
        var segment = props.segment;
        var _points2 = segment.map(function(p) {
          return scales.apply(p, {
            position
          });
        });
        if ((0, _IfOverflowMatches.ifOverflowMatches)(props, "discard") && (0, _some["default"])(_points2, function(p) {
          return !scales.isInRange(p);
        })) {
          return null;
        }
        return _points2;
      }
      return null;
    };
    function ReferenceLineImpl(props) {
      var fixedX = props.x, fixedY = props.y, segment = props.segment, xAxisId = props.xAxisId, yAxisId = props.yAxisId, shape = props.shape, className = props.className, alwaysShow = props.alwaysShow;
      var clipPathId = (0, _chartLayoutContext.useClipPathId)();
      var xAxis = (0, _chartLayoutContext.useXAxisOrThrow)(xAxisId);
      var yAxis = (0, _chartLayoutContext.useYAxisOrThrow)(yAxisId);
      var viewBox = (0, _chartLayoutContext.useViewBox)();
      if (!clipPathId || !viewBox) {
        return null;
      }
      (0, _LogUtils.warn)(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
      var scales = (0, _CartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
      });
      var isX = (0, _DataUtils.isNumOrStr)(fixedX);
      var isY = (0, _DataUtils.isNumOrStr)(fixedY);
      var isSegment = segment && segment.length === 2;
      var endPoints = getEndPoints(scales, isX, isY, isSegment, viewBox, props.position, xAxis.orientation, yAxis.orientation, props);
      if (!endPoints) {
        return null;
      }
      var _endPoints = _slicedToArray(endPoints, 2), _endPoints$ = _endPoints[0], x1 = _endPoints$.x, y1 = _endPoints$.y, _endPoints$2 = _endPoints[1], x2 = _endPoints$2.x, y2 = _endPoints$2.y;
      var clipPath = (0, _IfOverflowMatches.ifOverflowMatches)(props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
      var lineProps = _objectSpread(_objectSpread({
        clipPath
      }, (0, _ReactUtils.filterProps)(props, true)), {}, {
        x1,
        y1,
        x2,
        y2
      });
      return _react["default"].createElement(_Layer.Layer, {
        className: (0, _clsx["default"])("recharts-reference-line", className)
      }, renderLine(shape, lineProps), _Label.Label.renderCallByParent(props, (0, _CartesianUtils.rectWithCoords)({
        x1,
        y1,
        x2,
        y2
      })));
    }
    var ReferenceLine = exports.ReferenceLine = function(_React$Component) {
      function ReferenceLine2() {
        _classCallCheck(this, ReferenceLine2);
        return _callSuper(this, ReferenceLine2, arguments);
      }
      _inherits(ReferenceLine2, _React$Component);
      return _createClass(ReferenceLine2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(ReferenceLineImpl, this.props);
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(ReferenceLine, "displayName", "ReferenceLine");
    _defineProperty(ReferenceLine, "defaultProps", {
      isFront: false,
      ifOverflow: "discard",
      xAxisId: 0,
      yAxisId: 0,
      fill: "none",
      stroke: "#ccc",
      fillOpacity: 1,
      strokeWidth: 1,
      position: "middle"
    });
  }
});

// node_modules/recharts/lib/cartesian/ReferenceDot.js
var require_ReferenceDot = __commonJS({
  "node_modules/recharts/lib/cartesian/ReferenceDot.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ReferenceDot = void 0;
    var _react = _interopRequireDefault(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _Dot = require_Dot();
    var _Label = require_Label();
    var _DataUtils = require_DataUtils();
    var _IfOverflowMatches = require_IfOverflowMatches();
    var _CartesianUtils = require_CartesianUtils();
    var _LogUtils = require_LogUtils();
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getCoordinate = function getCoordinate2(props) {
      var x = props.x, y = props.y, xAxis = props.xAxis, yAxis = props.yAxis;
      var scales = (0, _CartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
      });
      var result = scales.apply({
        x,
        y
      }, {
        bandAware: true
      });
      if ((0, _IfOverflowMatches.ifOverflowMatches)(props, "discard") && !scales.isInRange(result)) {
        return null;
      }
      return result;
    };
    var ReferenceDot = exports.ReferenceDot = function(_React$Component) {
      function ReferenceDot2() {
        _classCallCheck(this, ReferenceDot2);
        return _callSuper(this, ReferenceDot2, arguments);
      }
      _inherits(ReferenceDot2, _React$Component);
      return _createClass(ReferenceDot2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, x = _this$props.x, y = _this$props.y, r = _this$props.r, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;
          var isX = (0, _DataUtils.isNumOrStr)(x);
          var isY = (0, _DataUtils.isNumOrStr)(y);
          (0, _LogUtils.warn)(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
          if (!isX || !isY) {
            return null;
          }
          var coordinate = getCoordinate(this.props);
          if (!coordinate) {
            return null;
          }
          var cx = coordinate.x, cy = coordinate.y;
          var _this$props2 = this.props, shape = _this$props2.shape, className = _this$props2.className;
          var clipPath = (0, _IfOverflowMatches.ifOverflowMatches)(this.props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
          var dotProps = _objectSpread(_objectSpread({
            clipPath
          }, (0, _ReactUtils.filterProps)(this.props, true)), {}, {
            cx,
            cy
          });
          return _react["default"].createElement(_Layer.Layer, {
            className: (0, _clsx["default"])("recharts-reference-dot", className)
          }, ReferenceDot2.renderDot(shape, dotProps), _Label.Label.renderCallByParent(this.props, {
            x: cx - r,
            y: cy - r,
            width: 2 * r,
            height: 2 * r
          }));
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(ReferenceDot, "displayName", "ReferenceDot");
    _defineProperty(ReferenceDot, "defaultProps", {
      isFront: false,
      ifOverflow: "discard",
      xAxisId: 0,
      yAxisId: 0,
      r: 10,
      fill: "#fff",
      stroke: "#ccc",
      fillOpacity: 1,
      strokeWidth: 1
    });
    _defineProperty(ReferenceDot, "renderDot", function(option, props) {
      var dot;
      if (_react["default"].isValidElement(option)) {
        dot = _react["default"].cloneElement(option, props);
      } else if ((0, _isFunction["default"])(option)) {
        dot = option(props);
      } else {
        dot = _react["default"].createElement(_Dot.Dot, _extends({}, props, {
          cx: props.cx,
          cy: props.cy,
          className: "recharts-reference-dot-dot"
        }));
      }
      return dot;
    });
  }
});

// node_modules/recharts/lib/cartesian/ReferenceArea.js
var require_ReferenceArea = __commonJS({
  "node_modules/recharts/lib/cartesian/ReferenceArea.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ReferenceArea = void 0;
    var _react = _interopRequireDefault(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _Label = require_Label();
    var _CartesianUtils = require_CartesianUtils();
    var _IfOverflowMatches = require_IfOverflowMatches();
    var _DataUtils = require_DataUtils();
    var _LogUtils = require_LogUtils();
    var _Rectangle = require_Rectangle();
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var getRect = function getRect2(hasX1, hasX2, hasY1, hasY2, props) {
      var xValue1 = props.x1, xValue2 = props.x2, yValue1 = props.y1, yValue2 = props.y2, xAxis = props.xAxis, yAxis = props.yAxis;
      if (!xAxis || !yAxis) return null;
      var scales = (0, _CartesianUtils.createLabeledScales)({
        x: xAxis.scale,
        y: yAxis.scale
      });
      var p1 = {
        x: hasX1 ? scales.x.apply(xValue1, {
          position: "start"
        }) : scales.x.rangeMin,
        y: hasY1 ? scales.y.apply(yValue1, {
          position: "start"
        }) : scales.y.rangeMin
      };
      var p2 = {
        x: hasX2 ? scales.x.apply(xValue2, {
          position: "end"
        }) : scales.x.rangeMax,
        y: hasY2 ? scales.y.apply(yValue2, {
          position: "end"
        }) : scales.y.rangeMax
      };
      if ((0, _IfOverflowMatches.ifOverflowMatches)(props, "discard") && (!scales.isInRange(p1) || !scales.isInRange(p2))) {
        return null;
      }
      return (0, _CartesianUtils.rectWithPoints)(p1, p2);
    };
    var ReferenceArea = exports.ReferenceArea = function(_React$Component) {
      function ReferenceArea2() {
        _classCallCheck(this, ReferenceArea2);
        return _callSuper(this, ReferenceArea2, arguments);
      }
      _inherits(ReferenceArea2, _React$Component);
      return _createClass(ReferenceArea2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, x1 = _this$props.x1, x2 = _this$props.x2, y1 = _this$props.y1, y2 = _this$props.y2, className = _this$props.className, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;
          (0, _LogUtils.warn)(alwaysShow === void 0, 'The alwaysShow prop is deprecated. Please use ifOverflow="extendDomain" instead.');
          var hasX1 = (0, _DataUtils.isNumOrStr)(x1);
          var hasX2 = (0, _DataUtils.isNumOrStr)(x2);
          var hasY1 = (0, _DataUtils.isNumOrStr)(y1);
          var hasY2 = (0, _DataUtils.isNumOrStr)(y2);
          var shape = this.props.shape;
          if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) {
            return null;
          }
          var rect = getRect(hasX1, hasX2, hasY1, hasY2, this.props);
          if (!rect && !shape) {
            return null;
          }
          var clipPath = (0, _IfOverflowMatches.ifOverflowMatches)(this.props, "hidden") ? "url(#".concat(clipPathId, ")") : void 0;
          return _react["default"].createElement(_Layer.Layer, {
            className: (0, _clsx["default"])("recharts-reference-area", className)
          }, ReferenceArea2.renderRect(shape, _objectSpread(_objectSpread({
            clipPath
          }, (0, _ReactUtils.filterProps)(this.props, true)), rect)), _Label.Label.renderCallByParent(this.props, rect));
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(ReferenceArea, "displayName", "ReferenceArea");
    _defineProperty(ReferenceArea, "defaultProps", {
      isFront: false,
      ifOverflow: "discard",
      xAxisId: 0,
      yAxisId: 0,
      r: 10,
      fill: "#ccc",
      fillOpacity: 0.5,
      stroke: "none",
      strokeWidth: 1
    });
    _defineProperty(ReferenceArea, "renderRect", function(option, props) {
      var rect;
      if (_react["default"].isValidElement(option)) {
        rect = _react["default"].cloneElement(option, props);
      } else if ((0, _isFunction["default"])(option)) {
        rect = option(props);
      } else {
        rect = _react["default"].createElement(_Rectangle.Rectangle, _extends({}, props, {
          className: "recharts-reference-area-rect"
        }));
      }
      return rect;
    });
  }
});

// node_modules/recharts/lib/util/getEveryNthWithCondition.js
var require_getEveryNthWithCondition = __commonJS({
  "node_modules/recharts/lib/util/getEveryNthWithCondition.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getEveryNthWithCondition = getEveryNthWithCondition;
    function getEveryNthWithCondition(array, n, isValid) {
      if (n < 1) {
        return [];
      }
      if (n === 1 && isValid === void 0) {
        return array;
      }
      var result = [];
      for (var i = 0; i < array.length; i += n) {
        if (isValid === void 0 || isValid(array[i]) === true) {
          result.push(array[i]);
        } else {
          return void 0;
        }
      }
      return result;
    }
  }
});

// node_modules/recharts/lib/util/TickUtils.js
var require_TickUtils = __commonJS({
  "node_modules/recharts/lib/util/TickUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getAngledTickWidth = getAngledTickWidth;
    exports.getNumberIntervalTicks = getNumberIntervalTicks;
    exports.getTickBoundaries = getTickBoundaries;
    exports.isVisible = isVisible;
    var _CartesianUtils = require_CartesianUtils();
    var _getEveryNthWithCondition = require_getEveryNthWithCondition();
    function getAngledTickWidth(contentSize, unitSize, angle) {
      var size = {
        width: contentSize.width + unitSize.width,
        height: contentSize.height + unitSize.height
      };
      return (0, _CartesianUtils.getAngledRectangleWidth)(size, angle);
    }
    function getTickBoundaries(viewBox, sign, sizeKey) {
      var isWidth = sizeKey === "width";
      var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;
      if (sign === 1) {
        return {
          start: isWidth ? x : y,
          end: isWidth ? x + width : y + height
        };
      }
      return {
        start: isWidth ? x + width : y + height,
        end: isWidth ? x : y
      };
    }
    function isVisible(sign, tickPosition, getSize, start, end) {
      if (sign * tickPosition < sign * start || sign * tickPosition > sign * end) {
        return false;
      }
      var size = getSize();
      return sign * (tickPosition - sign * size / 2 - start) >= 0 && sign * (tickPosition + sign * size / 2 - end) <= 0;
    }
    function getNumberIntervalTicks(ticks, interval) {
      return (0, _getEveryNthWithCondition.getEveryNthWithCondition)(ticks, interval + 1);
    }
  }
});

// node_modules/recharts/lib/cartesian/getEquidistantTicks.js
var require_getEquidistantTicks = __commonJS({
  "node_modules/recharts/lib/cartesian/getEquidistantTicks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getEquidistantTicks = getEquidistantTicks;
    var _TickUtils = require_TickUtils();
    var _getEveryNthWithCondition = require_getEveryNthWithCondition();
    function getEquidistantTicks(sign, boundaries, getTickSize, ticks, minTickGap) {
      var result = (ticks || []).slice();
      var initialStart = boundaries.start, end = boundaries.end;
      var index = 0;
      var stepsize = 1;
      var start = initialStart;
      var _loop = function _loop2() {
        var entry = ticks === null || ticks === void 0 ? void 0 : ticks[index];
        if (entry === void 0) {
          return {
            v: (0, _getEveryNthWithCondition.getEveryNthWithCondition)(ticks, stepsize)
          };
        }
        var i = index;
        var size;
        var getSize = function getSize2() {
          if (size === void 0) {
            size = getTickSize(entry, i);
          }
          return size;
        };
        var tickCoord = entry.coordinate;
        var isShow = index === 0 || (0, _TickUtils.isVisible)(sign, tickCoord, getSize, start, end);
        if (!isShow) {
          index = 0;
          start = initialStart;
          stepsize += 1;
        }
        if (isShow) {
          start = tickCoord + sign * (getSize() / 2 + minTickGap);
          index += stepsize;
        }
      }, _ret;
      while (stepsize <= result.length) {
        _ret = _loop();
        if (_ret) return _ret.v;
      }
      return [];
    }
  }
});

// node_modules/recharts/lib/cartesian/getTicks.js
var require_getTicks = __commonJS({
  "node_modules/recharts/lib/cartesian/getTicks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getTicks = getTicks;
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _DataUtils = require_DataUtils();
    var _DOMUtils = require_DOMUtils();
    var _Global = require_Global();
    var _TickUtils = require_TickUtils();
    var _getEquidistantTicks = require_getEquidistantTicks();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap) {
      var result = (ticks || []).slice();
      var len = result.length;
      var start = boundaries.start;
      var end = boundaries.end;
      var _loop = function _loop2(i2) {
        var entry = result[i2];
        var size;
        var getSize = function getSize2() {
          if (size === void 0) {
            size = getTickSize(entry, i2);
          }
          return size;
        };
        if (i2 === len - 1) {
          var gap = sign * (entry.coordinate + sign * getSize() / 2 - end);
          result[i2] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate
          });
        } else {
          result[i2] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: entry.coordinate
          });
        }
        var isShow = (0, _TickUtils.isVisible)(sign, entry.tickCoord, getSize, start, end);
        if (isShow) {
          end = entry.tickCoord - sign * (getSize() / 2 + minTickGap);
          result[i2] = _objectSpread(_objectSpread({}, entry), {}, {
            isShow: true
          });
        }
      };
      for (var i = len - 1; i >= 0; i--) {
        _loop(i);
      }
      return result;
    }
    function getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, preserveEnd) {
      var result = (ticks || []).slice();
      var len = result.length;
      var start = boundaries.start, end = boundaries.end;
      if (preserveEnd) {
        var tail = ticks[len - 1];
        var tailSize = getTickSize(tail, len - 1);
        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);
        result[len - 1] = tail = _objectSpread(_objectSpread({}, tail), {}, {
          tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate
        });
        var isTailShow = (0, _TickUtils.isVisible)(sign, tail.tickCoord, function() {
          return tailSize;
        }, start, end);
        if (isTailShow) {
          end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);
          result[len - 1] = _objectSpread(_objectSpread({}, tail), {}, {
            isShow: true
          });
        }
      }
      var count = preserveEnd ? len - 1 : len;
      var _loop2 = function _loop22(i2) {
        var entry = result[i2];
        var size;
        var getSize = function getSize2() {
          if (size === void 0) {
            size = getTickSize(entry, i2);
          }
          return size;
        };
        if (i2 === 0) {
          var gap = sign * (entry.coordinate - sign * getSize() / 2 - start);
          result[i2] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate
          });
        } else {
          result[i2] = entry = _objectSpread(_objectSpread({}, entry), {}, {
            tickCoord: entry.coordinate
          });
        }
        var isShow = (0, _TickUtils.isVisible)(sign, entry.tickCoord, getSize, start, end);
        if (isShow) {
          start = entry.tickCoord + sign * (getSize() / 2 + minTickGap);
          result[i2] = _objectSpread(_objectSpread({}, entry), {}, {
            isShow: true
          });
        }
      };
      for (var i = 0; i < count; i++) {
        _loop2(i);
      }
      return result;
    }
    function getTicks(props, fontSize, letterSpacing) {
      var tick = props.tick, ticks = props.ticks, viewBox = props.viewBox, minTickGap = props.minTickGap, orientation = props.orientation, interval = props.interval, tickFormatter = props.tickFormatter, unit = props.unit, angle = props.angle;
      if (!ticks || !ticks.length || !tick) {
        return [];
      }
      if ((0, _DataUtils.isNumber)(interval) || _Global.Global.isSsr) {
        return (0, _TickUtils.getNumberIntervalTicks)(ticks, typeof interval === "number" && (0, _DataUtils.isNumber)(interval) ? interval : 0);
      }
      var candidates = [];
      var sizeKey = orientation === "top" || orientation === "bottom" ? "width" : "height";
      var unitSize = unit && sizeKey === "width" ? (0, _DOMUtils.getStringSize)(unit, {
        fontSize,
        letterSpacing
      }) : {
        width: 0,
        height: 0
      };
      var getTickSize = function getTickSize2(content, index) {
        var value = (0, _isFunction["default"])(tickFormatter) ? tickFormatter(content.value, index) : content.value;
        return sizeKey === "width" ? (0, _TickUtils.getAngledTickWidth)((0, _DOMUtils.getStringSize)(value, {
          fontSize,
          letterSpacing
        }), unitSize, angle) : (0, _DOMUtils.getStringSize)(value, {
          fontSize,
          letterSpacing
        })[sizeKey];
      };
      var sign = ticks.length >= 2 ? (0, _DataUtils.mathSign)(ticks[1].coordinate - ticks[0].coordinate) : 1;
      var boundaries = (0, _TickUtils.getTickBoundaries)(viewBox, sign, sizeKey);
      if (interval === "equidistantPreserveStart") {
        return (0, _getEquidistantTicks.getEquidistantTicks)(sign, boundaries, getTickSize, ticks, minTickGap);
      }
      if (interval === "preserveStart" || interval === "preserveStartEnd") {
        candidates = getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, interval === "preserveStartEnd");
      } else {
        candidates = getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap);
      }
      return candidates.filter(function(entry) {
        return entry.isShow;
      });
    }
  }
});

// node_modules/recharts/lib/cartesian/CartesianAxis.js
var require_CartesianAxis = __commonJS({
  "node_modules/recharts/lib/cartesian/CartesianAxis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CartesianAxis = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _get = _interopRequireDefault(require_get());
    var _clsx = _interopRequireDefault(require_clsx());
    var _ShallowEqual = require_ShallowEqual();
    var _Layer = require_Layer();
    var _Text = require_Text();
    var _Label = require_Label();
    var _DataUtils = require_DataUtils();
    var _types = require_types();
    var _ReactUtils = require_ReactUtils();
    var _getTicks = require_getTicks();
    var _excluded = ["viewBox"];
    var _excluded2 = ["viewBox"];
    var _excluded3 = ["ticks"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var CartesianAxis = exports.CartesianAxis = function(_Component) {
      function CartesianAxis2(props) {
        var _this;
        _classCallCheck(this, CartesianAxis2);
        _this = _callSuper(this, CartesianAxis2, [props]);
        _this.state = {
          fontSize: "",
          letterSpacing: ""
        };
        return _this;
      }
      _inherits(CartesianAxis2, _Component);
      return _createClass(CartesianAxis2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(_ref, nextState) {
          var viewBox = _ref.viewBox, restProps = _objectWithoutProperties(_ref, _excluded);
          var _this$props = this.props, viewBoxOld = _this$props.viewBox, restPropsOld = _objectWithoutProperties(_this$props, _excluded2);
          return !(0, _ShallowEqual.shallowEqual)(viewBox, viewBoxOld) || !(0, _ShallowEqual.shallowEqual)(restProps, restPropsOld) || !(0, _ShallowEqual.shallowEqual)(nextState, this.state);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var htmlLayer = this.layerReference;
          if (!htmlLayer) return;
          var tick = htmlLayer.getElementsByClassName("recharts-cartesian-axis-tick-value")[0];
          if (tick) {
            this.setState({
              fontSize: window.getComputedStyle(tick).fontSize,
              letterSpacing: window.getComputedStyle(tick).letterSpacing
            });
          }
        }
        /**
         * Calculate the coordinates of endpoints in ticks
         * @param  {Object} data The data of a simple tick
         * @return {Object} (x1, y1): The coordinate of endpoint close to tick text
         *  (x2, y2): The coordinate of endpoint close to axis
         */
      }, {
        key: "getTickLineCoord",
        value: function getTickLineCoord(data) {
          var _this$props2 = this.props, x = _this$props2.x, y = _this$props2.y, width = _this$props2.width, height = _this$props2.height, orientation = _this$props2.orientation, tickSize = _this$props2.tickSize, mirror = _this$props2.mirror, tickMargin = _this$props2.tickMargin;
          var x1, x2, y1, y2, tx, ty;
          var sign = mirror ? -1 : 1;
          var finalTickSize = data.tickSize || tickSize;
          var tickCoord = (0, _DataUtils.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;
          switch (orientation) {
            case "top":
              x1 = x2 = data.coordinate;
              y2 = y + +!mirror * height;
              y1 = y2 - sign * finalTickSize;
              ty = y1 - sign * tickMargin;
              tx = tickCoord;
              break;
            case "left":
              y1 = y2 = data.coordinate;
              x2 = x + +!mirror * width;
              x1 = x2 - sign * finalTickSize;
              tx = x1 - sign * tickMargin;
              ty = tickCoord;
              break;
            case "right":
              y1 = y2 = data.coordinate;
              x2 = x + +mirror * width;
              x1 = x2 + sign * finalTickSize;
              tx = x1 + sign * tickMargin;
              ty = tickCoord;
              break;
            default:
              x1 = x2 = data.coordinate;
              y2 = y + +mirror * height;
              y1 = y2 + sign * finalTickSize;
              ty = y1 + sign * tickMargin;
              tx = tickCoord;
              break;
          }
          return {
            line: {
              x1,
              y1,
              x2,
              y2
            },
            tick: {
              x: tx,
              y: ty
            }
          };
        }
      }, {
        key: "getTickTextAnchor",
        value: function getTickTextAnchor() {
          var _this$props3 = this.props, orientation = _this$props3.orientation, mirror = _this$props3.mirror;
          var textAnchor;
          switch (orientation) {
            case "left":
              textAnchor = mirror ? "start" : "end";
              break;
            case "right":
              textAnchor = mirror ? "end" : "start";
              break;
            default:
              textAnchor = "middle";
              break;
          }
          return textAnchor;
        }
      }, {
        key: "getTickVerticalAnchor",
        value: function getTickVerticalAnchor() {
          var _this$props4 = this.props, orientation = _this$props4.orientation, mirror = _this$props4.mirror;
          var verticalAnchor = "end";
          switch (orientation) {
            case "left":
            case "right":
              verticalAnchor = "middle";
              break;
            case "top":
              verticalAnchor = mirror ? "start" : "end";
              break;
            default:
              verticalAnchor = mirror ? "end" : "start";
              break;
          }
          return verticalAnchor;
        }
      }, {
        key: "renderAxisLine",
        value: function renderAxisLine() {
          var _this$props5 = this.props, x = _this$props5.x, y = _this$props5.y, width = _this$props5.width, height = _this$props5.height, orientation = _this$props5.orientation, mirror = _this$props5.mirror, axisLine = _this$props5.axisLine;
          var props = _objectSpread(_objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(this.props, false)), (0, _ReactUtils.filterProps)(axisLine, false)), {}, {
            fill: "none"
          });
          if (orientation === "top" || orientation === "bottom") {
            var needHeight = +(orientation === "top" && !mirror || orientation === "bottom" && mirror);
            props = _objectSpread(_objectSpread({}, props), {}, {
              x1: x,
              y1: y + needHeight * height,
              x2: x + width,
              y2: y + needHeight * height
            });
          } else {
            var needWidth = +(orientation === "left" && !mirror || orientation === "right" && mirror);
            props = _objectSpread(_objectSpread({}, props), {}, {
              x1: x + needWidth * width,
              y1: y,
              x2: x + needWidth * width,
              y2: y + height
            });
          }
          return _react["default"].createElement("line", _extends({}, props, {
            className: (0, _clsx["default"])("recharts-cartesian-axis-line", (0, _get["default"])(axisLine, "className"))
          }));
        }
      }, {
        key: "renderTicks",
        value: (
          /**
           * render the ticks
           * @param {Array} ticks The ticks to actually render (overrides what was passed in props)
           * @param {string} fontSize Fontsize to consider for tick spacing
           * @param {string} letterSpacing Letterspacing to consider for tick spacing
           * @return {ReactComponent} renderedTicks
           */
          function renderTicks(ticks, fontSize, letterSpacing) {
            var _this2 = this;
            var _this$props6 = this.props, tickLine = _this$props6.tickLine, stroke = _this$props6.stroke, tick = _this$props6.tick, tickFormatter = _this$props6.tickFormatter, unit = _this$props6.unit;
            var finalTicks = (0, _getTicks.getTicks)(_objectSpread(_objectSpread({}, this.props), {}, {
              ticks
            }), fontSize, letterSpacing);
            var textAnchor = this.getTickTextAnchor();
            var verticalAnchor = this.getTickVerticalAnchor();
            var axisProps = (0, _ReactUtils.filterProps)(this.props, false);
            var customTickProps = (0, _ReactUtils.filterProps)(tick, false);
            var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {
              fill: "none"
            }, (0, _ReactUtils.filterProps)(tickLine, false));
            var items = finalTicks.map(function(entry, i) {
              var _this2$getTickLineCoo = _this2.getTickLineCoord(entry), lineCoord = _this2$getTickLineCoo.line, tickCoord = _this2$getTickLineCoo.tick;
              var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
                textAnchor,
                verticalAnchor
              }, axisProps), {}, {
                stroke: "none",
                fill: stroke
              }, customTickProps), tickCoord), {}, {
                index: i,
                payload: entry,
                visibleTicksCount: finalTicks.length,
                tickFormatter
              });
              return _react["default"].createElement(_Layer.Layer, _extends({
                className: "recharts-cartesian-axis-tick",
                key: "tick-".concat(entry.value, "-").concat(entry.coordinate, "-").concat(entry.tickCoord)
              }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i)), tickLine && _react["default"].createElement("line", _extends({}, tickLineProps, lineCoord, {
                className: (0, _clsx["default"])("recharts-cartesian-axis-tick-line", (0, _get["default"])(tickLine, "className"))
              })), tick && CartesianAxis2.renderTickItem(tick, tickProps, "".concat((0, _isFunction["default"])(tickFormatter) ? tickFormatter(entry.value, i) : entry.value).concat(unit || "")));
            });
            return _react["default"].createElement("g", {
              className: "recharts-cartesian-axis-ticks"
            }, items);
          }
        )
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          var _this$props7 = this.props, axisLine = _this$props7.axisLine, width = _this$props7.width, height = _this$props7.height, ticksGenerator = _this$props7.ticksGenerator, className = _this$props7.className, hide = _this$props7.hide;
          if (hide) {
            return null;
          }
          var _this$props8 = this.props, ticks = _this$props8.ticks, noTicksProps = _objectWithoutProperties(_this$props8, _excluded3);
          var finalTicks = ticks;
          if ((0, _isFunction["default"])(ticksGenerator)) {
            finalTicks = ticks && ticks.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);
          }
          if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) {
            return null;
          }
          return _react["default"].createElement(_Layer.Layer, {
            className: (0, _clsx["default"])("recharts-cartesian-axis", className),
            ref: function ref(_ref2) {
              _this3.layerReference = _ref2;
            }
          }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks, this.state.fontSize, this.state.letterSpacing), _Label.Label.renderCallByParent(this.props));
        }
      }], [{
        key: "renderTickItem",
        value: function renderTickItem(option, props, value) {
          var tickItem;
          if (_react["default"].isValidElement(option)) {
            tickItem = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            tickItem = option(props);
          } else {
            tickItem = _react["default"].createElement(_Text.Text, _extends({}, props, {
              className: "recharts-cartesian-axis-tick-value"
            }), value);
          }
          return tickItem;
        }
      }]);
    }(_react.Component);
    _defineProperty(CartesianAxis, "displayName", "CartesianAxis");
    _defineProperty(CartesianAxis, "defaultProps", {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      viewBox: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      // The orientation of axis
      orientation: "bottom",
      // The ticks
      ticks: [],
      stroke: "#666",
      tickLine: true,
      axisLine: true,
      tick: true,
      mirror: false,
      minTickGap: 5,
      // The width or height of tick
      tickSize: 6,
      tickMargin: 2,
      interval: "preserveEnd"
    });
  }
});

// node_modules/recharts/lib/cartesian/CartesianGrid.js
var require_CartesianGrid = __commonJS({
  "node_modules/recharts/lib/cartesian/CartesianGrid.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.CartesianGrid = CartesianGrid;
    var _react = _interopRequireDefault(require_react());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _LogUtils = require_LogUtils();
    var _DataUtils = require_DataUtils();
    var _ReactUtils = require_ReactUtils();
    var _ChartUtils = require_ChartUtils();
    var _getTicks = require_getTicks();
    var _CartesianAxis = require_CartesianAxis();
    var _chartLayoutContext = require_chartLayoutContext();
    var _excluded = ["x1", "y1", "x2", "y2", "key"];
    var _excluded2 = ["offset"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    var Background = function Background2(props) {
      var fill = props.fill;
      if (!fill || fill === "none") {
        return null;
      }
      var fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, ry = props.ry;
      return _react["default"].createElement("rect", {
        x,
        y,
        ry,
        width,
        height,
        stroke: "none",
        fill,
        fillOpacity,
        className: "recharts-cartesian-grid-bg"
      });
    };
    function renderLineItem(option, props) {
      var lineItem;
      if (_react["default"].isValidElement(option)) {
        lineItem = _react["default"].cloneElement(option, props);
      } else if ((0, _isFunction["default"])(option)) {
        lineItem = option(props);
      } else {
        var x1 = props.x1, y1 = props.y1, x2 = props.x2, y2 = props.y2, key = props.key, others = _objectWithoutProperties(props, _excluded);
        var _filterProps = (0, _ReactUtils.filterProps)(others, false), __ = _filterProps.offset, restOfFilteredProps = _objectWithoutProperties(_filterProps, _excluded2);
        lineItem = _react["default"].createElement("line", _extends({}, restOfFilteredProps, {
          x1,
          y1,
          x2,
          y2,
          fill: "none",
          key
        }));
      }
      return lineItem;
    }
    function HorizontalGridLines(props) {
      var x = props.x, width = props.width, _props$horizontal = props.horizontal, horizontal = _props$horizontal === void 0 ? true : _props$horizontal, horizontalPoints = props.horizontalPoints;
      if (!horizontal || !horizontalPoints || !horizontalPoints.length) {
        return null;
      }
      var items = horizontalPoints.map(function(entry, i) {
        var lineItemProps = _objectSpread(_objectSpread({}, props), {}, {
          x1: x,
          y1: entry,
          x2: x + width,
          y2: entry,
          key: "line-".concat(i),
          index: i
        });
        return renderLineItem(horizontal, lineItemProps);
      });
      return _react["default"].createElement("g", {
        className: "recharts-cartesian-grid-horizontal"
      }, items);
    }
    function VerticalGridLines(props) {
      var y = props.y, height = props.height, _props$vertical = props.vertical, vertical = _props$vertical === void 0 ? true : _props$vertical, verticalPoints = props.verticalPoints;
      if (!vertical || !verticalPoints || !verticalPoints.length) {
        return null;
      }
      var items = verticalPoints.map(function(entry, i) {
        var lineItemProps = _objectSpread(_objectSpread({}, props), {}, {
          x1: entry,
          y1: y,
          x2: entry,
          y2: y + height,
          key: "line-".concat(i),
          index: i
        });
        return renderLineItem(vertical, lineItemProps);
      });
      return _react["default"].createElement("g", {
        className: "recharts-cartesian-grid-vertical"
      }, items);
    }
    function HorizontalStripes(props) {
      var horizontalFill = props.horizontalFill, fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, horizontalPoints = props.horizontalPoints, _props$horizontal2 = props.horizontal, horizontal = _props$horizontal2 === void 0 ? true : _props$horizontal2;
      if (!horizontal || !horizontalFill || !horizontalFill.length) {
        return null;
      }
      var roundedSortedHorizontalPoints = horizontalPoints.map(function(e) {
        return Math.round(e + y - y);
      }).sort(function(a, b) {
        return a - b;
      });
      if (y !== roundedSortedHorizontalPoints[0]) {
        roundedSortedHorizontalPoints.unshift(0);
      }
      var items = roundedSortedHorizontalPoints.map(function(entry, i) {
        var lastStripe = !roundedSortedHorizontalPoints[i + 1];
        var lineHeight = lastStripe ? y + height - entry : roundedSortedHorizontalPoints[i + 1] - entry;
        if (lineHeight <= 0) {
          return null;
        }
        var colorIndex = i % horizontalFill.length;
        return _react["default"].createElement("rect", {
          key: "react-".concat(i),
          y: entry,
          x,
          height: lineHeight,
          width,
          stroke: "none",
          fill: horizontalFill[colorIndex],
          fillOpacity,
          className: "recharts-cartesian-grid-bg"
        });
      });
      return _react["default"].createElement("g", {
        className: "recharts-cartesian-gridstripes-horizontal"
      }, items);
    }
    function VerticalStripes(props) {
      var _props$vertical2 = props.vertical, vertical = _props$vertical2 === void 0 ? true : _props$vertical2, verticalFill = props.verticalFill, fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, verticalPoints = props.verticalPoints;
      if (!vertical || !verticalFill || !verticalFill.length) {
        return null;
      }
      var roundedSortedVerticalPoints = verticalPoints.map(function(e) {
        return Math.round(e + x - x);
      }).sort(function(a, b) {
        return a - b;
      });
      if (x !== roundedSortedVerticalPoints[0]) {
        roundedSortedVerticalPoints.unshift(0);
      }
      var items = roundedSortedVerticalPoints.map(function(entry, i) {
        var lastStripe = !roundedSortedVerticalPoints[i + 1];
        var lineWidth = lastStripe ? x + width - entry : roundedSortedVerticalPoints[i + 1] - entry;
        if (lineWidth <= 0) {
          return null;
        }
        var colorIndex = i % verticalFill.length;
        return _react["default"].createElement("rect", {
          key: "react-".concat(i),
          x: entry,
          y,
          width: lineWidth,
          height,
          stroke: "none",
          fill: verticalFill[colorIndex],
          fillOpacity,
          className: "recharts-cartesian-grid-bg"
        });
      });
      return _react["default"].createElement("g", {
        className: "recharts-cartesian-gridstripes-vertical"
      }, items);
    }
    var defaultVerticalCoordinatesGenerator = function defaultVerticalCoordinatesGenerator2(_ref, syncWithTicks) {
      var xAxis = _ref.xAxis, width = _ref.width, height = _ref.height, offset = _ref.offset;
      return (0, _ChartUtils.getCoordinatesOfGrid)((0, _getTicks.getTicks)(_objectSpread(_objectSpread(_objectSpread({}, _CartesianAxis.CartesianAxis.defaultProps), xAxis), {}, {
        ticks: (0, _ChartUtils.getTicksOfAxis)(xAxis, true),
        viewBox: {
          x: 0,
          y: 0,
          width,
          height
        }
      })), offset.left, offset.left + offset.width, syncWithTicks);
    };
    var defaultHorizontalCoordinatesGenerator = function defaultHorizontalCoordinatesGenerator2(_ref2, syncWithTicks) {
      var yAxis = _ref2.yAxis, width = _ref2.width, height = _ref2.height, offset = _ref2.offset;
      return (0, _ChartUtils.getCoordinatesOfGrid)((0, _getTicks.getTicks)(_objectSpread(_objectSpread(_objectSpread({}, _CartesianAxis.CartesianAxis.defaultProps), yAxis), {}, {
        ticks: (0, _ChartUtils.getTicksOfAxis)(yAxis, true),
        viewBox: {
          x: 0,
          y: 0,
          width,
          height
        }
      })), offset.top, offset.top + offset.height, syncWithTicks);
    };
    var defaultProps = {
      horizontal: true,
      vertical: true,
      // The ordinates of horizontal grid lines
      horizontalPoints: [],
      // The abscissas of vertical grid lines
      verticalPoints: [],
      stroke: "#ccc",
      fill: "none",
      // The fill of colors of grid lines
      verticalFill: [],
      horizontalFill: []
    };
    function CartesianGrid(props) {
      var _props$stroke, _props$fill, _props$horizontal3, _props$horizontalFill, _props$vertical3, _props$verticalFill;
      var chartWidth = (0, _chartLayoutContext.useChartWidth)();
      var chartHeight = (0, _chartLayoutContext.useChartHeight)();
      var offset = (0, _chartLayoutContext.useOffset)();
      var propsIncludingDefaults = _objectSpread(_objectSpread({}, props), {}, {
        stroke: (_props$stroke = props.stroke) !== null && _props$stroke !== void 0 ? _props$stroke : defaultProps.stroke,
        fill: (_props$fill = props.fill) !== null && _props$fill !== void 0 ? _props$fill : defaultProps.fill,
        horizontal: (_props$horizontal3 = props.horizontal) !== null && _props$horizontal3 !== void 0 ? _props$horizontal3 : defaultProps.horizontal,
        horizontalFill: (_props$horizontalFill = props.horizontalFill) !== null && _props$horizontalFill !== void 0 ? _props$horizontalFill : defaultProps.horizontalFill,
        vertical: (_props$vertical3 = props.vertical) !== null && _props$vertical3 !== void 0 ? _props$vertical3 : defaultProps.vertical,
        verticalFill: (_props$verticalFill = props.verticalFill) !== null && _props$verticalFill !== void 0 ? _props$verticalFill : defaultProps.verticalFill,
        x: (0, _DataUtils.isNumber)(props.x) ? props.x : offset.left,
        y: (0, _DataUtils.isNumber)(props.y) ? props.y : offset.top,
        width: (0, _DataUtils.isNumber)(props.width) ? props.width : offset.width,
        height: (0, _DataUtils.isNumber)(props.height) ? props.height : offset.height
      });
      var x = propsIncludingDefaults.x, y = propsIncludingDefaults.y, width = propsIncludingDefaults.width, height = propsIncludingDefaults.height, syncWithTicks = propsIncludingDefaults.syncWithTicks, horizontalValues = propsIncludingDefaults.horizontalValues, verticalValues = propsIncludingDefaults.verticalValues;
      var xAxis = (0, _chartLayoutContext.useArbitraryXAxis)();
      var yAxis = (0, _chartLayoutContext.useYAxisWithFiniteDomainOrRandom)();
      if (!(0, _DataUtils.isNumber)(width) || width <= 0 || !(0, _DataUtils.isNumber)(height) || height <= 0 || !(0, _DataUtils.isNumber)(x) || x !== +x || !(0, _DataUtils.isNumber)(y) || y !== +y) {
        return null;
      }
      var verticalCoordinatesGenerator = propsIncludingDefaults.verticalCoordinatesGenerator || defaultVerticalCoordinatesGenerator;
      var horizontalCoordinatesGenerator = propsIncludingDefaults.horizontalCoordinatesGenerator || defaultHorizontalCoordinatesGenerator;
      var horizontalPoints = propsIncludingDefaults.horizontalPoints, verticalPoints = propsIncludingDefaults.verticalPoints;
      if ((!horizontalPoints || !horizontalPoints.length) && (0, _isFunction["default"])(horizontalCoordinatesGenerator)) {
        var isHorizontalValues = horizontalValues && horizontalValues.length;
        var generatorResult = horizontalCoordinatesGenerator({
          yAxis: yAxis ? _objectSpread(_objectSpread({}, yAxis), {}, {
            ticks: isHorizontalValues ? horizontalValues : yAxis.ticks
          }) : void 0,
          width: chartWidth,
          height: chartHeight,
          offset
        }, isHorizontalValues ? true : syncWithTicks);
        (0, _LogUtils.warn)(Array.isArray(generatorResult), "horizontalCoordinatesGenerator should return Array but instead it returned [".concat(_typeof(generatorResult), "]"));
        if (Array.isArray(generatorResult)) {
          horizontalPoints = generatorResult;
        }
      }
      if ((!verticalPoints || !verticalPoints.length) && (0, _isFunction["default"])(verticalCoordinatesGenerator)) {
        var isVerticalValues = verticalValues && verticalValues.length;
        var _generatorResult = verticalCoordinatesGenerator({
          xAxis: xAxis ? _objectSpread(_objectSpread({}, xAxis), {}, {
            ticks: isVerticalValues ? verticalValues : xAxis.ticks
          }) : void 0,
          width: chartWidth,
          height: chartHeight,
          offset
        }, isVerticalValues ? true : syncWithTicks);
        (0, _LogUtils.warn)(Array.isArray(_generatorResult), "verticalCoordinatesGenerator should return Array but instead it returned [".concat(_typeof(_generatorResult), "]"));
        if (Array.isArray(_generatorResult)) {
          verticalPoints = _generatorResult;
        }
      }
      return _react["default"].createElement("g", {
        className: "recharts-cartesian-grid"
      }, _react["default"].createElement(Background, {
        fill: propsIncludingDefaults.fill,
        fillOpacity: propsIncludingDefaults.fillOpacity,
        x: propsIncludingDefaults.x,
        y: propsIncludingDefaults.y,
        width: propsIncludingDefaults.width,
        height: propsIncludingDefaults.height,
        ry: propsIncludingDefaults.ry
      }), _react["default"].createElement(HorizontalGridLines, _extends({}, propsIncludingDefaults, {
        offset,
        horizontalPoints,
        xAxis,
        yAxis
      })), _react["default"].createElement(VerticalGridLines, _extends({}, propsIncludingDefaults, {
        offset,
        verticalPoints,
        xAxis,
        yAxis
      })), _react["default"].createElement(HorizontalStripes, _extends({}, propsIncludingDefaults, {
        horizontalPoints
      })), _react["default"].createElement(VerticalStripes, _extends({}, propsIncludingDefaults, {
        verticalPoints
      })));
    }
    CartesianGrid.displayName = "CartesianGrid";
  }
});

// node_modules/recharts/lib/cartesian/Line.js
var require_Line = __commonJS({
  "node_modules/recharts/lib/cartesian/Line.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Line = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Curve = require_Curve();
    var _Dot = require_Dot();
    var _Layer = require_Layer();
    var _LabelList = require_LabelList();
    var _ErrorBar = require_ErrorBar();
    var _DataUtils = require_DataUtils();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _ChartUtils = require_ChartUtils();
    var _excluded = ["type", "layout", "connectNulls", "ref"];
    var _excluded2 = ["key"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Line = exports.Line = function(_PureComponent) {
      function Line2() {
        var _this;
        _classCallCheck(this, Line2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Line2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: true,
          totalLength: 0
        });
        _defineProperty(_this, "generateSimpleStrokeDasharray", function(totalLength, length) {
          return "".concat(length, "px ").concat(totalLength - length, "px");
        });
        _defineProperty(_this, "getStrokeDasharray", function(length, totalLength, lines) {
          var lineLength = lines.reduce(function(pre, next) {
            return pre + next;
          });
          if (!lineLength) {
            return _this.generateSimpleStrokeDasharray(totalLength, length);
          }
          var count = Math.floor(length / lineLength);
          var remainLength = length % lineLength;
          var restLength = totalLength - length;
          var remainLines = [];
          for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {
            if (sum + lines[i] > remainLength) {
              remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);
              break;
            }
          }
          var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];
          return [].concat(_toConsumableArray(Line2.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function(line) {
            return "".concat(line, "px");
          }).join(", ");
        });
        _defineProperty(_this, "id", (0, _DataUtils.uniqueId)("recharts-line-"));
        _defineProperty(_this, "pathRef", function(node) {
          _this.mainCurve = node;
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
          _this.setState({
            isAnimationFinished: true
          });
          if (_this.props.onAnimationEnd) {
            _this.props.onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          _this.setState({
            isAnimationFinished: false
          });
          if (_this.props.onAnimationStart) {
            _this.props.onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(Line2, _PureComponent);
      return _createClass(Line2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (!this.props.isAnimationActive) {
            return;
          }
          var totalLength = this.getTotalLength();
          this.setState({
            totalLength
          });
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          if (!this.props.isAnimationActive) {
            return;
          }
          var totalLength = this.getTotalLength();
          if (totalLength !== this.state.totalLength) {
            this.setState({
              totalLength
            });
          }
        }
      }, {
        key: "getTotalLength",
        value: function getTotalLength() {
          var curveDom = this.mainCurve;
          try {
            return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
          } catch (err) {
            return 0;
          }
        }
      }, {
        key: "renderErrorBar",
        value: function renderErrorBar(needClip, clipPathId) {
          if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
            return null;
          }
          var _this$props = this.props, points = _this$props.points, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, layout = _this$props.layout, children = _this$props.children;
          var errorBarItems = (0, _ReactUtils.findAllByType)(children, _ErrorBar.ErrorBar);
          if (!errorBarItems) {
            return null;
          }
          var dataPointFormatter = function dataPointFormatter2(dataPoint, dataKey) {
            return {
              x: dataPoint.x,
              y: dataPoint.y,
              value: dataPoint.value,
              errorVal: (0, _ChartUtils.getValueByDataKey)(dataPoint.payload, dataKey)
            };
          };
          var errorBarProps = {
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
          };
          return _react["default"].createElement(_Layer.Layer, errorBarProps, errorBarItems.map(function(item) {
            return _react["default"].cloneElement(item, {
              key: "bar-".concat(item.props.dataKey),
              data: points,
              xAxis,
              yAxis,
              layout,
              dataPointFormatter
            });
          }));
        }
      }, {
        key: "renderDots",
        value: function renderDots(needClip, clipDot, clipPathId) {
          var isAnimationActive = this.props.isAnimationActive;
          if (isAnimationActive && !this.state.isAnimationFinished) {
            return null;
          }
          var _this$props2 = this.props, dot = _this$props2.dot, points = _this$props2.points, dataKey = _this$props2.dataKey;
          var lineProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customDotProps = (0, _ReactUtils.filterProps)(dot, true);
          var dots = points.map(function(entry, i) {
            var dotProps = _objectSpread(_objectSpread(_objectSpread({
              key: "dot-".concat(i),
              r: 3
            }, lineProps), customDotProps), {}, {
              value: entry.value,
              dataKey,
              cx: entry.x,
              cy: entry.y,
              index: i,
              payload: entry.payload
            });
            return Line2.renderDotItem(dot, dotProps);
          });
          var dotsProps = {
            clipPath: needClip ? "url(#clipPath-".concat(clipDot ? "" : "dots-").concat(clipPathId, ")") : null
          };
          return _react["default"].createElement(_Layer.Layer, _extends({
            className: "recharts-line-dots",
            key: "dots"
          }, dotsProps), dots);
        }
      }, {
        key: "renderCurveStatically",
        value: function renderCurveStatically(points, needClip, clipPathId, props) {
          var _this$props3 = this.props, type = _this$props3.type, layout = _this$props3.layout, connectNulls = _this$props3.connectNulls, ref = _this$props3.ref, others = _objectWithoutProperties(_this$props3, _excluded);
          var curveProps = _objectSpread(_objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(others, true)), {}, {
            fill: "none",
            className: "recharts-line-curve",
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,
            points
          }, props), {}, {
            type,
            layout,
            connectNulls
          });
          return _react["default"].createElement(_Curve.Curve, _extends({}, curveProps, {
            pathRef: this.pathRef
          }));
        }
      }, {
        key: "renderCurveWithAnimation",
        value: function renderCurveWithAnimation(needClip, clipPathId) {
          var _this2 = this;
          var _this$props4 = this.props, points = _this$props4.points, strokeDasharray = _this$props4.strokeDasharray, isAnimationActive = _this$props4.isAnimationActive, animationBegin = _this$props4.animationBegin, animationDuration = _this$props4.animationDuration, animationEasing = _this$props4.animationEasing, animationId = _this$props4.animationId, animateNewValues = _this$props4.animateNewValues, width = _this$props4.width, height = _this$props4.height;
          var _this$state = this.state, prevPoints = _this$state.prevPoints, totalLength = _this$state.totalLength;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "line-".concat(animationId),
            onAnimationEnd: this.handleAnimationEnd,
            onAnimationStart: this.handleAnimationStart
          }, function(_ref) {
            var t = _ref.t;
            if (prevPoints) {
              var prevPointsDiffFactor = prevPoints.length / points.length;
              var stepData = points.map(function(entry, index) {
                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);
                if (prevPoints[prevPointIndex]) {
                  var prev = prevPoints[prevPointIndex];
                  var interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                  var interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                  return _objectSpread(_objectSpread({}, entry), {}, {
                    x: interpolatorX(t),
                    y: interpolatorY(t)
                  });
                }
                if (animateNewValues) {
                  var _interpolatorX = (0, _DataUtils.interpolateNumber)(width * 2, entry.x);
                  var _interpolatorY = (0, _DataUtils.interpolateNumber)(height / 2, entry.y);
                  return _objectSpread(_objectSpread({}, entry), {}, {
                    x: _interpolatorX(t),
                    y: _interpolatorY(t)
                  });
                }
                return _objectSpread(_objectSpread({}, entry), {}, {
                  x: entry.x,
                  y: entry.y
                });
              });
              return _this2.renderCurveStatically(stepData, needClip, clipPathId);
            }
            var interpolator = (0, _DataUtils.interpolateNumber)(0, totalLength);
            var curLength = interpolator(t);
            var currentStrokeDasharray;
            if (strokeDasharray) {
              var lines = "".concat(strokeDasharray).split(/[,\s]+/gim).map(function(num) {
                return parseFloat(num);
              });
              currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);
            } else {
              currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);
            }
            return _this2.renderCurveStatically(points, needClip, clipPathId, {
              strokeDasharray: currentStrokeDasharray
            });
          });
        }
      }, {
        key: "renderCurve",
        value: function renderCurve(needClip, clipPathId) {
          var _this$props5 = this.props, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;
          var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, totalLength = _this$state2.totalLength;
          if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !(0, _isEqual["default"])(prevPoints, points))) {
            return this.renderCurveWithAnimation(needClip, clipPathId);
          }
          return this.renderCurveStatically(points, needClip, clipPathId);
        }
      }, {
        key: "render",
        value: function render() {
          var _filterProps;
          var _this$props6 = this.props, hide = _this$props6.hide, dot = _this$props6.dot, points = _this$props6.points, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, top = _this$props6.top, left = _this$props6.left, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, id = _this$props6.id;
          if (hide || !points || !points.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var hasSinglePoint = points.length === 1;
          var layerClass = (0, _clsx["default"])("recharts-line", className);
          var needClipX = xAxis && xAxis.allowDataOverflow;
          var needClipY = yAxis && yAxis.allowDataOverflow;
          var needClip = needClipX || needClipY;
          var clipPathId = (0, _isNil["default"])(id) ? this.id : id;
          var _ref2 = (_filterProps = (0, _ReactUtils.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {
            r: 3,
            strokeWidth: 2
          }, _ref2$r = _ref2.r, r = _ref2$r === void 0 ? 3 : _ref2$r, _ref2$strokeWidth = _ref2.strokeWidth, strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;
          var _ref3 = (0, _ReactUtils.hasClipDot)(dot) ? dot : {}, _ref3$clipDot = _ref3.clipDot, clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;
          var dotSize = r * 2 + strokeWidth;
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, needClipX || needClipY ? _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
            id: "clipPath-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: needClipX ? left : left - width / 2,
            y: needClipY ? top : top - height / 2,
            width: needClipX ? width : width * 2,
            height: needClipY ? height : height * 2
          })), !clipDot && _react["default"].createElement("clipPath", {
            id: "clipPath-dots-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: left - dotSize / 2,
            y: top - dotSize / 2,
            width: width + dotSize,
            height: height + dotSize
          }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, points));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curPoints: nextProps.points,
              prevPoints: prevState.curPoints
            };
          }
          if (nextProps.points !== prevState.curPoints) {
            return {
              curPoints: nextProps.points
            };
          }
          return null;
        }
      }, {
        key: "repeat",
        value: function repeat(lines, count) {
          var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [0]) : lines;
          var result = [];
          for (var i = 0; i < count; ++i) {
            result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));
          }
          return result;
        }
      }, {
        key: "renderDotItem",
        value: function renderDotItem(option, props) {
          var dotItem;
          if (_react["default"].isValidElement(option)) {
            dotItem = _react["default"].cloneElement(option, props);
          } else if ((0, _isFunction["default"])(option)) {
            dotItem = option(props);
          } else {
            var key = props.key, dotProps = _objectWithoutProperties(props, _excluded2);
            var className = (0, _clsx["default"])("recharts-line-dot", typeof option !== "boolean" ? option.className : "");
            dotItem = _react["default"].createElement(_Dot.Dot, _extends({
              key
            }, dotProps, {
              className
            }));
          }
          return dotItem;
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Line, "displayName", "Line");
    _defineProperty(Line, "defaultProps", {
      xAxisId: 0,
      yAxisId: 0,
      connectNulls: false,
      activeDot: true,
      dot: true,
      legendType: "line",
      stroke: "#3182bd",
      strokeWidth: 1,
      fill: "#fff",
      points: [],
      isAnimationActive: !_Global.Global.isSsr,
      animateNewValues: true,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease",
      hide: false,
      label: false
    });
    _defineProperty(Line, "getComposedData", function(_ref4) {
      var props = _ref4.props, xAxis = _ref4.xAxis, yAxis = _ref4.yAxis, xAxisTicks = _ref4.xAxisTicks, yAxisTicks = _ref4.yAxisTicks, dataKey = _ref4.dataKey, bandSize = _ref4.bandSize, displayedData = _ref4.displayedData, offset = _ref4.offset;
      var layout = props.layout;
      var points = displayedData.map(function(entry, index) {
        var value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);
        if (layout === "horizontal") {
          return {
            x: (0, _ChartUtils.getCateCoordinateOfLine)({
              axis: xAxis,
              ticks: xAxisTicks,
              bandSize,
              entry,
              index
            }),
            y: (0, _isNil["default"])(value) ? null : yAxis.scale(value),
            value,
            payload: entry
          };
        }
        return {
          x: (0, _isNil["default"])(value) ? null : xAxis.scale(value),
          y: (0, _ChartUtils.getCateCoordinateOfLine)({
            axis: yAxis,
            ticks: yAxisTicks,
            bandSize,
            entry,
            index
          }),
          value,
          payload: entry
        };
      });
      return _objectSpread({
        points,
        layout
      }, offset);
    });
  }
});

// node_modules/recharts/lib/cartesian/Area.js
var require_Area = __commonJS({
  "node_modules/recharts/lib/cartesian/Area.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Area = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _max = _interopRequireDefault(require_max2());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isNaN = _interopRequireDefault(require_isNaN());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _Curve = require_Curve();
    var _Dot = require_Dot();
    var _Layer = require_Layer();
    var _LabelList = require_LabelList();
    var _Global = require_Global();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["layout", "type", "stroke", "connectNulls", "isRange", "ref"];
    var _excluded2 = ["key"];
    var _Area;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Area = exports.Area = function(_PureComponent) {
      function Area2() {
        var _this;
        _classCallCheck(this, Area2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Area2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: true
        });
        _defineProperty(_this, "id", (0, _DataUtils.uniqueId)("recharts-area-"));
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(Area2, _PureComponent);
      return _createClass(Area2, [{
        key: "renderDots",
        value: function renderDots(needClip, clipDot, clipPathId) {
          var isAnimationActive = this.props.isAnimationActive;
          var isAnimationFinished = this.state.isAnimationFinished;
          if (isAnimationActive && !isAnimationFinished) {
            return null;
          }
          var _this$props = this.props, dot = _this$props.dot, points = _this$props.points, dataKey = _this$props.dataKey;
          var areaProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customDotProps = (0, _ReactUtils.filterProps)(dot, true);
          var dots = points.map(function(entry, i) {
            var dotProps = _objectSpread(_objectSpread(_objectSpread({
              key: "dot-".concat(i),
              r: 3
            }, areaProps), customDotProps), {}, {
              index: i,
              cx: entry.x,
              cy: entry.y,
              dataKey,
              value: entry.value,
              payload: entry.payload,
              points
            });
            return Area2.renderDotItem(dot, dotProps);
          });
          var dotsProps = {
            clipPath: needClip ? "url(#clipPath-".concat(clipDot ? "" : "dots-").concat(clipPathId, ")") : null
          };
          return _react["default"].createElement(_Layer.Layer, _extends({
            className: "recharts-area-dots"
          }, dotsProps), dots);
        }
      }, {
        key: "renderHorizontalRect",
        value: function renderHorizontalRect(alpha) {
          var _this$props2 = this.props, baseLine = _this$props2.baseLine, points = _this$props2.points, strokeWidth = _this$props2.strokeWidth;
          var startX = points[0].x;
          var endX = points[points.length - 1].x;
          var width = alpha * Math.abs(startX - endX);
          var maxY = (0, _max["default"])(points.map(function(entry) {
            return entry.y || 0;
          }));
          if ((0, _DataUtils.isNumber)(baseLine) && typeof baseLine === "number") {
            maxY = Math.max(baseLine, maxY);
          } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {
            maxY = Math.max((0, _max["default"])(baseLine.map(function(entry) {
              return entry.y || 0;
            })), maxY);
          }
          if ((0, _DataUtils.isNumber)(maxY)) {
            return _react["default"].createElement("rect", {
              x: startX < endX ? startX : startX - width,
              y: 0,
              width,
              height: Math.floor(maxY + (strokeWidth ? parseInt("".concat(strokeWidth), 10) : 1))
            });
          }
          return null;
        }
      }, {
        key: "renderVerticalRect",
        value: function renderVerticalRect(alpha) {
          var _this$props3 = this.props, baseLine = _this$props3.baseLine, points = _this$props3.points, strokeWidth = _this$props3.strokeWidth;
          var startY = points[0].y;
          var endY = points[points.length - 1].y;
          var height = alpha * Math.abs(startY - endY);
          var maxX = (0, _max["default"])(points.map(function(entry) {
            return entry.x || 0;
          }));
          if ((0, _DataUtils.isNumber)(baseLine) && typeof baseLine === "number") {
            maxX = Math.max(baseLine, maxX);
          } else if (baseLine && Array.isArray(baseLine) && baseLine.length) {
            maxX = Math.max((0, _max["default"])(baseLine.map(function(entry) {
              return entry.x || 0;
            })), maxX);
          }
          if ((0, _DataUtils.isNumber)(maxX)) {
            return _react["default"].createElement("rect", {
              x: 0,
              y: startY < endY ? startY : startY - height,
              width: maxX + (strokeWidth ? parseInt("".concat(strokeWidth), 10) : 1),
              height: Math.floor(height)
            });
          }
          return null;
        }
      }, {
        key: "renderClipRect",
        value: function renderClipRect(alpha) {
          var layout = this.props.layout;
          if (layout === "vertical") {
            return this.renderVerticalRect(alpha);
          }
          return this.renderHorizontalRect(alpha);
        }
      }, {
        key: "renderAreaStatically",
        value: function renderAreaStatically(points, baseLine, needClip, clipPathId) {
          var _this$props4 = this.props, layout = _this$props4.layout, type = _this$props4.type, stroke = _this$props4.stroke, connectNulls = _this$props4.connectNulls, isRange = _this$props4.isRange, ref = _this$props4.ref, others = _objectWithoutProperties(_this$props4, _excluded);
          return _react["default"].createElement(_Layer.Layer, {
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
          }, _react["default"].createElement(_Curve.Curve, _extends({}, (0, _ReactUtils.filterProps)(others, true), {
            points,
            connectNulls,
            type,
            baseLine,
            layout,
            stroke: "none",
            className: "recharts-area-area"
          })), stroke !== "none" && _react["default"].createElement(_Curve.Curve, _extends({}, (0, _ReactUtils.filterProps)(this.props, false), {
            className: "recharts-area-curve",
            layout,
            type,
            connectNulls,
            fill: "none",
            points
          })), stroke !== "none" && isRange && _react["default"].createElement(_Curve.Curve, _extends({}, (0, _ReactUtils.filterProps)(this.props, false), {
            className: "recharts-area-curve",
            layout,
            type,
            connectNulls,
            fill: "none",
            points: baseLine
          })));
        }
      }, {
        key: "renderAreaWithAnimation",
        value: function renderAreaWithAnimation(needClip, clipPathId) {
          var _this2 = this;
          var _this$props5 = this.props, points = _this$props5.points, baseLine = _this$props5.baseLine, isAnimationActive = _this$props5.isAnimationActive, animationBegin = _this$props5.animationBegin, animationDuration = _this$props5.animationDuration, animationEasing = _this$props5.animationEasing, animationId = _this$props5.animationId;
          var _this$state = this.state, prevPoints = _this$state.prevPoints, prevBaseLine = _this$state.prevBaseLine;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "area-".concat(animationId),
            onAnimationEnd: this.handleAnimationEnd,
            onAnimationStart: this.handleAnimationStart
          }, function(_ref) {
            var t = _ref.t;
            if (prevPoints) {
              var prevPointsDiffFactor = prevPoints.length / points.length;
              var stepPoints = points.map(function(entry, index) {
                var prevPointIndex = Math.floor(index * prevPointsDiffFactor);
                if (prevPoints[prevPointIndex]) {
                  var prev = prevPoints[prevPointIndex];
                  var interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                  var interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                  return _objectSpread(_objectSpread({}, entry), {}, {
                    x: interpolatorX(t),
                    y: interpolatorY(t)
                  });
                }
                return entry;
              });
              var stepBaseLine;
              if ((0, _DataUtils.isNumber)(baseLine) && typeof baseLine === "number") {
                var interpolator = (0, _DataUtils.interpolateNumber)(prevBaseLine, baseLine);
                stepBaseLine = interpolator(t);
              } else if ((0, _isNil["default"])(baseLine) || (0, _isNaN["default"])(baseLine)) {
                var _interpolator = (0, _DataUtils.interpolateNumber)(prevBaseLine, 0);
                stepBaseLine = _interpolator(t);
              } else {
                stepBaseLine = baseLine.map(function(entry, index) {
                  var prevPointIndex = Math.floor(index * prevPointsDiffFactor);
                  if (prevBaseLine[prevPointIndex]) {
                    var prev = prevBaseLine[prevPointIndex];
                    var interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                    var interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                    return _objectSpread(_objectSpread({}, entry), {}, {
                      x: interpolatorX(t),
                      y: interpolatorY(t)
                    });
                  }
                  return entry;
                });
              }
              return _this2.renderAreaStatically(stepPoints, stepBaseLine, needClip, clipPathId);
            }
            return _react["default"].createElement(_Layer.Layer, null, _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
              id: "animationClipPath-".concat(clipPathId)
            }, _this2.renderClipRect(t))), _react["default"].createElement(_Layer.Layer, {
              clipPath: "url(#animationClipPath-".concat(clipPathId, ")")
            }, _this2.renderAreaStatically(points, baseLine, needClip, clipPathId)));
          });
        }
      }, {
        key: "renderArea",
        value: function renderArea(needClip, clipPathId) {
          var _this$props6 = this.props, points = _this$props6.points, baseLine = _this$props6.baseLine, isAnimationActive = _this$props6.isAnimationActive;
          var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, prevBaseLine = _this$state2.prevBaseLine, totalLength = _this$state2.totalLength;
          if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !(0, _isEqual["default"])(prevPoints, points) || !(0, _isEqual["default"])(prevBaseLine, baseLine))) {
            return this.renderAreaWithAnimation(needClip, clipPathId);
          }
          return this.renderAreaStatically(points, baseLine, needClip, clipPathId);
        }
      }, {
        key: "render",
        value: function render() {
          var _filterProps;
          var _this$props7 = this.props, hide = _this$props7.hide, dot = _this$props7.dot, points = _this$props7.points, className = _this$props7.className, top = _this$props7.top, left = _this$props7.left, xAxis = _this$props7.xAxis, yAxis = _this$props7.yAxis, width = _this$props7.width, height = _this$props7.height, isAnimationActive = _this$props7.isAnimationActive, id = _this$props7.id;
          if (hide || !points || !points.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var hasSinglePoint = points.length === 1;
          var layerClass = (0, _clsx["default"])("recharts-area", className);
          var needClipX = xAxis && xAxis.allowDataOverflow;
          var needClipY = yAxis && yAxis.allowDataOverflow;
          var needClip = needClipX || needClipY;
          var clipPathId = (0, _isNil["default"])(id) ? this.id : id;
          var _ref2 = (_filterProps = (0, _ReactUtils.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {
            r: 3,
            strokeWidth: 2
          }, _ref2$r = _ref2.r, r = _ref2$r === void 0 ? 3 : _ref2$r, _ref2$strokeWidth = _ref2.strokeWidth, strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;
          var _ref3 = (0, _ReactUtils.hasClipDot)(dot) ? dot : {}, _ref3$clipDot = _ref3.clipDot, clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;
          var dotSize = r * 2 + strokeWidth;
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, needClipX || needClipY ? _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
            id: "clipPath-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: needClipX ? left : left - width / 2,
            y: needClipY ? top : top - height / 2,
            width: needClipX ? width : width * 2,
            height: needClipY ? height : height * 2
          })), !clipDot && _react["default"].createElement("clipPath", {
            id: "clipPath-dots-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: left - dotSize / 2,
            y: top - dotSize / 2,
            width: width + dotSize,
            height: height + dotSize
          }))) : null, !hasSinglePoint ? this.renderArea(needClip, clipPathId) : null, (dot || hasSinglePoint) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, points));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curPoints: nextProps.points,
              curBaseLine: nextProps.baseLine,
              prevPoints: prevState.curPoints,
              prevBaseLine: prevState.curBaseLine
            };
          }
          if (nextProps.points !== prevState.curPoints || nextProps.baseLine !== prevState.curBaseLine) {
            return {
              curPoints: nextProps.points,
              curBaseLine: nextProps.baseLine
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _Area = Area;
    _defineProperty(Area, "displayName", "Area");
    _defineProperty(Area, "defaultProps", {
      stroke: "#3182bd",
      fill: "#3182bd",
      fillOpacity: 0.6,
      xAxisId: 0,
      yAxisId: 0,
      legendType: "line",
      connectNulls: false,
      // points of area
      points: [],
      dot: false,
      activeDot: true,
      hide: false,
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "ease"
    });
    _defineProperty(Area, "getBaseValue", function(props, item, xAxis, yAxis) {
      var layout = props.layout, chartBaseValue = props.baseValue;
      var itemBaseValue = item.props.baseValue;
      var baseValue = itemBaseValue !== null && itemBaseValue !== void 0 ? itemBaseValue : chartBaseValue;
      if ((0, _DataUtils.isNumber)(baseValue) && typeof baseValue === "number") {
        return baseValue;
      }
      var numericAxis = layout === "horizontal" ? yAxis : xAxis;
      var domain = numericAxis.scale.domain();
      if (numericAxis.type === "number") {
        var domainMax = Math.max(domain[0], domain[1]);
        var domainMin = Math.min(domain[0], domain[1]);
        if (baseValue === "dataMin") {
          return domainMin;
        }
        if (baseValue === "dataMax") {
          return domainMax;
        }
        return domainMax < 0 ? domainMax : Math.max(Math.min(domain[0], domain[1]), 0);
      }
      if (baseValue === "dataMin") {
        return domain[0];
      }
      if (baseValue === "dataMax") {
        return domain[1];
      }
      return domain[0];
    });
    _defineProperty(Area, "getComposedData", function(_ref4) {
      var props = _ref4.props, item = _ref4.item, xAxis = _ref4.xAxis, yAxis = _ref4.yAxis, xAxisTicks = _ref4.xAxisTicks, yAxisTicks = _ref4.yAxisTicks, bandSize = _ref4.bandSize, dataKey = _ref4.dataKey, stackedData = _ref4.stackedData, dataStartIndex = _ref4.dataStartIndex, displayedData = _ref4.displayedData, offset = _ref4.offset;
      var layout = props.layout;
      var hasStack = stackedData && stackedData.length;
      var baseValue = _Area.getBaseValue(props, item, xAxis, yAxis);
      var isHorizontalLayout = layout === "horizontal";
      var isRange = false;
      var points = displayedData.map(function(entry, index) {
        var value;
        if (hasStack) {
          value = stackedData[dataStartIndex + index];
        } else {
          value = (0, _ChartUtils.getValueByDataKey)(entry, dataKey);
          if (!Array.isArray(value)) {
            value = [baseValue, value];
          } else {
            isRange = true;
          }
        }
        var isBreakPoint = value[1] == null || hasStack && (0, _ChartUtils.getValueByDataKey)(entry, dataKey) == null;
        if (isHorizontalLayout) {
          return {
            x: (0, _ChartUtils.getCateCoordinateOfLine)({
              axis: xAxis,
              ticks: xAxisTicks,
              bandSize,
              entry,
              index
            }),
            y: isBreakPoint ? null : yAxis.scale(value[1]),
            value,
            payload: entry
          };
        }
        return {
          x: isBreakPoint ? null : xAxis.scale(value[1]),
          y: (0, _ChartUtils.getCateCoordinateOfLine)({
            axis: yAxis,
            ticks: yAxisTicks,
            bandSize,
            entry,
            index
          }),
          value,
          payload: entry
        };
      });
      var baseLine;
      if (hasStack || isRange) {
        baseLine = points.map(function(entry) {
          var x = Array.isArray(entry.value) ? entry.value[0] : null;
          if (isHorizontalLayout) {
            return {
              x: entry.x,
              y: x != null && entry.y != null ? yAxis.scale(x) : null
            };
          }
          return {
            x: x != null ? xAxis.scale(x) : null,
            y: entry.y
          };
        });
      } else {
        baseLine = isHorizontalLayout ? yAxis.scale(baseValue) : xAxis.scale(baseValue);
      }
      return _objectSpread({
        points,
        baseLine,
        layout,
        isRange
      }, offset);
    });
    _defineProperty(Area, "renderDotItem", function(option, props) {
      var dotItem;
      if (_react["default"].isValidElement(option)) {
        dotItem = _react["default"].cloneElement(option, props);
      } else if ((0, _isFunction["default"])(option)) {
        dotItem = option(props);
      } else {
        var className = (0, _clsx["default"])("recharts-area-dot", typeof option !== "boolean" ? option.className : "");
        var key = props.key, rest = _objectWithoutProperties(props, _excluded2);
        dotItem = _react["default"].createElement(_Dot.Dot, _extends({}, rest, {
          key,
          className
        }));
      }
      return dotItem;
    });
  }
});

// node_modules/recharts/lib/cartesian/ZAxis.js
var require_ZAxis = __commonJS({
  "node_modules/recharts/lib/cartesian/ZAxis.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ZAxis = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var ZAxis = exports.ZAxis = function(_React$Component) {
      function ZAxis2() {
        _classCallCheck(this, ZAxis2);
        return _callSuper(this, ZAxis2, arguments);
      }
      _inherits(ZAxis2, _React$Component);
      return _createClass(ZAxis2, [{
        key: "render",
        value: function render() {
          return null;
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(ZAxis, "displayName", "ZAxis");
    _defineProperty(ZAxis, "defaultProps", {
      zAxisId: 0,
      range: [64, 64],
      scale: "auto",
      type: "number"
    });
  }
});

// node_modules/recharts/lib/util/ScatterUtils.js
var require_ScatterUtils = __commonJS({
  "node_modules/recharts/lib/util/ScatterUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ScatterSymbol = ScatterSymbol;
    var _react = _interopRequireDefault(require_react());
    var _Symbols = require_Symbols();
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    var _excluded = ["option", "isActive"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function ScatterSymbol(_ref) {
      var option = _ref.option, isActive = _ref.isActive, props = _objectWithoutProperties(_ref, _excluded);
      if (typeof option === "string") {
        return _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
          option: _react["default"].createElement(_Symbols.Symbols, _extends({
            type: option
          }, props)),
          isActive,
          shapeType: "symbols"
        }, props));
      }
      return _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
        option,
        isActive,
        shapeType: "symbols"
      }, props));
    }
  }
});

// node_modules/recharts/lib/cartesian/Scatter.js
var require_Scatter = __commonJS({
  "node_modules/recharts/lib/cartesian/Scatter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Scatter = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _LabelList = require_LabelList();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _ZAxis = require_ZAxis();
    var _Curve = require_Curve();
    var _ErrorBar = require_ErrorBar();
    var _Cell = require_Cell();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _types = require_types();
    var _ScatterUtils = require_ScatterUtils();
    var _Scatter;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Scatter = exports.Scatter = function(_PureComponent) {
      function Scatter2() {
        var _this;
        _classCallCheck(this, Scatter2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Scatter2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: false
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
          _this.setState({
            isAnimationFinished: true
          });
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          _this.setState({
            isAnimationFinished: false
          });
        });
        _defineProperty(_this, "id", (0, _DataUtils.uniqueId)("recharts-scatter-"));
        return _this;
      }
      _inherits(Scatter2, _PureComponent);
      return _createClass(Scatter2, [{
        key: "renderSymbolsStatically",
        value: function renderSymbolsStatically(points) {
          var _this2 = this;
          var _this$props = this.props, shape = _this$props.shape, activeShape = _this$props.activeShape, activeIndex = _this$props.activeIndex;
          var baseProps = (0, _ReactUtils.filterProps)(this.props, false);
          return points.map(function(entry, i) {
            var isActive = activeIndex === i;
            var option = isActive ? activeShape : shape;
            var props = _objectSpread(_objectSpread({}, baseProps), entry);
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: "recharts-scatter-symbol",
              key: "symbol-".concat(entry === null || entry === void 0 ? void 0 : entry.cx, "-").concat(entry === null || entry === void 0 ? void 0 : entry.cy, "-").concat(entry === null || entry === void 0 ? void 0 : entry.size, "-").concat(i)
            }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
              role: "img"
            }), _react["default"].createElement(_ScatterUtils.ScatterSymbol, _extends({
              option,
              isActive,
              key: "symbol-".concat(i)
            }, props)));
          });
        }
      }, {
        key: "renderSymbolsWithAnimation",
        value: function renderSymbolsWithAnimation() {
          var _this3 = this;
          var _this$props2 = this.props, points = _this$props2.points, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;
          var prevPoints = this.state.prevPoints;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "pie-".concat(animationId),
            onAnimationEnd: this.handleAnimationEnd,
            onAnimationStart: this.handleAnimationStart
          }, function(_ref) {
            var t = _ref.t;
            var stepData = points.map(function(entry, index) {
              var prev = prevPoints && prevPoints[index];
              if (prev) {
                var interpolatorCx = (0, _DataUtils.interpolateNumber)(prev.cx, entry.cx);
                var interpolatorCy = (0, _DataUtils.interpolateNumber)(prev.cy, entry.cy);
                var interpolatorSize = (0, _DataUtils.interpolateNumber)(prev.size, entry.size);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  cx: interpolatorCx(t),
                  cy: interpolatorCy(t),
                  size: interpolatorSize(t)
                });
              }
              var interpolator = (0, _DataUtils.interpolateNumber)(0, entry.size);
              return _objectSpread(_objectSpread({}, entry), {}, {
                size: interpolator(t)
              });
            });
            return _react["default"].createElement(_Layer.Layer, null, _this3.renderSymbolsStatically(stepData));
          });
        }
      }, {
        key: "renderSymbols",
        value: function renderSymbols() {
          var _this$props3 = this.props, points = _this$props3.points, isAnimationActive = _this$props3.isAnimationActive;
          var prevPoints = this.state.prevPoints;
          if (isAnimationActive && points && points.length && (!prevPoints || !(0, _isEqual["default"])(prevPoints, points))) {
            return this.renderSymbolsWithAnimation();
          }
          return this.renderSymbolsStatically(points);
        }
      }, {
        key: "renderErrorBar",
        value: function renderErrorBar() {
          var isAnimationActive = this.props.isAnimationActive;
          if (isAnimationActive && !this.state.isAnimationFinished) {
            return null;
          }
          var _this$props4 = this.props, points = _this$props4.points, xAxis = _this$props4.xAxis, yAxis = _this$props4.yAxis, children = _this$props4.children;
          var errorBarItems = (0, _ReactUtils.findAllByType)(children, _ErrorBar.ErrorBar);
          if (!errorBarItems) {
            return null;
          }
          return errorBarItems.map(function(item, i) {
            var _item$props = item.props, direction = _item$props.direction, errorDataKey = _item$props.dataKey;
            return _react["default"].cloneElement(item, {
              key: "".concat(direction, "-").concat(errorDataKey, "-").concat(points[i]),
              data: points,
              xAxis,
              yAxis,
              layout: direction === "x" ? "vertical" : "horizontal",
              dataPointFormatter: function dataPointFormatter(dataPoint, dataKey) {
                return {
                  x: dataPoint.cx,
                  y: dataPoint.cy,
                  value: direction === "x" ? +dataPoint.node.x : +dataPoint.node.y,
                  errorVal: (0, _ChartUtils.getValueByDataKey)(dataPoint, dataKey)
                };
              }
            });
          });
        }
      }, {
        key: "renderLine",
        value: function renderLine() {
          var _this$props5 = this.props, points = _this$props5.points, line = _this$props5.line, lineType = _this$props5.lineType, lineJointType = _this$props5.lineJointType;
          var scatterProps = (0, _ReactUtils.filterProps)(this.props, false);
          var customLineProps = (0, _ReactUtils.filterProps)(line, false);
          var linePoints, lineItem;
          if (lineType === "joint") {
            linePoints = points.map(function(entry) {
              return {
                x: entry.cx,
                y: entry.cy
              };
            });
          } else if (lineType === "fitting") {
            var _getLinearRegression = (0, _DataUtils.getLinearRegression)(points), xmin = _getLinearRegression.xmin, xmax = _getLinearRegression.xmax, a = _getLinearRegression.a, b = _getLinearRegression.b;
            var linearExp = function linearExp2(x) {
              return a * x + b;
            };
            linePoints = [{
              x: xmin,
              y: linearExp(xmin)
            }, {
              x: xmax,
              y: linearExp(xmax)
            }];
          }
          var lineProps = _objectSpread(_objectSpread(_objectSpread({}, scatterProps), {}, {
            fill: "none",
            stroke: scatterProps && scatterProps.fill
          }, customLineProps), {}, {
            points: linePoints
          });
          if (_react["default"].isValidElement(line)) {
            lineItem = _react["default"].cloneElement(line, lineProps);
          } else if ((0, _isFunction["default"])(line)) {
            lineItem = line(lineProps);
          } else {
            lineItem = _react["default"].createElement(_Curve.Curve, _extends({}, lineProps, {
              type: lineJointType
            }));
          }
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-scatter-line",
            key: "recharts-scatter-line"
          }, lineItem);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props6 = this.props, hide = _this$props6.hide, points = _this$props6.points, line = _this$props6.line, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, left = _this$props6.left, top = _this$props6.top, width = _this$props6.width, height = _this$props6.height, id = _this$props6.id, isAnimationActive = _this$props6.isAnimationActive;
          if (hide || !points || !points.length) {
            return null;
          }
          var isAnimationFinished = this.state.isAnimationFinished;
          var layerClass = (0, _clsx["default"])("recharts-scatter", className);
          var needClipX = xAxis && xAxis.allowDataOverflow;
          var needClipY = yAxis && yAxis.allowDataOverflow;
          var needClip = needClipX || needClipY;
          var clipPathId = (0, _isNil["default"])(id) ? this.id : id;
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass,
            clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
          }, needClipX || needClipY ? _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
            id: "clipPath-".concat(clipPathId)
          }, _react["default"].createElement("rect", {
            x: needClipX ? left : left - width / 2,
            y: needClipY ? top : top - height / 2,
            width: needClipX ? width : width * 2,
            height: needClipY ? height : height * 2
          }))) : null, line && this.renderLine(), this.renderErrorBar(), _react["default"].createElement(_Layer.Layer, {
            key: "recharts-scatter-symbols"
          }, this.renderSymbols()), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, points));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curPoints: nextProps.points,
              prevPoints: prevState.curPoints
            };
          }
          if (nextProps.points !== prevState.curPoints) {
            return {
              curPoints: nextProps.points
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _Scatter = Scatter;
    _defineProperty(Scatter, "displayName", "Scatter");
    _defineProperty(Scatter, "defaultProps", {
      xAxisId: 0,
      yAxisId: 0,
      zAxisId: 0,
      legendType: "circle",
      lineType: "joint",
      lineJointType: "linear",
      data: [],
      shape: "circle",
      hide: false,
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 400,
      animationEasing: "linear"
    });
    _defineProperty(Scatter, "getComposedData", function(_ref2) {
      var xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, zAxis = _ref2.zAxis, item = _ref2.item, displayedData = _ref2.displayedData, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, offset = _ref2.offset;
      var tooltipType = item.props.tooltipType;
      var cells = (0, _ReactUtils.findAllByType)(item.props.children, _Cell.Cell);
      var xAxisDataKey = (0, _isNil["default"])(xAxis.dataKey) ? item.props.dataKey : xAxis.dataKey;
      var yAxisDataKey = (0, _isNil["default"])(yAxis.dataKey) ? item.props.dataKey : yAxis.dataKey;
      var zAxisDataKey = zAxis && zAxis.dataKey;
      var defaultRangeZ = zAxis ? zAxis.range : _ZAxis.ZAxis.defaultProps.range;
      var defaultZ = defaultRangeZ && defaultRangeZ[0];
      var xBandSize = xAxis.scale.bandwidth ? xAxis.scale.bandwidth() : 0;
      var yBandSize = yAxis.scale.bandwidth ? yAxis.scale.bandwidth() : 0;
      var points = displayedData.map(function(entry, index) {
        var x = (0, _ChartUtils.getValueByDataKey)(entry, xAxisDataKey);
        var y = (0, _ChartUtils.getValueByDataKey)(entry, yAxisDataKey);
        var z = !(0, _isNil["default"])(zAxisDataKey) && (0, _ChartUtils.getValueByDataKey)(entry, zAxisDataKey) || "-";
        var tooltipPayload = [{
          name: (0, _isNil["default"])(xAxis.dataKey) ? item.props.name : xAxis.name || xAxis.dataKey,
          unit: xAxis.unit || "",
          value: x,
          payload: entry,
          dataKey: xAxisDataKey,
          type: tooltipType
        }, {
          name: (0, _isNil["default"])(yAxis.dataKey) ? item.props.name : yAxis.name || yAxis.dataKey,
          unit: yAxis.unit || "",
          value: y,
          payload: entry,
          dataKey: yAxisDataKey,
          type: tooltipType
        }];
        if (z !== "-") {
          tooltipPayload.push({
            name: zAxis.name || zAxis.dataKey,
            unit: zAxis.unit || "",
            value: z,
            payload: entry,
            dataKey: zAxisDataKey,
            type: tooltipType
          });
        }
        var cx = (0, _ChartUtils.getCateCoordinateOfLine)({
          axis: xAxis,
          ticks: xAxisTicks,
          bandSize: xBandSize,
          entry,
          index,
          dataKey: xAxisDataKey
        });
        var cy = (0, _ChartUtils.getCateCoordinateOfLine)({
          axis: yAxis,
          ticks: yAxisTicks,
          bandSize: yBandSize,
          entry,
          index,
          dataKey: yAxisDataKey
        });
        var size = z !== "-" ? zAxis.scale(z) : defaultZ;
        var radius = Math.sqrt(Math.max(size, 0) / Math.PI);
        return _objectSpread(_objectSpread({}, entry), {}, {
          cx,
          cy,
          x: cx - radius,
          y: cy - radius,
          xAxis,
          yAxis,
          zAxis,
          width: 2 * radius,
          height: 2 * radius,
          size,
          node: {
            x,
            y,
            z
          },
          tooltipPayload,
          tooltipPosition: {
            x: cx,
            y: cy
          },
          payload: entry
        }, cells && cells[index] && cells[index].props);
      });
      return _objectSpread({
        points
      }, offset);
    });
  }
});

// node_modules/recharts/lib/cartesian/XAxis.js
var require_XAxis = __commonJS({
  "node_modules/recharts/lib/cartesian/XAxis.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.XAxis = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _chartLayoutContext = require_chartLayoutContext();
    var _CartesianAxis = require_CartesianAxis();
    var _ChartUtils = require_ChartUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function XAxisImpl(_ref) {
      var xAxisId = _ref.xAxisId;
      var width = (0, _chartLayoutContext.useChartWidth)();
      var height = (0, _chartLayoutContext.useChartHeight)();
      var axisOptions = (0, _chartLayoutContext.useXAxisOrThrow)(xAxisId);
      if (axisOptions == null) {
        return null;
      }
      return (
        // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
        _react["default"].createElement(_CartesianAxis.CartesianAxis, _extends({}, axisOptions, {
          className: (0, _clsx["default"])("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
          viewBox: {
            x: 0,
            y: 0,
            width,
            height
          },
          ticksGenerator: function ticksGenerator(axis) {
            return (0, _ChartUtils.getTicksOfAxis)(axis, true);
          }
        }))
      );
    }
    var XAxis = exports.XAxis = function(_React$Component) {
      function XAxis2() {
        _classCallCheck(this, XAxis2);
        return _callSuper(this, XAxis2, arguments);
      }
      _inherits(XAxis2, _React$Component);
      return _createClass(XAxis2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(XAxisImpl, this.props);
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(XAxis, "displayName", "XAxis");
    _defineProperty(XAxis, "defaultProps", {
      allowDecimals: true,
      hide: false,
      orientation: "bottom",
      width: 0,
      height: 30,
      mirror: false,
      xAxisId: 0,
      tickCount: 5,
      type: "category",
      padding: {
        left: 0,
        right: 0
      },
      allowDataOverflow: false,
      scale: "auto",
      reversed: false,
      allowDuplicatedCategory: true
    });
  }
});

// node_modules/recharts/lib/cartesian/YAxis.js
var require_YAxis = __commonJS({
  "node_modules/recharts/lib/cartesian/YAxis.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.YAxis = void 0;
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _chartLayoutContext = require_chartLayoutContext();
    var _CartesianAxis = require_CartesianAxis();
    var _ChartUtils = require_ChartUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    var YAxisImpl = function YAxisImpl2(_ref) {
      var yAxisId = _ref.yAxisId;
      var width = (0, _chartLayoutContext.useChartWidth)();
      var height = (0, _chartLayoutContext.useChartHeight)();
      var axisOptions = (0, _chartLayoutContext.useYAxisOrThrow)(yAxisId);
      if (axisOptions == null) {
        return null;
      }
      return (
        // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.
        _react["default"].createElement(_CartesianAxis.CartesianAxis, _extends({}, axisOptions, {
          className: (0, _clsx["default"])("recharts-".concat(axisOptions.axisType, " ").concat(axisOptions.axisType), axisOptions.className),
          viewBox: {
            x: 0,
            y: 0,
            width,
            height
          },
          ticksGenerator: function ticksGenerator(axis) {
            return (0, _ChartUtils.getTicksOfAxis)(axis, true);
          }
        }))
      );
    };
    var YAxis = exports.YAxis = function(_React$Component) {
      function YAxis2() {
        _classCallCheck(this, YAxis2);
        return _callSuper(this, YAxis2, arguments);
      }
      _inherits(YAxis2, _React$Component);
      return _createClass(YAxis2, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement(YAxisImpl, this.props);
        }
      }]);
    }(_react["default"].Component);
    _defineProperty(YAxis, "displayName", "YAxis");
    _defineProperty(YAxis, "defaultProps", {
      allowDuplicatedCategory: true,
      allowDecimals: true,
      hide: false,
      orientation: "left",
      width: 60,
      height: 0,
      mirror: false,
      yAxisId: 0,
      tickCount: 5,
      type: "number",
      padding: {
        top: 0,
        bottom: 0
      },
      allowDataOverflow: false,
      scale: "auto",
      reversed: false
    });
  }
});

// node_modules/recharts/lib/util/DetectReferenceElementsDomain.js
var require_DetectReferenceElementsDomain = __commonJS({
  "node_modules/recharts/lib/util/DetectReferenceElementsDomain.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.detectReferenceElementsDomain = void 0;
    var _ReferenceDot = require_ReferenceDot();
    var _ReferenceLine = require_ReferenceLine();
    var _ReferenceArea = require_ReferenceArea();
    var _IfOverflowMatches = require_IfOverflowMatches();
    var _ReactUtils = require_ReactUtils();
    var _DataUtils = require_DataUtils();
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var detectReferenceElementsDomain = exports.detectReferenceElementsDomain = function detectReferenceElementsDomain2(children, domain, axisId, axisType, specifiedTicks) {
      var lines = (0, _ReactUtils.findAllByType)(children, _ReferenceLine.ReferenceLine);
      var dots = (0, _ReactUtils.findAllByType)(children, _ReferenceDot.ReferenceDot);
      var elements = [].concat(_toConsumableArray(lines), _toConsumableArray(dots));
      var areas = (0, _ReactUtils.findAllByType)(children, _ReferenceArea.ReferenceArea);
      var idKey = "".concat(axisType, "Id");
      var valueKey = axisType[0];
      var finalDomain = domain;
      if (elements.length) {
        finalDomain = elements.reduce(function(result, el) {
          if (el.props[idKey] === axisId && (0, _IfOverflowMatches.ifOverflowMatches)(el.props, "extendDomain") && (0, _DataUtils.isNumber)(el.props[valueKey])) {
            var value = el.props[valueKey];
            return [Math.min(result[0], value), Math.max(result[1], value)];
          }
          return result;
        }, finalDomain);
      }
      if (areas.length) {
        var key1 = "".concat(valueKey, "1");
        var key2 = "".concat(valueKey, "2");
        finalDomain = areas.reduce(function(result, el) {
          if (el.props[idKey] === axisId && (0, _IfOverflowMatches.ifOverflowMatches)(el.props, "extendDomain") && (0, _DataUtils.isNumber)(el.props[key1]) && (0, _DataUtils.isNumber)(el.props[key2])) {
            var value1 = el.props[key1];
            var value2 = el.props[key2];
            return [Math.min(result[0], value1, value2), Math.max(result[1], value1, value2)];
          }
          return result;
        }, finalDomain);
      }
      if (specifiedTicks && specifiedTicks.length) {
        finalDomain = specifiedTicks.reduce(function(result, tick) {
          if ((0, _DataUtils.isNumber)(tick)) {
            return [Math.min(result[0], tick), Math.max(result[1], tick)];
          }
          return result;
        }, finalDomain);
      }
      return finalDomain;
    };
  }
});

// node_modules/eventemitter3/index.js
var require_eventemitter3 = __commonJS({
  "node_modules/eventemitter3/index.js"(exports, module) {
    "use strict";
    var has = Object.prototype.hasOwnProperty;
    var prefix = "~";
    function Events() {
    }
    if (Object.create) {
      Events.prototype = /* @__PURE__ */ Object.create(null);
      if (!new Events().__proto__) prefix = false;
    }
    function EE(fn, context, once) {
      this.fn = fn;
      this.context = context;
      this.once = once || false;
    }
    function addListener(emitter, event, fn, context, once) {
      if (typeof fn !== "function") {
        throw new TypeError("The listener must be a function");
      }
      var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
      if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
      else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
      else emitter._events[evt] = [emitter._events[evt], listener];
      return emitter;
    }
    function clearEvent(emitter, evt) {
      if (--emitter._eventsCount === 0) emitter._events = new Events();
      else delete emitter._events[evt];
    }
    function EventEmitter() {
      this._events = new Events();
      this._eventsCount = 0;
    }
    EventEmitter.prototype.eventNames = function eventNames() {
      var names = [], events, name;
      if (this._eventsCount === 0) return names;
      for (name in events = this._events) {
        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
      }
      if (Object.getOwnPropertySymbols) {
        return names.concat(Object.getOwnPropertySymbols(events));
      }
      return names;
    };
    EventEmitter.prototype.listeners = function listeners(event) {
      var evt = prefix ? prefix + event : event, handlers = this._events[evt];
      if (!handlers) return [];
      if (handlers.fn) return [handlers.fn];
      for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
        ee[i] = handlers[i].fn;
      }
      return ee;
    };
    EventEmitter.prototype.listenerCount = function listenerCount(event) {
      var evt = prefix ? prefix + event : event, listeners = this._events[evt];
      if (!listeners) return 0;
      if (listeners.fn) return 1;
      return listeners.length;
    };
    EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt]) return false;
      var listeners = this._events[evt], len = arguments.length, args, i;
      if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, void 0, true);
        switch (len) {
          case 1:
            return listeners.fn.call(listeners.context), true;
          case 2:
            return listeners.fn.call(listeners.context, a1), true;
          case 3:
            return listeners.fn.call(listeners.context, a1, a2), true;
          case 4:
            return listeners.fn.call(listeners.context, a1, a2, a3), true;
          case 5:
            return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
          case 6:
            return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for (i = 1, args = new Array(len - 1); i < len; i++) {
          args[i - 1] = arguments[i];
        }
        listeners.fn.apply(listeners.context, args);
      } else {
        var length = listeners.length, j;
        for (i = 0; i < length; i++) {
          if (listeners[i].once) this.removeListener(event, listeners[i].fn, void 0, true);
          switch (len) {
            case 1:
              listeners[i].fn.call(listeners[i].context);
              break;
            case 2:
              listeners[i].fn.call(listeners[i].context, a1);
              break;
            case 3:
              listeners[i].fn.call(listeners[i].context, a1, a2);
              break;
            case 4:
              listeners[i].fn.call(listeners[i].context, a1, a2, a3);
              break;
            default:
              if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
                args[j - 1] = arguments[j];
              }
              listeners[i].fn.apply(listeners[i].context, args);
          }
        }
      }
      return true;
    };
    EventEmitter.prototype.on = function on(event, fn, context) {
      return addListener(this, event, fn, context, false);
    };
    EventEmitter.prototype.once = function once(event, fn, context) {
      return addListener(this, event, fn, context, true);
    };
    EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt]) return this;
      if (!fn) {
        clearEvent(this, evt);
        return this;
      }
      var listeners = this._events[evt];
      if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
          clearEvent(this, evt);
        }
      } else {
        for (var i = 0, events = [], length = listeners.length; i < length; i++) {
          if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
            events.push(listeners[i]);
          }
        }
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
      }
      return this;
    };
    EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
      var evt;
      if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
      } else {
        this._events = new Events();
        this._eventsCount = 0;
      }
      return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.addListener = EventEmitter.prototype.on;
    EventEmitter.prefixed = prefix;
    EventEmitter.EventEmitter = EventEmitter;
    if ("undefined" !== typeof module) {
      module.exports = EventEmitter;
    }
  }
});

// node_modules/recharts/lib/util/Events.js
var require_Events = __commonJS({
  "node_modules/recharts/lib/util/Events.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.eventCenter = exports.SYNC_EVENT = void 0;
    var _eventemitter = _interopRequireDefault(require_eventemitter3());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var eventCenter = exports.eventCenter = new _eventemitter["default"]();
    var SYNC_EVENT = exports.SYNC_EVENT = "recharts.syncMouseEvents";
  }
});

// node_modules/recharts/lib/chart/AccessibilityManager.js
var require_AccessibilityManager = __commonJS({
  "node_modules/recharts/lib/chart/AccessibilityManager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.AccessibilityManager = void 0;
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var AccessibilityManager = exports.AccessibilityManager = function() {
      function AccessibilityManager2() {
        _classCallCheck(this, AccessibilityManager2);
        _defineProperty(this, "activeIndex", 0);
        _defineProperty(this, "coordinateList", []);
        _defineProperty(this, "layout", "horizontal");
      }
      return _createClass(AccessibilityManager2, [{
        key: "setDetails",
        value: function setDetails(_ref) {
          var _ref2;
          var _ref$coordinateList = _ref.coordinateList, coordinateList = _ref$coordinateList === void 0 ? null : _ref$coordinateList, _ref$container = _ref.container, container = _ref$container === void 0 ? null : _ref$container, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? null : _ref$layout, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? null : _ref$offset, _ref$mouseHandlerCall = _ref.mouseHandlerCallback, mouseHandlerCallback = _ref$mouseHandlerCall === void 0 ? null : _ref$mouseHandlerCall;
          this.coordinateList = (_ref2 = coordinateList !== null && coordinateList !== void 0 ? coordinateList : this.coordinateList) !== null && _ref2 !== void 0 ? _ref2 : [];
          this.container = container !== null && container !== void 0 ? container : this.container;
          this.layout = layout !== null && layout !== void 0 ? layout : this.layout;
          this.offset = offset !== null && offset !== void 0 ? offset : this.offset;
          this.mouseHandlerCallback = mouseHandlerCallback !== null && mouseHandlerCallback !== void 0 ? mouseHandlerCallback : this.mouseHandlerCallback;
          this.activeIndex = Math.min(Math.max(this.activeIndex, 0), this.coordinateList.length - 1);
        }
      }, {
        key: "focus",
        value: function focus() {
          this.spoofMouse();
        }
      }, {
        key: "keyboardEvent",
        value: function keyboardEvent(e) {
          if (this.coordinateList.length === 0) {
            return;
          }
          switch (e.key) {
            case "ArrowRight": {
              if (this.layout !== "horizontal") {
                return;
              }
              this.activeIndex = Math.min(this.activeIndex + 1, this.coordinateList.length - 1);
              this.spoofMouse();
              break;
            }
            case "ArrowLeft": {
              if (this.layout !== "horizontal") {
                return;
              }
              this.activeIndex = Math.max(this.activeIndex - 1, 0);
              this.spoofMouse();
              break;
            }
            default: {
              break;
            }
          }
        }
      }, {
        key: "setIndex",
        value: function setIndex(newIndex) {
          this.activeIndex = newIndex;
        }
      }, {
        key: "spoofMouse",
        value: function spoofMouse() {
          var _window, _window2;
          if (this.layout !== "horizontal") {
            return;
          }
          if (this.coordinateList.length === 0) {
            return;
          }
          var _this$container$getBo = this.container.getBoundingClientRect(), x = _this$container$getBo.x, y = _this$container$getBo.y, height = _this$container$getBo.height;
          var coordinate = this.coordinateList[this.activeIndex].coordinate;
          var scrollOffsetX = ((_window = window) === null || _window === void 0 ? void 0 : _window.scrollX) || 0;
          var scrollOffsetY = ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.scrollY) || 0;
          var pageX = x + coordinate + scrollOffsetX;
          var pageY = y + this.offset.top + height / 2 + scrollOffsetY;
          this.mouseHandlerCallback({
            pageX,
            pageY
          });
        }
      }]);
    }();
  }
});

// node_modules/recharts/lib/util/isDomainSpecifiedByUser.js
var require_isDomainSpecifiedByUser = __commonJS({
  "node_modules/recharts/lib/util/isDomainSpecifiedByUser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isDomainSpecifiedByUser = isDomainSpecifiedByUser;
    var _DataUtils = require_DataUtils();
    function isDomainSpecifiedByUser(domain, allowDataOverflow, axisType) {
      if (axisType === "number" && allowDataOverflow === true && Array.isArray(domain)) {
        var domainStart = domain === null || domain === void 0 ? void 0 : domain[0];
        var domainEnd = domain === null || domain === void 0 ? void 0 : domain[1];
        if (!!domainStart && !!domainEnd && (0, _DataUtils.isNumber)(domainStart) && (0, _DataUtils.isNumber)(domainEnd)) {
          return true;
        }
      }
      return false;
    }
  }
});

// node_modules/recharts/lib/util/cursor/getCursorRectangle.js
var require_getCursorRectangle = __commonJS({
  "node_modules/recharts/lib/util/cursor/getCursorRectangle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getCursorRectangle = getCursorRectangle;
    function getCursorRectangle(layout, activeCoordinate, offset, tooltipAxisBandSize) {
      var halfSize = tooltipAxisBandSize / 2;
      return {
        stroke: "none",
        fill: "#ccc",
        x: layout === "horizontal" ? activeCoordinate.x - halfSize : offset.left + 0.5,
        y: layout === "horizontal" ? offset.top + 0.5 : activeCoordinate.y - halfSize,
        width: layout === "horizontal" ? tooltipAxisBandSize : offset.width - 1,
        height: layout === "horizontal" ? offset.height - 1 : tooltipAxisBandSize
      };
    }
  }
});

// node_modules/recharts/lib/util/cursor/getRadialCursorPoints.js
var require_getRadialCursorPoints = __commonJS({
  "node_modules/recharts/lib/util/cursor/getRadialCursorPoints.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getRadialCursorPoints = getRadialCursorPoints;
    var _PolarUtils = require_PolarUtils();
    function getRadialCursorPoints(activeCoordinate) {
      var cx = activeCoordinate.cx, cy = activeCoordinate.cy, radius = activeCoordinate.radius, startAngle = activeCoordinate.startAngle, endAngle = activeCoordinate.endAngle;
      var startPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, startAngle);
      var endPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, radius, endAngle);
      return {
        points: [startPoint, endPoint],
        cx,
        cy,
        radius,
        startAngle,
        endAngle
      };
    }
  }
});

// node_modules/recharts/lib/util/cursor/getCursorPoints.js
var require_getCursorPoints = __commonJS({
  "node_modules/recharts/lib/util/cursor/getCursorPoints.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getCursorPoints = getCursorPoints;
    var _PolarUtils = require_PolarUtils();
    var _getRadialCursorPoints = require_getRadialCursorPoints();
    function getCursorPoints(layout, activeCoordinate, offset) {
      var x1, y1, x2, y2;
      if (layout === "horizontal") {
        x1 = activeCoordinate.x;
        x2 = x1;
        y1 = offset.top;
        y2 = offset.top + offset.height;
      } else if (layout === "vertical") {
        y1 = activeCoordinate.y;
        y2 = y1;
        x1 = offset.left;
        x2 = offset.left + offset.width;
      } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {
        if (layout === "centric") {
          var cx = activeCoordinate.cx, cy = activeCoordinate.cy, innerRadius = activeCoordinate.innerRadius, outerRadius = activeCoordinate.outerRadius, angle = activeCoordinate.angle;
          var innerPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, innerRadius, angle);
          var outerPoint = (0, _PolarUtils.polarToCartesian)(cx, cy, outerRadius, angle);
          x1 = innerPoint.x;
          y1 = innerPoint.y;
          x2 = outerPoint.x;
          y2 = outerPoint.y;
        } else {
          return (0, _getRadialCursorPoints.getRadialCursorPoints)(activeCoordinate);
        }
      }
      return [{
        x: x1,
        y: y1
      }, {
        x: x2,
        y: y2
      }];
    }
  }
});

// node_modules/recharts/lib/component/Cursor.js
var require_Cursor = __commonJS({
  "node_modules/recharts/lib/component/Cursor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Cursor = Cursor;
    var _react = require_react();
    var _clsx = _interopRequireDefault(require_clsx());
    var _Curve = require_Curve();
    var _Cross = require_Cross();
    var _getCursorRectangle = require_getCursorRectangle();
    var _Rectangle = require_Rectangle();
    var _getRadialCursorPoints = require_getRadialCursorPoints();
    var _Sector = require_Sector();
    var _getCursorPoints = require_getCursorPoints();
    var _ReactUtils = require_ReactUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function Cursor(props) {
      var _element$props$cursor, _defaultProps;
      var element = props.element, tooltipEventType = props.tooltipEventType, isActive = props.isActive, activeCoordinate = props.activeCoordinate, activePayload = props.activePayload, offset = props.offset, activeTooltipIndex = props.activeTooltipIndex, tooltipAxisBandSize = props.tooltipAxisBandSize, layout = props.layout, chartName = props.chartName;
      var elementPropsCursor = (_element$props$cursor = element.props.cursor) !== null && _element$props$cursor !== void 0 ? _element$props$cursor : (_defaultProps = element.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps.cursor;
      if (!element || !elementPropsCursor || !isActive || !activeCoordinate || chartName !== "ScatterChart" && tooltipEventType !== "axis") {
        return null;
      }
      var restProps;
      var cursorComp = _Curve.Curve;
      if (chartName === "ScatterChart") {
        restProps = activeCoordinate;
        cursorComp = _Cross.Cross;
      } else if (chartName === "BarChart") {
        restProps = (0, _getCursorRectangle.getCursorRectangle)(layout, activeCoordinate, offset, tooltipAxisBandSize);
        cursorComp = _Rectangle.Rectangle;
      } else if (layout === "radial") {
        var _getRadialCursorPoint = (0, _getRadialCursorPoints.getRadialCursorPoints)(activeCoordinate), cx = _getRadialCursorPoint.cx, cy = _getRadialCursorPoint.cy, radius = _getRadialCursorPoint.radius, startAngle = _getRadialCursorPoint.startAngle, endAngle = _getRadialCursorPoint.endAngle;
        restProps = {
          cx,
          cy,
          startAngle,
          endAngle,
          innerRadius: radius,
          outerRadius: radius
        };
        cursorComp = _Sector.Sector;
      } else {
        restProps = {
          points: (0, _getCursorPoints.getCursorPoints)(layout, activeCoordinate, offset)
        };
        cursorComp = _Curve.Curve;
      }
      var cursorProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({
        stroke: "#ccc",
        pointerEvents: "none"
      }, offset), restProps), (0, _ReactUtils.filterProps)(elementPropsCursor, false)), {}, {
        payload: activePayload,
        payloadIndex: activeTooltipIndex,
        className: (0, _clsx["default"])("recharts-tooltip-cursor", elementPropsCursor.className)
      });
      return (0, _react.isValidElement)(elementPropsCursor) ? (0, _react.cloneElement)(elementPropsCursor, cursorProps) : (0, _react.createElement)(cursorComp, cursorProps);
    }
  }
});

// node_modules/recharts/lib/chart/generateCategoricalChart.js
var require_generateCategoricalChart = __commonJS({
  "node_modules/recharts/lib/chart/generateCategoricalChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getAxisMapByAxes = exports.generateCategoricalChart = exports.createDefaultState = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _isNil = _interopRequireDefault(require_isNil());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _range = _interopRequireDefault(require_range2());
    var _get = _interopRequireDefault(require_get());
    var _sortBy = _interopRequireDefault(require_sortBy());
    var _throttle = _interopRequireDefault(require_throttle());
    var _clsx = _interopRequireDefault(require_clsx());
    var _tinyInvariant = _interopRequireDefault(require_tiny_invariant_cjs());
    var _Surface = require_Surface();
    var _Layer = require_Layer();
    var _Tooltip = require_Tooltip();
    var _Legend = require_Legend();
    var _Dot = require_Dot();
    var _Rectangle = require_Rectangle();
    var _ReactUtils = require_ReactUtils();
    var _Brush = require_Brush();
    var _DOMUtils = require_DOMUtils();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _DetectReferenceElementsDomain = require_DetectReferenceElementsDomain();
    var _PolarUtils = require_PolarUtils();
    var _ShallowEqual = require_ShallowEqual();
    var _Events = require_Events();
    var _types = require_types();
    var _AccessibilityManager = require_AccessibilityManager();
    var _isDomainSpecifiedByUser = require_isDomainSpecifiedByUser();
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    var _Cursor = require_Cursor();
    var _chartLayoutContext = require_chartLayoutContext();
    var _excluded = ["item"];
    var _excluded2 = ["children", "className", "width", "height", "style", "compact", "title", "desc"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var ORIENT_MAP = {
      xAxis: ["bottom", "top"],
      yAxis: ["left", "right"]
    };
    var FULL_WIDTH_AND_HEIGHT = {
      width: "100%",
      height: "100%"
    };
    var originCoordinate = {
      x: 0,
      y: 0
    };
    function renderAsIs(element) {
      return element;
    }
    var calculateTooltipPos = function calculateTooltipPos2(rangeObj, layout) {
      if (layout === "horizontal") {
        return rangeObj.x;
      }
      if (layout === "vertical") {
        return rangeObj.y;
      }
      if (layout === "centric") {
        return rangeObj.angle;
      }
      return rangeObj.radius;
    };
    var getActiveCoordinate = function getActiveCoordinate2(layout, tooltipTicks, activeIndex, rangeObj) {
      var entry = tooltipTicks.find(function(tick) {
        return tick && tick.index === activeIndex;
      });
      if (entry) {
        if (layout === "horizontal") {
          return {
            x: entry.coordinate,
            y: rangeObj.y
          };
        }
        if (layout === "vertical") {
          return {
            x: rangeObj.x,
            y: entry.coordinate
          };
        }
        if (layout === "centric") {
          var _angle = entry.coordinate;
          var _radius = rangeObj.radius;
          return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0, _PolarUtils.polarToCartesian)(rangeObj.cx, rangeObj.cy, _radius, _angle)), {}, {
            angle: _angle,
            radius: _radius
          });
        }
        var radius = entry.coordinate;
        var angle = rangeObj.angle;
        return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0, _PolarUtils.polarToCartesian)(rangeObj.cx, rangeObj.cy, radius, angle)), {}, {
          angle,
          radius
        });
      }
      return originCoordinate;
    };
    var getDisplayedData = function getDisplayedData2(data, _ref) {
      var graphicalItems = _ref.graphicalItems, dataStartIndex = _ref.dataStartIndex, dataEndIndex = _ref.dataEndIndex;
      var itemsData = (graphicalItems !== null && graphicalItems !== void 0 ? graphicalItems : []).reduce(function(result, child) {
        var itemData = child.props.data;
        if (itemData && itemData.length) {
          return [].concat(_toConsumableArray(result), _toConsumableArray(itemData));
        }
        return result;
      }, []);
      if (itemsData.length > 0) {
        return itemsData;
      }
      if (data && data.length && (0, _DataUtils.isNumber)(dataStartIndex) && (0, _DataUtils.isNumber)(dataEndIndex)) {
        return data.slice(dataStartIndex, dataEndIndex + 1);
      }
      return [];
    };
    function getDefaultDomainByAxisType(axisType) {
      return axisType === "number" ? [0, "auto"] : void 0;
    }
    var getTooltipContent = function getTooltipContent2(state, chartData, activeIndex, activeLabel) {
      var graphicalItems = state.graphicalItems, tooltipAxis = state.tooltipAxis;
      var displayedData = getDisplayedData(chartData, state);
      if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) {
        return null;
      }
      return graphicalItems.reduce(function(result, child) {
        var _child$props$data;
        var data = (_child$props$data = child.props.data) !== null && _child$props$data !== void 0 ? _child$props$data : chartData;
        if (data && state.dataStartIndex + state.dataEndIndex !== 0 && // https://github.com/recharts/recharts/issues/4717
        // The data is sliced only when the active index is within the start/end index range.
        state.dataEndIndex - state.dataStartIndex >= activeIndex) {
          data = data.slice(state.dataStartIndex, state.dataEndIndex + 1);
        }
        var payload;
        if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
          var entries = data === void 0 ? displayedData : data;
          payload = (0, _DataUtils.findEntryInArray)(entries, tooltipAxis.dataKey, activeLabel);
        } else {
          payload = data && data[activeIndex] || displayedData[activeIndex];
        }
        if (!payload) {
          return result;
        }
        return [].concat(_toConsumableArray(result), [(0, _ChartUtils.getTooltipItem)(child, payload)]);
      }, []);
    };
    var getTooltipData = function getTooltipData2(state, chartData, layout, rangeObj) {
      var rangeData = rangeObj || {
        x: state.chartX,
        y: state.chartY
      };
      var pos = calculateTooltipPos(rangeData, layout);
      var ticks = state.orderedTooltipTicks, axis = state.tooltipAxis, tooltipTicks = state.tooltipTicks;
      var activeIndex = (0, _ChartUtils.calculateActiveTickIndex)(pos, ticks, tooltipTicks, axis);
      if (activeIndex >= 0 && tooltipTicks) {
        var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;
        var activePayload = getTooltipContent(state, chartData, activeIndex, activeLabel);
        var activeCoordinate = getActiveCoordinate(layout, ticks, activeIndex, rangeData);
        return {
          activeTooltipIndex: activeIndex,
          activeLabel,
          activePayload,
          activeCoordinate
        };
      }
      return null;
    };
    var getAxisMapByAxes = exports.getAxisMapByAxes = function getAxisMapByAxes2(props, _ref2) {
      var axes = _ref2.axes, graphicalItems = _ref2.graphicalItems, axisType = _ref2.axisType, axisIdKey = _ref2.axisIdKey, stackGroups = _ref2.stackGroups, dataStartIndex = _ref2.dataStartIndex, dataEndIndex = _ref2.dataEndIndex;
      var layout = props.layout, children = props.children, stackOffset = props.stackOffset;
      var isCategorical = (0, _ChartUtils.isCategoricalAxis)(layout, axisType);
      return axes.reduce(function(result, child) {
        var _childProps$domain2;
        var childProps = child.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;
        var type = childProps.type, dataKey = childProps.dataKey, allowDataOverflow = childProps.allowDataOverflow, allowDuplicatedCategory = childProps.allowDuplicatedCategory, scale = childProps.scale, ticks = childProps.ticks, includeHidden = childProps.includeHidden;
        var axisId = childProps[axisIdKey];
        if (result[axisId]) {
          return result;
        }
        var displayedData = getDisplayedData(props.data, {
          graphicalItems: graphicalItems.filter(function(item) {
            var _defaultProps;
            var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps = item.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps[axisIdKey];
            return itemAxisId === axisId;
          }),
          dataStartIndex,
          dataEndIndex
        });
        var len = displayedData.length;
        var domain, duplicateDomain, categoricalDomain;
        if ((0, _isDomainSpecifiedByUser.isDomainSpecifiedByUser)(childProps.domain, allowDataOverflow, type)) {
          domain = (0, _ChartUtils.parseSpecifiedDomain)(childProps.domain, null, allowDataOverflow);
          if (isCategorical && (type === "number" || scale !== "auto")) {
            categoricalDomain = (0, _ChartUtils.getDomainOfDataByKey)(displayedData, dataKey, "category");
          }
        }
        var defaultDomain = getDefaultDomainByAxisType(type);
        if (!domain || domain.length === 0) {
          var _childProps$domain;
          var childDomain = (_childProps$domain = childProps.domain) !== null && _childProps$domain !== void 0 ? _childProps$domain : defaultDomain;
          if (dataKey) {
            domain = (0, _ChartUtils.getDomainOfDataByKey)(displayedData, dataKey, type);
            if (type === "category" && isCategorical) {
              var duplicate = (0, _DataUtils.hasDuplicate)(domain);
              if (allowDuplicatedCategory && duplicate) {
                duplicateDomain = domain;
                domain = (0, _range["default"])(0, len);
              } else if (!allowDuplicatedCategory) {
                domain = (0, _ChartUtils.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {
                  return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(_toConsumableArray(finalDomain), [entry]);
                }, []);
              }
            } else if (type === "category") {
              if (!allowDuplicatedCategory) {
                domain = (0, _ChartUtils.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {
                  return finalDomain.indexOf(entry) >= 0 || entry === "" || (0, _isNil["default"])(entry) ? finalDomain : [].concat(_toConsumableArray(finalDomain), [entry]);
                }, []);
              } else {
                domain = domain.filter(function(entry) {
                  return entry !== "" && !(0, _isNil["default"])(entry);
                });
              }
            } else if (type === "number") {
              var errorBarsDomain = (0, _ChartUtils.parseErrorBarsOfAxis)(displayedData, graphicalItems.filter(function(item) {
                var _defaultProps2, _defaultProps3;
                var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps2 = item.type.defaultProps) === null || _defaultProps2 === void 0 ? void 0 : _defaultProps2[axisIdKey];
                var itemHide = "hide" in item.props ? item.props.hide : (_defaultProps3 = item.type.defaultProps) === null || _defaultProps3 === void 0 ? void 0 : _defaultProps3.hide;
                return itemAxisId === axisId && (includeHidden || !itemHide);
              }), dataKey, axisType, layout);
              if (errorBarsDomain) {
                domain = errorBarsDomain;
              }
            }
            if (isCategorical && (type === "number" || scale !== "auto")) {
              categoricalDomain = (0, _ChartUtils.getDomainOfDataByKey)(displayedData, dataKey, "category");
            }
          } else if (isCategorical) {
            domain = (0, _range["default"])(0, len);
          } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === "number") {
            domain = stackOffset === "expand" ? [0, 1] : (0, _ChartUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
          } else {
            domain = (0, _ChartUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {
              var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : item.type.defaultProps[axisIdKey];
              var itemHide = "hide" in item.props ? item.props.hide : item.type.defaultProps.hide;
              return itemAxisId === axisId && (includeHidden || !itemHide);
            }), type, layout, true);
          }
          if (type === "number") {
            domain = (0, _DetectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType, ticks);
            if (childDomain) {
              domain = (0, _ChartUtils.parseSpecifiedDomain)(childDomain, domain, allowDataOverflow);
            }
          } else if (type === "category" && childDomain) {
            var axisDomain = childDomain;
            var isDomainValid = domain.every(function(entry) {
              return axisDomain.indexOf(entry) >= 0;
            });
            if (isDomainValid) {
              domain = axisDomain;
            }
          }
        }
        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({}, childProps), {}, {
          axisType,
          domain,
          categoricalDomain,
          duplicateDomain,
          originalDomain: (_childProps$domain2 = childProps.domain) !== null && _childProps$domain2 !== void 0 ? _childProps$domain2 : defaultDomain,
          isCategorical,
          layout
        })));
      }, {});
    };
    var getAxisMapByItems = function getAxisMapByItems2(props, _ref3) {
      var graphicalItems = _ref3.graphicalItems, Axis = _ref3.Axis, axisType = _ref3.axisType, axisIdKey = _ref3.axisIdKey, stackGroups = _ref3.stackGroups, dataStartIndex = _ref3.dataStartIndex, dataEndIndex = _ref3.dataEndIndex;
      var layout = props.layout, children = props.children;
      var displayedData = getDisplayedData(props.data, {
        graphicalItems,
        dataStartIndex,
        dataEndIndex
      });
      var len = displayedData.length;
      var isCategorical = (0, _ChartUtils.isCategoricalAxis)(layout, axisType);
      var index = -1;
      return graphicalItems.reduce(function(result, child) {
        var childProps = child.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;
        var axisId = childProps[axisIdKey];
        var originalDomain = getDefaultDomainByAxisType("number");
        if (!result[axisId]) {
          index++;
          var domain;
          if (isCategorical) {
            domain = (0, _range["default"])(0, len);
          } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {
            domain = (0, _ChartUtils.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);
            domain = (0, _DetectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType);
          } else {
            domain = (0, _ChartUtils.parseSpecifiedDomain)(originalDomain, (0, _ChartUtils.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {
              var _defaultProps4, _defaultProps5;
              var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps4 = item.type.defaultProps) === null || _defaultProps4 === void 0 ? void 0 : _defaultProps4[axisIdKey];
              var itemHide = "hide" in item.props ? item.props.hide : (_defaultProps5 = item.type.defaultProps) === null || _defaultProps5 === void 0 ? void 0 : _defaultProps5.hide;
              return itemAxisId === axisId && !itemHide;
            }), "number", layout), Axis.defaultProps.allowDataOverflow);
            domain = (0, _DetectReferenceElementsDomain.detectReferenceElementsDomain)(children, domain, axisId, axisType);
          }
          return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({
            axisType
          }, Axis.defaultProps), {}, {
            hide: true,
            orientation: (0, _get["default"])(ORIENT_MAP, "".concat(axisType, ".").concat(index % 2), null),
            domain,
            originalDomain,
            isCategorical,
            layout
            // specify scale when no Axis
            // scale: isCategorical ? 'band' : 'linear',
          })));
        }
        return result;
      }, {});
    };
    var getAxisMap = function getAxisMap2(props, _ref4) {
      var _ref4$axisType = _ref4.axisType, axisType = _ref4$axisType === void 0 ? "xAxis" : _ref4$axisType, AxisComp = _ref4.AxisComp, graphicalItems = _ref4.graphicalItems, stackGroups = _ref4.stackGroups, dataStartIndex = _ref4.dataStartIndex, dataEndIndex = _ref4.dataEndIndex;
      var children = props.children;
      var axisIdKey = "".concat(axisType, "Id");
      var axes = (0, _ReactUtils.findAllByType)(children, AxisComp);
      var axisMap = {};
      if (axes && axes.length) {
        axisMap = getAxisMapByAxes(props, {
          axes,
          graphicalItems,
          axisType,
          axisIdKey,
          stackGroups,
          dataStartIndex,
          dataEndIndex
        });
      } else if (graphicalItems && graphicalItems.length) {
        axisMap = getAxisMapByItems(props, {
          Axis: AxisComp,
          graphicalItems,
          axisType,
          axisIdKey,
          stackGroups,
          dataStartIndex,
          dataEndIndex
        });
      }
      return axisMap;
    };
    var tooltipTicksGenerator = function tooltipTicksGenerator2(axisMap) {
      var axis = (0, _DataUtils.getAnyElementOfObject)(axisMap);
      var tooltipTicks = (0, _ChartUtils.getTicksOfAxis)(axis, false, true);
      return {
        tooltipTicks,
        orderedTooltipTicks: (0, _sortBy["default"])(tooltipTicks, function(o) {
          return o.coordinate;
        }),
        tooltipAxis: axis,
        tooltipAxisBandSize: (0, _ChartUtils.getBandSizeOfAxis)(axis, tooltipTicks)
      };
    };
    var createDefaultState = exports.createDefaultState = function createDefaultState2(props) {
      var children = props.children, defaultShowTooltip = props.defaultShowTooltip;
      var brushItem = (0, _ReactUtils.findChildByType)(children, _Brush.Brush);
      var startIndex = 0;
      var endIndex = 0;
      if (props.data && props.data.length !== 0) {
        endIndex = props.data.length - 1;
      }
      if (brushItem && brushItem.props) {
        if (brushItem.props.startIndex >= 0) {
          startIndex = brushItem.props.startIndex;
        }
        if (brushItem.props.endIndex >= 0) {
          endIndex = brushItem.props.endIndex;
        }
      }
      return {
        chartX: 0,
        chartY: 0,
        dataStartIndex: startIndex,
        dataEndIndex: endIndex,
        activeTooltipIndex: -1,
        isTooltipActive: Boolean(defaultShowTooltip)
      };
    };
    var hasGraphicalBarItem = function hasGraphicalBarItem2(graphicalItems) {
      if (!graphicalItems || !graphicalItems.length) {
        return false;
      }
      return graphicalItems.some(function(item) {
        var name = (0, _ReactUtils.getDisplayName)(item && item.type);
        return name && name.indexOf("Bar") >= 0;
      });
    };
    var getAxisNameByLayout = function getAxisNameByLayout2(layout) {
      if (layout === "horizontal") {
        return {
          numericAxisName: "yAxis",
          cateAxisName: "xAxis"
        };
      }
      if (layout === "vertical") {
        return {
          numericAxisName: "xAxis",
          cateAxisName: "yAxis"
        };
      }
      if (layout === "centric") {
        return {
          numericAxisName: "radiusAxis",
          cateAxisName: "angleAxis"
        };
      }
      return {
        numericAxisName: "angleAxis",
        cateAxisName: "radiusAxis"
      };
    };
    var calculateOffset = function calculateOffset2(_ref5, prevLegendBBox) {
      var props = _ref5.props, graphicalItems = _ref5.graphicalItems, _ref5$xAxisMap = _ref5.xAxisMap, xAxisMap = _ref5$xAxisMap === void 0 ? {} : _ref5$xAxisMap, _ref5$yAxisMap = _ref5.yAxisMap, yAxisMap = _ref5$yAxisMap === void 0 ? {} : _ref5$yAxisMap;
      var width = props.width, height = props.height, children = props.children;
      var margin = props.margin || {};
      var brushItem = (0, _ReactUtils.findChildByType)(children, _Brush.Brush);
      var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend.Legend);
      var offsetH = Object.keys(yAxisMap).reduce(function(result, id) {
        var entry = yAxisMap[id];
        var orientation = entry.orientation;
        if (!entry.mirror && !entry.hide) {
          return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, result[orientation] + entry.width));
        }
        return result;
      }, {
        left: margin.left || 0,
        right: margin.right || 0
      });
      var offsetV = Object.keys(xAxisMap).reduce(function(result, id) {
        var entry = xAxisMap[id];
        var orientation = entry.orientation;
        if (!entry.mirror && !entry.hide) {
          return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, (0, _get["default"])(result, "".concat(orientation)) + entry.height));
        }
        return result;
      }, {
        top: margin.top || 0,
        bottom: margin.bottom || 0
      });
      var offset = _objectSpread(_objectSpread({}, offsetV), offsetH);
      var brushBottom = offset.bottom;
      if (brushItem) {
        offset.bottom += brushItem.props.height || _Brush.Brush.defaultProps.height;
      }
      if (legendItem && prevLegendBBox) {
        offset = (0, _ChartUtils.appendOffsetOfLegend)(offset, graphicalItems, props, prevLegendBBox);
      }
      var offsetWidth = width - offset.left - offset.right;
      var offsetHeight = height - offset.top - offset.bottom;
      return _objectSpread(_objectSpread({
        brushBottom
      }, offset), {}, {
        // never return negative values for height and width
        width: Math.max(offsetWidth, 0),
        height: Math.max(offsetHeight, 0)
      });
    };
    var getCartesianAxisSize = function getCartesianAxisSize2(axisObj, axisName) {
      if (axisName === "xAxis") {
        return axisObj[axisName].width;
      }
      if (axisName === "yAxis") {
        return axisObj[axisName].height;
      }
      return void 0;
    };
    var generateCategoricalChart = exports.generateCategoricalChart = function generateCategoricalChart2(_ref6) {
      var chartName = _ref6.chartName, GraphicalChild = _ref6.GraphicalChild, _ref6$defaultTooltipE = _ref6.defaultTooltipEventType, defaultTooltipEventType = _ref6$defaultTooltipE === void 0 ? "axis" : _ref6$defaultTooltipE, _ref6$validateTooltip = _ref6.validateTooltipEventTypes, validateTooltipEventTypes = _ref6$validateTooltip === void 0 ? ["axis"] : _ref6$validateTooltip, axisComponents = _ref6.axisComponents, legendContent = _ref6.legendContent, formatAxisMap = _ref6.formatAxisMap, defaultProps = _ref6.defaultProps;
      var getFormatItems = function getFormatItems2(props, currentState) {
        var graphicalItems = currentState.graphicalItems, stackGroups = currentState.stackGroups, offset = currentState.offset, updateId = currentState.updateId, dataStartIndex = currentState.dataStartIndex, dataEndIndex = currentState.dataEndIndex;
        var barSize = props.barSize, layout = props.layout, barGap = props.barGap, barCategoryGap = props.barCategoryGap, globalMaxBarSize = props.maxBarSize;
        var _getAxisNameByLayout = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout.numericAxisName, cateAxisName = _getAxisNameByLayout.cateAxisName;
        var hasBar = hasGraphicalBarItem(graphicalItems);
        var formattedItems = [];
        graphicalItems.forEach(function(item, index) {
          var displayedData = getDisplayedData(props.data, {
            graphicalItems: [item],
            dataStartIndex,
            dataEndIndex
          });
          var itemProps = item.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
          var dataKey = itemProps.dataKey, childMaxBarSize = itemProps.maxBarSize;
          var numericAxisId = itemProps["".concat(numericAxisName, "Id")];
          var cateAxisId = itemProps["".concat(cateAxisName, "Id")];
          var axisObjInitialValue = {};
          var axisObj = axisComponents.reduce(function(result, entry) {
            var _item$type$displayNam, _item$type;
            var axisMap = currentState["".concat(entry.axisType, "Map")];
            var id = itemProps["".concat(entry.axisType, "Id")];
            !(axisMap && axisMap[id] || entry.axisType === "zAxis") ? true ? (0, _tinyInvariant["default"])(false, "Specifying a(n) ".concat(entry.axisType, "Id requires a corresponding ").concat(
              entry.axisType,
              "Id on the targeted graphical component "
            ).concat((_item$type$displayNam = item === null || item === void 0 || (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) !== null && _item$type$displayNam !== void 0 ? _item$type$displayNam : "")) : (0, _tinyInvariant["default"])(false) : void 0;
            var axis = axisMap[id];
            return _objectSpread(_objectSpread({}, result), {}, _defineProperty(_defineProperty({}, entry.axisType, axis), "".concat(entry.axisType, "Ticks"), (0, _ChartUtils.getTicksOfAxis)(axis)));
          }, axisObjInitialValue);
          var cateAxis = axisObj[cateAxisName];
          var cateTicks = axisObj["".concat(cateAxisName, "Ticks")];
          var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && (0, _ChartUtils.getStackedDataOfItem)(item, stackGroups[numericAxisId].stackGroups);
          var itemIsBar = (0, _ReactUtils.getDisplayName)(item.type).indexOf("Bar") >= 0;
          var bandSize = (0, _ChartUtils.getBandSizeOfAxis)(cateAxis, cateTicks);
          var barPosition = [];
          var sizeList = hasBar && (0, _ChartUtils.getBarSizeList)({
            barSize,
            stackGroups,
            totalSize: getCartesianAxisSize(axisObj, cateAxisName)
          });
          if (itemIsBar) {
            var _ref7, _getBandSizeOfAxis;
            var maxBarSize = (0, _isNil["default"])(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;
            var barBandSize = (_ref7 = (_getBandSizeOfAxis = (0, _ChartUtils.getBandSizeOfAxis)(cateAxis, cateTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref7 !== void 0 ? _ref7 : 0;
            barPosition = (0, _ChartUtils.getBarPosition)({
              barGap,
              barCategoryGap,
              bandSize: barBandSize !== bandSize ? barBandSize : bandSize,
              sizeList: sizeList[cateAxisId],
              maxBarSize
            });
            if (barBandSize !== bandSize) {
              barPosition = barPosition.map(function(pos) {
                return _objectSpread(_objectSpread({}, pos), {}, {
                  position: _objectSpread(_objectSpread({}, pos.position), {}, {
                    offset: pos.position.offset - barBandSize / 2
                  })
                });
              });
            }
          }
          var composedFn = item && item.type && item.type.getComposedData;
          if (composedFn) {
            formattedItems.push({
              props: _objectSpread(_objectSpread({}, composedFn(_objectSpread(_objectSpread({}, axisObj), {}, {
                displayedData,
                props,
                dataKey,
                item,
                bandSize,
                barPosition,
                offset,
                stackedData,
                layout,
                dataStartIndex,
                dataEndIndex
              }))), {}, _defineProperty(_defineProperty(_defineProperty({
                key: item.key || "item-".concat(index)
              }, numericAxisName, axisObj[numericAxisName]), cateAxisName, axisObj[cateAxisName]), "animationId", updateId)),
              childIndex: (0, _ReactUtils.parseChildIndex)(item, props.children),
              item
            });
          }
        });
        return formattedItems;
      };
      var updateStateOfAxisMapsOffsetAndStackGroups = function updateStateOfAxisMapsOffsetAndStackGroups2(_ref8, prevState) {
        var props = _ref8.props, dataStartIndex = _ref8.dataStartIndex, dataEndIndex = _ref8.dataEndIndex, updateId = _ref8.updateId;
        if (!(0, _ReactUtils.validateWidthHeight)({
          props
        })) {
          return null;
        }
        var children = props.children, layout = props.layout, stackOffset = props.stackOffset, data = props.data, reverseStackOrder = props.reverseStackOrder;
        var _getAxisNameByLayout2 = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout2.numericAxisName, cateAxisName = _getAxisNameByLayout2.cateAxisName;
        var graphicalItems = (0, _ReactUtils.findAllByType)(children, GraphicalChild);
        var stackGroups = (0, _ChartUtils.getStackGroupsByAxisId)(data, graphicalItems, "".concat(numericAxisName, "Id"), "".concat(cateAxisName, "Id"), stackOffset, reverseStackOrder);
        var axisObj = axisComponents.reduce(function(result, entry) {
          var name = "".concat(entry.axisType, "Map");
          return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, name, getAxisMap(props, _objectSpread(_objectSpread({}, entry), {}, {
            graphicalItems,
            stackGroups: entry.axisType === numericAxisName && stackGroups,
            dataStartIndex,
            dataEndIndex
          }))));
        }, {});
        var offset = calculateOffset(_objectSpread(_objectSpread({}, axisObj), {}, {
          props,
          graphicalItems
        }), prevState === null || prevState === void 0 ? void 0 : prevState.legendBBox);
        Object.keys(axisObj).forEach(function(key) {
          axisObj[key] = formatAxisMap(props, axisObj[key], offset, key.replace("Map", ""), chartName);
        });
        var cateAxisMap = axisObj["".concat(cateAxisName, "Map")];
        var ticksObj = tooltipTicksGenerator(cateAxisMap);
        var formattedGraphicalItems = getFormatItems(props, _objectSpread(_objectSpread({}, axisObj), {}, {
          dataStartIndex,
          dataEndIndex,
          updateId,
          graphicalItems,
          stackGroups,
          offset
        }));
        return _objectSpread(_objectSpread({
          formattedGraphicalItems,
          graphicalItems,
          offset,
          stackGroups
        }, ticksObj), axisObj);
      };
      var CategoricalChartWrapper = function(_Component) {
        function CategoricalChartWrapper2(_props) {
          var _props$id, _props$throttleDelay;
          var _this;
          _classCallCheck(this, CategoricalChartWrapper2);
          _this = _callSuper(this, CategoricalChartWrapper2, [_props]);
          _defineProperty(_this, "eventEmitterSymbol", Symbol("rechartsEventEmitter"));
          _defineProperty(_this, "accessibilityManager", new _AccessibilityManager.AccessibilityManager());
          _defineProperty(_this, "handleLegendBBoxUpdate", function(box) {
            if (box) {
              var _this$state = _this.state, dataStartIndex = _this$state.dataStartIndex, dataEndIndex = _this$state.dataEndIndex, updateId = _this$state.updateId;
              _this.setState(_objectSpread({
                legendBBox: box
              }, updateStateOfAxisMapsOffsetAndStackGroups({
                props: _this.props,
                dataStartIndex,
                dataEndIndex,
                updateId
              }, _objectSpread(_objectSpread({}, _this.state), {}, {
                legendBBox: box
              }))));
            }
          });
          _defineProperty(_this, "handleReceiveSyncEvent", function(cId, data, emitter) {
            if (_this.props.syncId === cId) {
              if (emitter === _this.eventEmitterSymbol && typeof _this.props.syncMethod !== "function") {
                return;
              }
              _this.applySyncEvent(data);
            }
          });
          _defineProperty(_this, "handleBrushChange", function(_ref9) {
            var startIndex = _ref9.startIndex, endIndex = _ref9.endIndex;
            if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {
              var updateId = _this.state.updateId;
              _this.setState(function() {
                return _objectSpread({
                  dataStartIndex: startIndex,
                  dataEndIndex: endIndex
                }, updateStateOfAxisMapsOffsetAndStackGroups({
                  props: _this.props,
                  dataStartIndex: startIndex,
                  dataEndIndex: endIndex,
                  updateId
                }, _this.state));
              });
              _this.triggerSyncEvent({
                dataStartIndex: startIndex,
                dataEndIndex: endIndex
              });
            }
          });
          _defineProperty(_this, "handleMouseEnter", function(e) {
            var mouse = _this.getMouseInfo(e);
            if (mouse) {
              var _nextState = _objectSpread(_objectSpread({}, mouse), {}, {
                isTooltipActive: true
              });
              _this.setState(_nextState);
              _this.triggerSyncEvent(_nextState);
              var onMouseEnter = _this.props.onMouseEnter;
              if ((0, _isFunction["default"])(onMouseEnter)) {
                onMouseEnter(_nextState, e);
              }
            }
          });
          _defineProperty(_this, "triggeredAfterMouseMove", function(e) {
            var mouse = _this.getMouseInfo(e);
            var nextState = mouse ? _objectSpread(_objectSpread({}, mouse), {}, {
              isTooltipActive: true
            }) : {
              isTooltipActive: false
            };
            _this.setState(nextState);
            _this.triggerSyncEvent(nextState);
            var onMouseMove = _this.props.onMouseMove;
            if ((0, _isFunction["default"])(onMouseMove)) {
              onMouseMove(nextState, e);
            }
          });
          _defineProperty(_this, "handleItemMouseEnter", function(el) {
            _this.setState(function() {
              return {
                isTooltipActive: true,
                activeItem: el,
                activePayload: el.tooltipPayload,
                activeCoordinate: el.tooltipPosition || {
                  x: el.cx,
                  y: el.cy
                }
              };
            });
          });
          _defineProperty(_this, "handleItemMouseLeave", function() {
            _this.setState(function() {
              return {
                isTooltipActive: false
              };
            });
          });
          _defineProperty(_this, "handleMouseMove", function(e) {
            e.persist();
            _this.throttleTriggeredAfterMouseMove(e);
          });
          _defineProperty(_this, "handleMouseLeave", function(e) {
            _this.throttleTriggeredAfterMouseMove.cancel();
            var nextState = {
              isTooltipActive: false
            };
            _this.setState(nextState);
            _this.triggerSyncEvent(nextState);
            var onMouseLeave = _this.props.onMouseLeave;
            if ((0, _isFunction["default"])(onMouseLeave)) {
              onMouseLeave(nextState, e);
            }
          });
          _defineProperty(_this, "handleOuterEvent", function(e) {
            var eventName = (0, _ReactUtils.getReactEventByType)(e);
            var event = (0, _get["default"])(_this.props, "".concat(eventName));
            if (eventName && (0, _isFunction["default"])(event)) {
              var _mouse;
              var mouse;
              if (/.*touch.*/i.test(eventName)) {
                mouse = _this.getMouseInfo(e.changedTouches[0]);
              } else {
                mouse = _this.getMouseInfo(e);
              }
              event((_mouse = mouse) !== null && _mouse !== void 0 ? _mouse : {}, e);
            }
          });
          _defineProperty(_this, "handleClick", function(e) {
            var mouse = _this.getMouseInfo(e);
            if (mouse) {
              var _nextState2 = _objectSpread(_objectSpread({}, mouse), {}, {
                isTooltipActive: true
              });
              _this.setState(_nextState2);
              _this.triggerSyncEvent(_nextState2);
              var onClick = _this.props.onClick;
              if ((0, _isFunction["default"])(onClick)) {
                onClick(_nextState2, e);
              }
            }
          });
          _defineProperty(_this, "handleMouseDown", function(e) {
            var onMouseDown = _this.props.onMouseDown;
            if ((0, _isFunction["default"])(onMouseDown)) {
              var _nextState3 = _this.getMouseInfo(e);
              onMouseDown(_nextState3, e);
            }
          });
          _defineProperty(_this, "handleMouseUp", function(e) {
            var onMouseUp = _this.props.onMouseUp;
            if ((0, _isFunction["default"])(onMouseUp)) {
              var _nextState4 = _this.getMouseInfo(e);
              onMouseUp(_nextState4, e);
            }
          });
          _defineProperty(_this, "handleTouchMove", function(e) {
            if (e.changedTouches != null && e.changedTouches.length > 0) {
              _this.throttleTriggeredAfterMouseMove(e.changedTouches[0]);
            }
          });
          _defineProperty(_this, "handleTouchStart", function(e) {
            if (e.changedTouches != null && e.changedTouches.length > 0) {
              _this.handleMouseDown(e.changedTouches[0]);
            }
          });
          _defineProperty(_this, "handleTouchEnd", function(e) {
            if (e.changedTouches != null && e.changedTouches.length > 0) {
              _this.handleMouseUp(e.changedTouches[0]);
            }
          });
          _defineProperty(_this, "triggerSyncEvent", function(data) {
            if (_this.props.syncId !== void 0) {
              _Events.eventCenter.emit(_Events.SYNC_EVENT, _this.props.syncId, data, _this.eventEmitterSymbol);
            }
          });
          _defineProperty(_this, "applySyncEvent", function(data) {
            var _this$props = _this.props, layout = _this$props.layout, syncMethod = _this$props.syncMethod;
            var updateId = _this.state.updateId;
            var dataStartIndex = data.dataStartIndex, dataEndIndex = data.dataEndIndex;
            if (data.dataStartIndex !== void 0 || data.dataEndIndex !== void 0) {
              _this.setState(_objectSpread({
                dataStartIndex,
                dataEndIndex
              }, updateStateOfAxisMapsOffsetAndStackGroups({
                props: _this.props,
                dataStartIndex,
                dataEndIndex,
                updateId
              }, _this.state)));
            } else if (data.activeTooltipIndex !== void 0) {
              var chartX = data.chartX, chartY = data.chartY;
              var activeTooltipIndex = data.activeTooltipIndex;
              var _this$state2 = _this.state, offset = _this$state2.offset, tooltipTicks = _this$state2.tooltipTicks;
              if (!offset) {
                return;
              }
              if (typeof syncMethod === "function") {
                activeTooltipIndex = syncMethod(tooltipTicks, data);
              } else if (syncMethod === "value") {
                activeTooltipIndex = -1;
                for (var i = 0; i < tooltipTicks.length; i++) {
                  if (tooltipTicks[i].value === data.activeLabel) {
                    activeTooltipIndex = i;
                    break;
                  }
                }
              }
              var viewBox = _objectSpread(_objectSpread({}, offset), {}, {
                x: offset.left,
                y: offset.top
              });
              var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);
              var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);
              var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;
              var activePayload = getTooltipContent(_this.state, _this.props.data, activeTooltipIndex);
              var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {
                x: layout === "horizontal" ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,
                y: layout === "horizontal" ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate
              } : originCoordinate;
              _this.setState(_objectSpread(_objectSpread({}, data), {}, {
                activeLabel,
                activeCoordinate,
                activePayload,
                activeTooltipIndex
              }));
            } else {
              _this.setState(data);
            }
          });
          _defineProperty(_this, "renderCursor", function(element) {
            var _element$props$active;
            var _this$state3 = _this.state, isTooltipActive = _this$state3.isTooltipActive, activeCoordinate = _this$state3.activeCoordinate, activePayload = _this$state3.activePayload, offset = _this$state3.offset, activeTooltipIndex = _this$state3.activeTooltipIndex, tooltipAxisBandSize = _this$state3.tooltipAxisBandSize;
            var tooltipEventType = _this.getTooltipEventType();
            var isActive = (_element$props$active = element.props.active) !== null && _element$props$active !== void 0 ? _element$props$active : isTooltipActive;
            var layout = _this.props.layout;
            var key = element.key || "_recharts-cursor";
            return _react["default"].createElement(_Cursor.Cursor, {
              key,
              activeCoordinate,
              activePayload,
              activeTooltipIndex,
              chartName,
              element,
              isActive,
              layout,
              offset,
              tooltipAxisBandSize,
              tooltipEventType
            });
          });
          _defineProperty(_this, "renderPolarAxis", function(element, displayName, index) {
            var axisType = (0, _get["default"])(element, "type.axisType");
            var axisMap = (0, _get["default"])(_this.state, "".concat(axisType, "Map"));
            var elementDefaultProps = element.type.defaultProps;
            var elementProps = elementDefaultProps !== void 0 ? _objectSpread(_objectSpread({}, elementDefaultProps), element.props) : element.props;
            var axisOption = axisMap && axisMap[elementProps["".concat(axisType, "Id")]];
            return (0, _react.cloneElement)(element, _objectSpread(_objectSpread({}, axisOption), {}, {
              className: (0, _clsx["default"])(axisType, axisOption.className),
              key: element.key || "".concat(displayName, "-").concat(index),
              ticks: (0, _ChartUtils.getTicksOfAxis)(axisOption, true)
            }));
          });
          _defineProperty(_this, "renderPolarGrid", function(element) {
            var _element$props = element.props, radialLines = _element$props.radialLines, polarAngles = _element$props.polarAngles, polarRadius = _element$props.polarRadius;
            var _this$state4 = _this.state, radiusAxisMap = _this$state4.radiusAxisMap, angleAxisMap = _this$state4.angleAxisMap;
            var radiusAxis = (0, _DataUtils.getAnyElementOfObject)(radiusAxisMap);
            var angleAxis = (0, _DataUtils.getAnyElementOfObject)(angleAxisMap);
            var cx = angleAxis.cx, cy = angleAxis.cy, innerRadius = angleAxis.innerRadius, outerRadius = angleAxis.outerRadius;
            return (0, _react.cloneElement)(element, {
              polarAngles: Array.isArray(polarAngles) ? polarAngles : (0, _ChartUtils.getTicksOfAxis)(angleAxis, true).map(function(entry) {
                return entry.coordinate;
              }),
              polarRadius: Array.isArray(polarRadius) ? polarRadius : (0, _ChartUtils.getTicksOfAxis)(radiusAxis, true).map(function(entry) {
                return entry.coordinate;
              }),
              cx,
              cy,
              innerRadius,
              outerRadius,
              key: element.key || "polar-grid",
              radialLines
            });
          });
          _defineProperty(_this, "renderLegend", function() {
            var formattedGraphicalItems = _this.state.formattedGraphicalItems;
            var _this$props2 = _this.props, children = _this$props2.children, width = _this$props2.width, height = _this$props2.height;
            var margin = _this.props.margin || {};
            var legendWidth = width - (margin.left || 0) - (margin.right || 0);
            var props = (0, _ChartUtils.getLegendProps)({
              children,
              formattedGraphicalItems,
              legendWidth,
              legendContent
            });
            if (!props) {
              return null;
            }
            var item = props.item, otherProps = _objectWithoutProperties(props, _excluded);
            return (0, _react.cloneElement)(item, _objectSpread(_objectSpread({}, otherProps), {}, {
              chartWidth: width,
              chartHeight: height,
              margin,
              onBBoxUpdate: _this.handleLegendBBoxUpdate
            }));
          });
          _defineProperty(_this, "renderTooltip", function() {
            var _tooltipItem$props$ac;
            var _this$props3 = _this.props, children = _this$props3.children, accessibilityLayer = _this$props3.accessibilityLayer;
            var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
            if (!tooltipItem) {
              return null;
            }
            var _this$state5 = _this.state, isTooltipActive = _this$state5.isTooltipActive, activeCoordinate = _this$state5.activeCoordinate, activePayload = _this$state5.activePayload, activeLabel = _this$state5.activeLabel, offset = _this$state5.offset;
            var isActive = (_tooltipItem$props$ac = tooltipItem.props.active) !== null && _tooltipItem$props$ac !== void 0 ? _tooltipItem$props$ac : isTooltipActive;
            return (0, _react.cloneElement)(tooltipItem, {
              viewBox: _objectSpread(_objectSpread({}, offset), {}, {
                x: offset.left,
                y: offset.top
              }),
              active: isActive,
              label: activeLabel,
              payload: isActive ? activePayload : [],
              coordinate: activeCoordinate,
              accessibilityLayer
            });
          });
          _defineProperty(_this, "renderBrush", function(element) {
            var _this$props4 = _this.props, margin = _this$props4.margin, data = _this$props4.data;
            var _this$state6 = _this.state, offset = _this$state6.offset, dataStartIndex = _this$state6.dataStartIndex, dataEndIndex = _this$state6.dataEndIndex, updateId = _this$state6.updateId;
            return (0, _react.cloneElement)(element, {
              key: element.key || "_recharts-brush",
              onChange: (0, _ChartUtils.combineEventHandlers)(_this.handleBrushChange, element.props.onChange),
              data,
              x: (0, _DataUtils.isNumber)(element.props.x) ? element.props.x : offset.left,
              y: (0, _DataUtils.isNumber)(element.props.y) ? element.props.y : offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),
              width: (0, _DataUtils.isNumber)(element.props.width) ? element.props.width : offset.width,
              startIndex: dataStartIndex,
              endIndex: dataEndIndex,
              updateId: "brush-".concat(updateId)
            });
          });
          _defineProperty(_this, "renderReferenceElement", function(element, displayName, index) {
            if (!element) {
              return null;
            }
            var _this2 = _this, clipPathId = _this2.clipPathId;
            var _this$state7 = _this.state, xAxisMap = _this$state7.xAxisMap, yAxisMap = _this$state7.yAxisMap, offset = _this$state7.offset;
            var elementDefaultProps = element.type.defaultProps || {};
            var _element$props2 = element.props, _element$props2$xAxis = _element$props2.xAxisId, xAxisId = _element$props2$xAxis === void 0 ? elementDefaultProps.xAxisId : _element$props2$xAxis, _element$props2$yAxis = _element$props2.yAxisId, yAxisId = _element$props2$yAxis === void 0 ? elementDefaultProps.yAxisId : _element$props2$yAxis;
            return (0, _react.cloneElement)(element, {
              key: element.key || "".concat(displayName, "-").concat(index),
              xAxis: xAxisMap[xAxisId],
              yAxis: yAxisMap[yAxisId],
              viewBox: {
                x: offset.left,
                y: offset.top,
                width: offset.width,
                height: offset.height
              },
              clipPathId
            });
          });
          _defineProperty(_this, "renderActivePoints", function(_ref10) {
            var item = _ref10.item, activePoint = _ref10.activePoint, basePoint = _ref10.basePoint, childIndex = _ref10.childIndex, isRange = _ref10.isRange;
            var result = [];
            var key = item.props.key;
            var itemItemProps = item.item.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;
            var activeDot = itemItemProps.activeDot, dataKey = itemItemProps.dataKey;
            var dotProps = _objectSpread(_objectSpread({
              index: childIndex,
              dataKey,
              cx: activePoint.x,
              cy: activePoint.y,
              r: 4,
              fill: (0, _ChartUtils.getMainColorOfGraphicItem)(item.item),
              strokeWidth: 2,
              stroke: "#fff",
              payload: activePoint.payload,
              value: activePoint.value
            }, (0, _ReactUtils.filterProps)(activeDot, false)), (0, _types.adaptEventHandlers)(activeDot));
            result.push(CategoricalChartWrapper2.renderActiveDot(activeDot, dotProps, "".concat(key, "-activePoint-").concat(childIndex)));
            if (basePoint) {
              result.push(CategoricalChartWrapper2.renderActiveDot(activeDot, _objectSpread(_objectSpread({}, dotProps), {}, {
                cx: basePoint.x,
                cy: basePoint.y
              }), "".concat(key, "-basePoint-").concat(childIndex)));
            } else if (isRange) {
              result.push(null);
            }
            return result;
          });
          _defineProperty(_this, "renderGraphicChild", function(element, displayName, index) {
            var item = _this.filterFormatItem(element, displayName, index);
            if (!item) {
              return null;
            }
            var tooltipEventType = _this.getTooltipEventType();
            var _this$state8 = _this.state, isTooltipActive = _this$state8.isTooltipActive, tooltipAxis = _this$state8.tooltipAxis, activeTooltipIndex = _this$state8.activeTooltipIndex, activeLabel = _this$state8.activeLabel;
            var children = _this.props.children;
            var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
            var _item$props = item.props, points = _item$props.points, isRange = _item$props.isRange, baseLine = _item$props.baseLine;
            var itemItemProps = item.item.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;
            var activeDot = itemItemProps.activeDot, hide = itemItemProps.hide, activeBar = itemItemProps.activeBar, activeShape = itemItemProps.activeShape;
            var hasActive = Boolean(!hide && isTooltipActive && tooltipItem && (activeDot || activeBar || activeShape));
            var itemEvents = {};
            if (tooltipEventType !== "axis" && tooltipItem && tooltipItem.props.trigger === "click") {
              itemEvents = {
                onClick: (0, _ChartUtils.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onClick)
              };
            } else if (tooltipEventType !== "axis") {
              itemEvents = {
                onMouseLeave: (0, _ChartUtils.combineEventHandlers)(_this.handleItemMouseLeave, element.props.onMouseLeave),
                onMouseEnter: (0, _ChartUtils.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onMouseEnter)
              };
            }
            var graphicalItem = (0, _react.cloneElement)(element, _objectSpread(_objectSpread({}, item.props), itemEvents));
            function findWithPayload(entry) {
              return typeof tooltipAxis.dataKey === "function" ? tooltipAxis.dataKey(entry.payload) : null;
            }
            if (hasActive) {
              if (activeTooltipIndex >= 0) {
                var activePoint, basePoint;
                if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {
                  var specifiedKey = typeof tooltipAxis.dataKey === "function" ? findWithPayload : "payload.".concat(tooltipAxis.dataKey.toString());
                  activePoint = (0, _DataUtils.findEntryInArray)(points, specifiedKey, activeLabel);
                  basePoint = isRange && baseLine && (0, _DataUtils.findEntryInArray)(baseLine, specifiedKey, activeLabel);
                } else {
                  activePoint = points === null || points === void 0 ? void 0 : points[activeTooltipIndex];
                  basePoint = isRange && baseLine && baseLine[activeTooltipIndex];
                }
                if (activeShape || activeBar) {
                  var activeIndex = element.props.activeIndex !== void 0 ? element.props.activeIndex : activeTooltipIndex;
                  return [(0, _react.cloneElement)(element, _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
                    activeIndex
                  })), null, null];
                }
                if (!(0, _isNil["default"])(activePoint)) {
                  return [graphicalItem].concat(_toConsumableArray(_this.renderActivePoints({
                    item,
                    activePoint,
                    basePoint,
                    childIndex: activeTooltipIndex,
                    isRange
                  })));
                }
              } else {
                var _this$getItemByXY;
                var _ref11 = (_this$getItemByXY = _this.getItemByXY(_this.state.activeCoordinate)) !== null && _this$getItemByXY !== void 0 ? _this$getItemByXY : {
                  graphicalItem
                }, _ref11$graphicalItem = _ref11.graphicalItem, _ref11$graphicalItem$ = _ref11$graphicalItem.item, xyItem = _ref11$graphicalItem$ === void 0 ? element : _ref11$graphicalItem$, childIndex = _ref11$graphicalItem.childIndex;
                var elementProps = _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {
                  activeIndex: childIndex
                });
                return [(0, _react.cloneElement)(xyItem, elementProps), null, null];
              }
            }
            if (isRange) {
              return [graphicalItem, null, null];
            }
            return [graphicalItem, null];
          });
          _defineProperty(_this, "renderCustomized", function(element, displayName, index) {
            return (0, _react.cloneElement)(element, _objectSpread(_objectSpread({
              key: "recharts-customized-".concat(index)
            }, _this.props), _this.state));
          });
          _defineProperty(_this, "renderMap", {
            CartesianGrid: {
              handler: renderAsIs,
              once: true
            },
            ReferenceArea: {
              handler: _this.renderReferenceElement
            },
            ReferenceLine: {
              handler: renderAsIs
            },
            ReferenceDot: {
              handler: _this.renderReferenceElement
            },
            XAxis: {
              handler: renderAsIs
            },
            YAxis: {
              handler: renderAsIs
            },
            Brush: {
              handler: _this.renderBrush,
              once: true
            },
            Bar: {
              handler: _this.renderGraphicChild
            },
            Line: {
              handler: _this.renderGraphicChild
            },
            Area: {
              handler: _this.renderGraphicChild
            },
            Radar: {
              handler: _this.renderGraphicChild
            },
            RadialBar: {
              handler: _this.renderGraphicChild
            },
            Scatter: {
              handler: _this.renderGraphicChild
            },
            Pie: {
              handler: _this.renderGraphicChild
            },
            Funnel: {
              handler: _this.renderGraphicChild
            },
            Tooltip: {
              handler: _this.renderCursor,
              once: true
            },
            PolarGrid: {
              handler: _this.renderPolarGrid,
              once: true
            },
            PolarAngleAxis: {
              handler: _this.renderPolarAxis
            },
            PolarRadiusAxis: {
              handler: _this.renderPolarAxis
            },
            Customized: {
              handler: _this.renderCustomized
            }
          });
          _this.clipPathId = "".concat((_props$id = _props.id) !== null && _props$id !== void 0 ? _props$id : (0, _DataUtils.uniqueId)("recharts"), "-clip");
          _this.throttleTriggeredAfterMouseMove = (0, _throttle["default"])(_this.triggeredAfterMouseMove, (_props$throttleDelay = _props.throttleDelay) !== null && _props$throttleDelay !== void 0 ? _props$throttleDelay : 1e3 / 60);
          _this.state = {};
          return _this;
        }
        _inherits(CategoricalChartWrapper2, _Component);
        return _createClass(CategoricalChartWrapper2, [{
          key: "componentDidMount",
          value: function componentDidMount() {
            var _this$props$margin$le, _this$props$margin$to;
            this.addListener();
            this.accessibilityManager.setDetails({
              container: this.container,
              offset: {
                left: (_this$props$margin$le = this.props.margin.left) !== null && _this$props$margin$le !== void 0 ? _this$props$margin$le : 0,
                top: (_this$props$margin$to = this.props.margin.top) !== null && _this$props$margin$to !== void 0 ? _this$props$margin$to : 0
              },
              coordinateList: this.state.tooltipTicks,
              mouseHandlerCallback: this.triggeredAfterMouseMove,
              layout: this.props.layout
            });
            this.displayDefaultTooltip();
          }
        }, {
          key: "displayDefaultTooltip",
          value: function displayDefaultTooltip() {
            var _this$props5 = this.props, children = _this$props5.children, data = _this$props5.data, height = _this$props5.height, layout = _this$props5.layout;
            var tooltipElem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
            if (!tooltipElem) {
              return;
            }
            var defaultIndex = tooltipElem.props.defaultIndex;
            if (typeof defaultIndex !== "number" || defaultIndex < 0 || defaultIndex > this.state.tooltipTicks.length - 1) {
              return;
            }
            var activeLabel = this.state.tooltipTicks[defaultIndex] && this.state.tooltipTicks[defaultIndex].value;
            var activePayload = getTooltipContent(this.state, data, defaultIndex, activeLabel);
            var independentAxisCoord = this.state.tooltipTicks[defaultIndex].coordinate;
            var dependentAxisCoord = (this.state.offset.top + height) / 2;
            var isHorizontal = layout === "horizontal";
            var activeCoordinate = isHorizontal ? {
              x: independentAxisCoord,
              y: dependentAxisCoord
            } : {
              y: independentAxisCoord,
              x: dependentAxisCoord
            };
            var scatterPlotElement = this.state.formattedGraphicalItems.find(function(_ref12) {
              var item = _ref12.item;
              return item.type.name === "Scatter";
            });
            if (scatterPlotElement) {
              activeCoordinate = _objectSpread(_objectSpread({}, activeCoordinate), scatterPlotElement.props.points[defaultIndex].tooltipPosition);
              activePayload = scatterPlotElement.props.points[defaultIndex].tooltipPayload;
            }
            var nextState = {
              activeTooltipIndex: defaultIndex,
              isTooltipActive: true,
              activeLabel,
              activePayload,
              activeCoordinate
            };
            this.setState(nextState);
            this.renderCursor(tooltipElem);
            this.accessibilityManager.setIndex(defaultIndex);
          }
        }, {
          key: "getSnapshotBeforeUpdate",
          value: function getSnapshotBeforeUpdate(prevProps, prevState) {
            if (!this.props.accessibilityLayer) {
              return null;
            }
            if (this.state.tooltipTicks !== prevState.tooltipTicks) {
              this.accessibilityManager.setDetails({
                coordinateList: this.state.tooltipTicks
              });
            }
            if (this.props.layout !== prevProps.layout) {
              this.accessibilityManager.setDetails({
                layout: this.props.layout
              });
            }
            if (this.props.margin !== prevProps.margin) {
              var _this$props$margin$le2, _this$props$margin$to2;
              this.accessibilityManager.setDetails({
                offset: {
                  left: (_this$props$margin$le2 = this.props.margin.left) !== null && _this$props$margin$le2 !== void 0 ? _this$props$margin$le2 : 0,
                  top: (_this$props$margin$to2 = this.props.margin.top) !== null && _this$props$margin$to2 !== void 0 ? _this$props$margin$to2 : 0
                }
              });
            }
            return null;
          }
        }, {
          key: "componentDidUpdate",
          value: function componentDidUpdate(prevProps) {
            if (!(0, _ReactUtils.isChildrenEqual)([(0, _ReactUtils.findChildByType)(prevProps.children, _Tooltip.Tooltip)], [(0, _ReactUtils.findChildByType)(this.props.children, _Tooltip.Tooltip)])) {
              this.displayDefaultTooltip();
            }
          }
        }, {
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.removeListener();
            this.throttleTriggeredAfterMouseMove.cancel();
          }
        }, {
          key: "getTooltipEventType",
          value: function getTooltipEventType() {
            var tooltipItem = (0, _ReactUtils.findChildByType)(this.props.children, _Tooltip.Tooltip);
            if (tooltipItem && typeof tooltipItem.props.shared === "boolean") {
              var eventType = tooltipItem.props.shared ? "axis" : "item";
              return validateTooltipEventTypes.indexOf(eventType) >= 0 ? eventType : defaultTooltipEventType;
            }
            return defaultTooltipEventType;
          }
          /**
           * Get the information of mouse in chart, return null when the mouse is not in the chart
           * @param  {MousePointer} event    The event object
           * @return {Object}          Mouse data
           */
        }, {
          key: "getMouseInfo",
          value: function getMouseInfo(event) {
            if (!this.container) {
              return null;
            }
            var element = this.container;
            var boundingRect = element.getBoundingClientRect();
            var containerOffset = (0, _DOMUtils.getOffset)(boundingRect);
            var e = {
              chartX: Math.round(event.pageX - containerOffset.left),
              chartY: Math.round(event.pageY - containerOffset.top)
            };
            var scale = boundingRect.width / element.offsetWidth || 1;
            var rangeObj = this.inRange(e.chartX, e.chartY, scale);
            if (!rangeObj) {
              return null;
            }
            var _this$state9 = this.state, xAxisMap = _this$state9.xAxisMap, yAxisMap = _this$state9.yAxisMap;
            var tooltipEventType = this.getTooltipEventType();
            if (tooltipEventType !== "axis" && xAxisMap && yAxisMap) {
              var xScale = (0, _DataUtils.getAnyElementOfObject)(xAxisMap).scale;
              var yScale = (0, _DataUtils.getAnyElementOfObject)(yAxisMap).scale;
              var xValue = xScale && xScale.invert ? xScale.invert(e.chartX) : null;
              var yValue = yScale && yScale.invert ? yScale.invert(e.chartY) : null;
              return _objectSpread(_objectSpread({}, e), {}, {
                xValue,
                yValue
              });
            }
            var toolTipData = getTooltipData(this.state, this.props.data, this.props.layout, rangeObj);
            if (toolTipData) {
              return _objectSpread(_objectSpread({}, e), toolTipData);
            }
            return null;
          }
        }, {
          key: "inRange",
          value: function inRange(x, y) {
            var scale = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
            var layout = this.props.layout;
            var scaledX = x / scale, scaledY = y / scale;
            if (layout === "horizontal" || layout === "vertical") {
              var offset = this.state.offset;
              var isInRange = scaledX >= offset.left && scaledX <= offset.left + offset.width && scaledY >= offset.top && scaledY <= offset.top + offset.height;
              return isInRange ? {
                x: scaledX,
                y: scaledY
              } : null;
            }
            var _this$state10 = this.state, angleAxisMap = _this$state10.angleAxisMap, radiusAxisMap = _this$state10.radiusAxisMap;
            if (angleAxisMap && radiusAxisMap) {
              var angleAxis = (0, _DataUtils.getAnyElementOfObject)(angleAxisMap);
              return (0, _PolarUtils.inRangeOfSector)({
                x: scaledX,
                y: scaledY
              }, angleAxis);
            }
            return null;
          }
        }, {
          key: "parseEventsOfWrapper",
          value: function parseEventsOfWrapper() {
            var children = this.props.children;
            var tooltipEventType = this.getTooltipEventType();
            var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
            var tooltipEvents = {};
            if (tooltipItem && tooltipEventType === "axis") {
              if (tooltipItem.props.trigger === "click") {
                tooltipEvents = {
                  onClick: this.handleClick
                };
              } else {
                tooltipEvents = {
                  onMouseEnter: this.handleMouseEnter,
                  onMouseMove: this.handleMouseMove,
                  onMouseLeave: this.handleMouseLeave,
                  onTouchMove: this.handleTouchMove,
                  onTouchStart: this.handleTouchStart,
                  onTouchEnd: this.handleTouchEnd
                };
              }
            }
            var outerEvents = (0, _types.adaptEventHandlers)(this.props, this.handleOuterEvent);
            return _objectSpread(_objectSpread({}, outerEvents), tooltipEvents);
          }
        }, {
          key: "addListener",
          value: function addListener() {
            _Events.eventCenter.on(_Events.SYNC_EVENT, this.handleReceiveSyncEvent);
          }
        }, {
          key: "removeListener",
          value: function removeListener() {
            _Events.eventCenter.removeListener(_Events.SYNC_EVENT, this.handleReceiveSyncEvent);
          }
        }, {
          key: "filterFormatItem",
          value: function filterFormatItem(item, displayName, childIndex) {
            var formattedGraphicalItems = this.state.formattedGraphicalItems;
            for (var i = 0, len = formattedGraphicalItems.length; i < len; i++) {
              var entry = formattedGraphicalItems[i];
              if (entry.item === item || entry.props.key === item.key || displayName === (0, _ReactUtils.getDisplayName)(entry.item.type) && childIndex === entry.childIndex) {
                return entry;
              }
            }
            return null;
          }
        }, {
          key: "renderClipPath",
          value: function renderClipPath() {
            var clipPathId = this.clipPathId;
            var _this$state$offset = this.state.offset, left = _this$state$offset.left, top = _this$state$offset.top, height = _this$state$offset.height, width = _this$state$offset.width;
            return _react["default"].createElement("defs", null, _react["default"].createElement("clipPath", {
              id: clipPathId
            }, _react["default"].createElement("rect", {
              x: left,
              y: top,
              height,
              width
            })));
          }
        }, {
          key: "getXScales",
          value: function getXScales() {
            var xAxisMap = this.state.xAxisMap;
            return xAxisMap ? Object.entries(xAxisMap).reduce(function(res, _ref13) {
              var _ref14 = _slicedToArray(_ref13, 2), axisId = _ref14[0], axisProps = _ref14[1];
              return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));
            }, {}) : null;
          }
        }, {
          key: "getYScales",
          value: function getYScales() {
            var yAxisMap = this.state.yAxisMap;
            return yAxisMap ? Object.entries(yAxisMap).reduce(function(res, _ref15) {
              var _ref16 = _slicedToArray(_ref15, 2), axisId = _ref16[0], axisProps = _ref16[1];
              return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));
            }, {}) : null;
          }
        }, {
          key: "getXScaleByAxisId",
          value: function getXScaleByAxisId(axisId) {
            var _this$state$xAxisMap;
            return (_this$state$xAxisMap = this.state.xAxisMap) === null || _this$state$xAxisMap === void 0 || (_this$state$xAxisMap = _this$state$xAxisMap[axisId]) === null || _this$state$xAxisMap === void 0 ? void 0 : _this$state$xAxisMap.scale;
          }
        }, {
          key: "getYScaleByAxisId",
          value: function getYScaleByAxisId(axisId) {
            var _this$state$yAxisMap;
            return (_this$state$yAxisMap = this.state.yAxisMap) === null || _this$state$yAxisMap === void 0 || (_this$state$yAxisMap = _this$state$yAxisMap[axisId]) === null || _this$state$yAxisMap === void 0 ? void 0 : _this$state$yAxisMap.scale;
          }
        }, {
          key: "getItemByXY",
          value: function getItemByXY(chartXY) {
            var _this$state11 = this.state, formattedGraphicalItems = _this$state11.formattedGraphicalItems, activeItem = _this$state11.activeItem;
            if (formattedGraphicalItems && formattedGraphicalItems.length) {
              for (var i = 0, len = formattedGraphicalItems.length; i < len; i++) {
                var graphicalItem = formattedGraphicalItems[i];
                var props = graphicalItem.props, item = graphicalItem.item;
                var itemProps = item.type.defaultProps !== void 0 ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;
                var itemDisplayName = (0, _ReactUtils.getDisplayName)(item.type);
                if (itemDisplayName === "Bar") {
                  var activeBarItem = (props.data || []).find(function(entry) {
                    return (0, _Rectangle.isInRectangle)(chartXY, entry);
                  });
                  if (activeBarItem) {
                    return {
                      graphicalItem,
                      payload: activeBarItem
                    };
                  }
                } else if (itemDisplayName === "RadialBar") {
                  var _activeBarItem = (props.data || []).find(function(entry) {
                    return (0, _PolarUtils.inRangeOfSector)(chartXY, entry);
                  });
                  if (_activeBarItem) {
                    return {
                      graphicalItem,
                      payload: _activeBarItem
                    };
                  }
                } else if ((0, _ActiveShapeUtils.isFunnel)(graphicalItem, activeItem) || (0, _ActiveShapeUtils.isPie)(graphicalItem, activeItem) || (0, _ActiveShapeUtils.isScatter)(graphicalItem, activeItem)) {
                  var activeIndex = (0, _ActiveShapeUtils.getActiveShapeIndexForTooltip)({
                    graphicalItem,
                    activeTooltipItem: activeItem,
                    itemData: itemProps.data
                  });
                  var childIndex = itemProps.activeIndex === void 0 ? activeIndex : itemProps.activeIndex;
                  return {
                    graphicalItem: _objectSpread(_objectSpread({}, graphicalItem), {}, {
                      childIndex
                    }),
                    payload: (0, _ActiveShapeUtils.isScatter)(graphicalItem, activeItem) ? itemProps.data[activeIndex] : graphicalItem.props.data[activeIndex]
                  };
                }
              }
            }
            return null;
          }
        }, {
          key: "render",
          value: function render() {
            var _this3 = this;
            if (!(0, _ReactUtils.validateWidthHeight)(this)) {
              return null;
            }
            var _this$props6 = this.props, children = _this$props6.children, className = _this$props6.className, width = _this$props6.width, height = _this$props6.height, style = _this$props6.style, compact = _this$props6.compact, title = _this$props6.title, desc = _this$props6.desc, others = _objectWithoutProperties(_this$props6, _excluded2);
            var attrs = (0, _ReactUtils.filterProps)(others, false);
            if (compact) {
              return _react["default"].createElement(_chartLayoutContext.ChartLayoutContextProvider, {
                state: this.state,
                width: this.props.width,
                height: this.props.height,
                clipPathId: this.clipPathId
              }, _react["default"].createElement(_Surface.Surface, _extends({}, attrs, {
                width,
                height,
                title,
                desc
              }), this.renderClipPath(), (0, _ReactUtils.renderByOrder)(children, this.renderMap)));
            }
            if (this.props.accessibilityLayer) {
              var _this$props$tabIndex, _this$props$role;
              attrs.tabIndex = (_this$props$tabIndex = this.props.tabIndex) !== null && _this$props$tabIndex !== void 0 ? _this$props$tabIndex : 0;
              attrs.role = (_this$props$role = this.props.role) !== null && _this$props$role !== void 0 ? _this$props$role : "application";
              attrs.onKeyDown = function(e) {
                _this3.accessibilityManager.keyboardEvent(e);
              };
              attrs.onFocus = function() {
                _this3.accessibilityManager.focus();
              };
            }
            var events = this.parseEventsOfWrapper();
            return _react["default"].createElement(_chartLayoutContext.ChartLayoutContextProvider, {
              state: this.state,
              width: this.props.width,
              height: this.props.height,
              clipPathId: this.clipPathId
            }, _react["default"].createElement("div", _extends({
              className: (0, _clsx["default"])("recharts-wrapper", className),
              style: _objectSpread({
                position: "relative",
                cursor: "default",
                width,
                height
              }, style)
            }, events, {
              ref: function ref(node) {
                _this3.container = node;
              }
            }), _react["default"].createElement(_Surface.Surface, _extends({}, attrs, {
              width,
              height,
              title,
              desc,
              style: FULL_WIDTH_AND_HEIGHT
            }), this.renderClipPath(), (0, _ReactUtils.renderByOrder)(children, this.renderMap)), this.renderLegend(), this.renderTooltip()));
          }
        }]);
      }(_react.Component);
      _defineProperty(CategoricalChartWrapper, "displayName", chartName);
      _defineProperty(CategoricalChartWrapper, "defaultProps", _objectSpread({
        layout: "horizontal",
        stackOffset: "none",
        barCategoryGap: "10%",
        barGap: 4,
        margin: {
          top: 5,
          right: 5,
          bottom: 5,
          left: 5
        },
        reverseStackOrder: false,
        syncMethod: "index"
      }, defaultProps));
      _defineProperty(CategoricalChartWrapper, "getDerivedStateFromProps", function(nextProps, prevState) {
        var dataKey = nextProps.dataKey, data = nextProps.data, children = nextProps.children, width = nextProps.width, height = nextProps.height, layout = nextProps.layout, stackOffset = nextProps.stackOffset, margin = nextProps.margin;
        var dataStartIndex = prevState.dataStartIndex, dataEndIndex = prevState.dataEndIndex;
        if (prevState.updateId === void 0) {
          var defaultState = createDefaultState(nextProps);
          return _objectSpread(_objectSpread(_objectSpread({}, defaultState), {}, {
            updateId: 0
          }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
            props: nextProps
          }, defaultState), {}, {
            updateId: 0
          }), prevState)), {}, {
            prevDataKey: dataKey,
            prevData: data,
            prevWidth: width,
            prevHeight: height,
            prevLayout: layout,
            prevStackOffset: stackOffset,
            prevMargin: margin,
            prevChildren: children
          });
        }
        if (dataKey !== prevState.prevDataKey || data !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || layout !== prevState.prevLayout || stackOffset !== prevState.prevStackOffset || !(0, _ShallowEqual.shallowEqual)(margin, prevState.prevMargin)) {
          var _defaultState = createDefaultState(nextProps);
          var keepFromPrevState = {
            // (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid
            // any flickering
            chartX: prevState.chartX,
            chartY: prevState.chartY,
            // The tooltip should stay active when it was active in the previous render. If this is not
            // the case, the tooltip disappears and immediately re-appears, causing a flickering effect
            isTooltipActive: prevState.isTooltipActive
          };
          var updatesToState = _objectSpread(_objectSpread({}, getTooltipData(prevState, data, layout)), {}, {
            updateId: prevState.updateId + 1
          });
          var newState = _objectSpread(_objectSpread(_objectSpread({}, _defaultState), keepFromPrevState), updatesToState);
          return _objectSpread(_objectSpread(_objectSpread({}, newState), updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread({
            props: nextProps
          }, newState), prevState)), {}, {
            prevDataKey: dataKey,
            prevData: data,
            prevWidth: width,
            prevHeight: height,
            prevLayout: layout,
            prevStackOffset: stackOffset,
            prevMargin: margin,
            prevChildren: children
          });
        }
        if (!(0, _ReactUtils.isChildrenEqual)(children, prevState.prevChildren)) {
          var _brush$props$startInd, _brush$props, _brush$props$endIndex, _brush$props2;
          var brush = (0, _ReactUtils.findChildByType)(children, _Brush.Brush);
          var startIndex = brush ? (_brush$props$startInd = (_brush$props = brush.props) === null || _brush$props === void 0 ? void 0 : _brush$props.startIndex) !== null && _brush$props$startInd !== void 0 ? _brush$props$startInd : dataStartIndex : dataStartIndex;
          var endIndex = brush ? (_brush$props$endIndex = (_brush$props2 = brush.props) === null || _brush$props2 === void 0 ? void 0 : _brush$props2.endIndex) !== null && _brush$props$endIndex !== void 0 ? _brush$props$endIndex : dataEndIndex : dataEndIndex;
          var hasDifferentStartOrEndIndex = startIndex !== dataStartIndex || endIndex !== dataEndIndex;
          var hasGlobalData = !(0, _isNil["default"])(data);
          var newUpdateId = hasGlobalData && !hasDifferentStartOrEndIndex ? prevState.updateId : prevState.updateId + 1;
          return _objectSpread(_objectSpread({
            updateId: newUpdateId
          }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({
            props: nextProps
          }, prevState), {}, {
            updateId: newUpdateId,
            dataStartIndex: startIndex,
            dataEndIndex: endIndex
          }), prevState)), {}, {
            prevChildren: children,
            dataStartIndex: startIndex,
            dataEndIndex: endIndex
          });
        }
        return null;
      });
      _defineProperty(CategoricalChartWrapper, "renderActiveDot", function(option, props, key) {
        var dot;
        if ((0, _react.isValidElement)(option)) {
          dot = (0, _react.cloneElement)(option, props);
        } else if ((0, _isFunction["default"])(option)) {
          dot = option(props);
        } else {
          dot = _react["default"].createElement(_Dot.Dot, props);
        }
        return _react["default"].createElement(_Layer.Layer, {
          className: "recharts-active-dot",
          key
        }, dot);
      });
      var CategoricalChart = (0, _react.forwardRef)(function CategoricalChart2(props, ref) {
        return _react["default"].createElement(CategoricalChartWrapper, _extends({}, props, {
          ref
        }));
      });
      CategoricalChart.displayName = CategoricalChartWrapper.displayName;
      return CategoricalChart;
    };
  }
});

// node_modules/recharts/lib/chart/LineChart.js
var require_LineChart = __commonJS({
  "node_modules/recharts/lib/chart/LineChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LineChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Line = require_Line();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _CartesianUtils = require_CartesianUtils();
    var LineChart = exports.LineChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "LineChart",
      GraphicalChild: _Line.Line,
      axisComponents: [{
        axisType: "xAxis",
        AxisComp: _XAxis.XAxis
      }, {
        axisType: "yAxis",
        AxisComp: _YAxis.YAxis
      }],
      formatAxisMap: _CartesianUtils.formatAxisMap
    });
  }
});

// node_modules/recharts/lib/chart/BarChart.js
var require_BarChart = __commonJS({
  "node_modules/recharts/lib/chart/BarChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.BarChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Bar = require_Bar();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _CartesianUtils = require_CartesianUtils();
    var BarChart = exports.BarChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "BarChart",
      GraphicalChild: _Bar.Bar,
      defaultTooltipEventType: "axis",
      validateTooltipEventTypes: ["axis", "item"],
      axisComponents: [{
        axisType: "xAxis",
        AxisComp: _XAxis.XAxis
      }, {
        axisType: "yAxis",
        AxisComp: _YAxis.YAxis
      }],
      formatAxisMap: _CartesianUtils.formatAxisMap
    });
  }
});

// node_modules/recharts/lib/chart/PieChart.js
var require_PieChart = __commonJS({
  "node_modules/recharts/lib/chart/PieChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PieChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _PolarAngleAxis = require_PolarAngleAxis();
    var _PolarRadiusAxis = require_PolarRadiusAxis();
    var _PolarUtils = require_PolarUtils();
    var _Pie = require_Pie();
    var PieChart = exports.PieChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "PieChart",
      GraphicalChild: _Pie.Pie,
      validateTooltipEventTypes: ["item"],
      defaultTooltipEventType: "item",
      legendContent: "children",
      axisComponents: [{
        axisType: "angleAxis",
        AxisComp: _PolarAngleAxis.PolarAngleAxis
      }, {
        axisType: "radiusAxis",
        AxisComp: _PolarRadiusAxis.PolarRadiusAxis
      }],
      formatAxisMap: _PolarUtils.formatAxisMap,
      defaultProps: {
        layout: "centric",
        startAngle: 0,
        endAngle: 360,
        cx: "50%",
        cy: "50%",
        innerRadius: 0,
        outerRadius: "80%"
      }
    });
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports, module) {
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key in object) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports, module) {
    function copyArray(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    var Uint8Array = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = /* @__PURE__ */ function() {
      function object() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object) {
      return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/_parent.js
var require_parent = __commonJS({
  "node_modules/lodash/_parent.js"(exports, module) {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }
    module.exports = parent;
  }
});

// node_modules/lodash/_baseUnset.js
var require_baseUnset = __commonJS({
  "node_modules/lodash/_baseUnset.js"(exports, module) {
    var castPath = require_castPath();
    var last = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }
    module.exports = baseUnset;
  }
});

// node_modules/lodash/_customOmitClone.js
var require_customOmitClone = __commonJS({
  "node_modules/lodash/_customOmitClone.js"(exports, module) {
    var isPlainObject = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  }
});

// node_modules/lodash/flatten.js
var require_flatten = __commonJS({
  "node_modules/lodash/flatten.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }
    module.exports = flatten;
  }
});

// node_modules/lodash/_flatRest.js
var require_flatRest = __commonJS({
  "node_modules/lodash/_flatRest.js"(exports, module) {
    var flatten = require_flatten();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function flatRest(func) {
      return setToString(overRest(func, void 0, flatten), func + "");
    }
    module.exports = flatRest;
  }
});

// node_modules/lodash/omit.js
var require_omit = __commonJS({
  "node_modules/lodash/omit.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit;
  }
});

// node_modules/recharts/lib/util/Constants.js
var require_Constants = __commonJS({
  "node_modules/recharts/lib/util/Constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.COLOR_PANEL = void 0;
    var COLOR_PANEL = exports.COLOR_PANEL = ["#1890FF", "#66B5FF", "#41D9C7", "#2FC25B", "#6EDB8F", "#9AE65C", "#FACC14", "#E6965C", "#57AD71", "#223273", "#738AE6", "#7564CC", "#8543E0", "#A877ED", "#5C8EE6", "#13C2C2", "#70E0E0", "#5CA3E6", "#3436C7", "#8082FF", "#DD81E6", "#F04864", "#FA7D92", "#D598D9"];
  }
});

// node_modules/recharts/lib/chart/Treemap.js
var require_Treemap = __commonJS({
  "node_modules/recharts/lib/chart/Treemap.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Treemap = void 0;
    var _isNaN = _interopRequireDefault(require_isNaN());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _omit = _interopRequireDefault(require_omit());
    var _get = _interopRequireDefault(require_get());
    var _clsx = _interopRequireDefault(require_clsx());
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _Tooltip = require_Tooltip();
    var _Layer = require_Layer();
    var _Surface = require_Surface();
    var _Polygon = require_Polygon();
    var _Rectangle = require_Rectangle();
    var _ChartUtils = require_ChartUtils();
    var _Constants = require_Constants();
    var _DataUtils = require_DataUtils();
    var _DOMUtils = require_DOMUtils();
    var _Global = require_Global();
    var _ReactUtils = require_ReactUtils();
    var _excluded = ["width", "height", "className", "style", "children", "type"];
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var NODE_VALUE_KEY = "value";
    var computeNode = function computeNode2(_ref) {
      var depth = _ref.depth, node = _ref.node, index = _ref.index, valueKey = _ref.valueKey;
      var children = node.children;
      var childDepth = depth + 1;
      var computedChildren = children && children.length ? children.map(function(child, i) {
        return computeNode2({
          depth: childDepth,
          node: child,
          index: i,
          valueKey
        });
      }) : null;
      var nodeValue;
      if (children && children.length) {
        nodeValue = computedChildren.reduce(function(result, child) {
          return result + child[NODE_VALUE_KEY];
        }, 0);
      } else {
        nodeValue = (0, _isNaN["default"])(node[valueKey]) || node[valueKey] <= 0 ? 0 : node[valueKey];
      }
      return _objectSpread(_objectSpread({}, node), {}, _defineProperty(_defineProperty(_defineProperty({
        children: computedChildren
      }, NODE_VALUE_KEY, nodeValue), "depth", depth), "index", index));
    };
    var filterRect = function filterRect2(node) {
      return {
        x: node.x,
        y: node.y,
        width: node.width,
        height: node.height
      };
    };
    var getAreaOfChildren = function getAreaOfChildren2(children, areaValueRatio) {
      var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;
      return children.map(function(child) {
        var area = child[NODE_VALUE_KEY] * ratio;
        return _objectSpread(_objectSpread({}, child), {}, {
          area: (0, _isNaN["default"])(area) || area <= 0 ? 0 : area
        });
      });
    };
    var getWorstScore = function getWorstScore2(row, parentSize, aspectRatio) {
      var parentArea = parentSize * parentSize;
      var rowArea = row.area * row.area;
      var _row$reduce = row.reduce(function(result, child) {
        return {
          min: Math.min(result.min, child.area),
          max: Math.max(result.max, child.area)
        };
      }, {
        min: Infinity,
        max: 0
      }), min = _row$reduce.min, max = _row$reduce.max;
      return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;
    };
    var horizontalPosition = function horizontalPosition2(row, parentSize, parentRect, isFlush) {
      var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;
      if (isFlush || rowHeight > parentRect.height) {
        rowHeight = parentRect.height;
      }
      var curX = parentRect.x;
      var child;
      for (var i = 0, len = row.length; i < len; i++) {
        child = row[i];
        child.x = curX;
        child.y = parentRect.y;
        child.height = rowHeight;
        child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);
        curX += child.width;
      }
      child.width += parentRect.x + parentRect.width - curX;
      return _objectSpread(_objectSpread({}, parentRect), {}, {
        y: parentRect.y + rowHeight,
        height: parentRect.height - rowHeight
      });
    };
    var verticalPosition = function verticalPosition2(row, parentSize, parentRect, isFlush) {
      var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;
      if (isFlush || rowWidth > parentRect.width) {
        rowWidth = parentRect.width;
      }
      var curY = parentRect.y;
      var child;
      for (var i = 0, len = row.length; i < len; i++) {
        child = row[i];
        child.x = parentRect.x;
        child.y = curY;
        child.width = rowWidth;
        child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);
        curY += child.height;
      }
      if (child) {
        child.height += parentRect.y + parentRect.height - curY;
      }
      return _objectSpread(_objectSpread({}, parentRect), {}, {
        x: parentRect.x + rowWidth,
        width: parentRect.width - rowWidth
      });
    };
    var position = function position2(row, parentSize, parentRect, isFlush) {
      if (parentSize === parentRect.width) {
        return horizontalPosition(row, parentSize, parentRect, isFlush);
      }
      return verticalPosition(row, parentSize, parentRect, isFlush);
    };
    var squarify = function squarify2(node, aspectRatio) {
      var children = node.children;
      if (children && children.length) {
        var rect = filterRect(node);
        var row = [];
        var best = Infinity;
        var child, score;
        var size = Math.min(rect.width, rect.height);
        var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node[NODE_VALUE_KEY]);
        var tempChildren = scaleChildren.slice();
        row.area = 0;
        while (tempChildren.length > 0) {
          row.push(child = tempChildren[0]);
          row.area += child.area;
          score = getWorstScore(row, size, aspectRatio);
          if (score <= best) {
            tempChildren.shift();
            best = score;
          } else {
            row.area -= row.pop().area;
            rect = position(row, size, rect, false);
            size = Math.min(rect.width, rect.height);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          rect = position(row, size, rect, true);
          row.length = row.area = 0;
        }
        return _objectSpread(_objectSpread({}, node), {}, {
          children: scaleChildren.map(function(c) {
            return squarify2(c, aspectRatio);
          })
        });
      }
      return node;
    };
    var defaultState = {
      isTooltipActive: false,
      isAnimationFinished: false,
      activeNode: null,
      formatRoot: null,
      currentRoot: null,
      nestIndex: []
    };
    var Treemap = exports.Treemap = function(_PureComponent) {
      function Treemap2() {
        var _this;
        _classCallCheck(this, Treemap2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Treemap2, [].concat(args));
        _defineProperty(_this, "state", _objectSpread({}, defaultState));
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(Treemap2, _PureComponent);
      return _createClass(Treemap2, [{
        key: "handleMouseEnter",
        value: function handleMouseEnter(node, e) {
          e.persist();
          var _this$props = this.props, onMouseEnter = _this$props.onMouseEnter, children = _this$props.children;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (tooltipItem) {
            this.setState({
              isTooltipActive: true,
              activeNode: node
            }, function() {
              if (onMouseEnter) {
                onMouseEnter(node, e);
              }
            });
          } else if (onMouseEnter) {
            onMouseEnter(node, e);
          }
        }
      }, {
        key: "handleMouseLeave",
        value: function handleMouseLeave(node, e) {
          e.persist();
          var _this$props2 = this.props, onMouseLeave = _this$props2.onMouseLeave, children = _this$props2.children;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (tooltipItem) {
            this.setState({
              isTooltipActive: false,
              activeNode: null
            }, function() {
              if (onMouseLeave) {
                onMouseLeave(node, e);
              }
            });
          } else if (onMouseLeave) {
            onMouseLeave(node, e);
          }
        }
      }, {
        key: "handleClick",
        value: function handleClick(node) {
          var _this$props3 = this.props, onClick = _this$props3.onClick, type = _this$props3.type;
          if (type === "nest" && node.children) {
            var _this$props4 = this.props, width = _this$props4.width, height = _this$props4.height, dataKey = _this$props4.dataKey, aspectRatio = _this$props4.aspectRatio;
            var root = computeNode({
              depth: 0,
              node: _objectSpread(_objectSpread({}, node), {}, {
                x: 0,
                y: 0,
                width,
                height
              }),
              index: 0,
              valueKey: dataKey
            });
            var formatRoot = squarify(root, aspectRatio);
            var nestIndex = this.state.nestIndex;
            nestIndex.push(node);
            this.setState({
              formatRoot,
              currentRoot: root,
              nestIndex
            });
          }
          if (onClick) {
            onClick(node);
          }
        }
      }, {
        key: "handleNestIndex",
        value: function handleNestIndex(node, i) {
          var nestIndex = this.state.nestIndex;
          var _this$props5 = this.props, width = _this$props5.width, height = _this$props5.height, dataKey = _this$props5.dataKey, aspectRatio = _this$props5.aspectRatio;
          var root = computeNode({
            depth: 0,
            node: _objectSpread(_objectSpread({}, node), {}, {
              x: 0,
              y: 0,
              width,
              height
            }),
            index: 0,
            valueKey: dataKey
          });
          var formatRoot = squarify(root, aspectRatio);
          nestIndex = nestIndex.slice(0, i + 1);
          this.setState({
            formatRoot,
            currentRoot: node,
            nestIndex
          });
        }
      }, {
        key: "renderItem",
        value: function renderItem(content, nodeProps, isLeaf) {
          var _this2 = this;
          var _this$props6 = this.props, isAnimationActive = _this$props6.isAnimationActive, animationBegin = _this$props6.animationBegin, animationDuration = _this$props6.animationDuration, animationEasing = _this$props6.animationEasing, isUpdateAnimationActive = _this$props6.isUpdateAnimationActive, type = _this$props6.type, animationId = _this$props6.animationId, colorPanel = _this$props6.colorPanel;
          var isAnimationFinished = this.state.isAnimationFinished;
          var width = nodeProps.width, height = nodeProps.height, x = nodeProps.x, y = nodeProps.y, depth = nodeProps.depth;
          var translateX = parseInt("".concat((Math.random() * 2 - 1) * width), 10);
          var event = {};
          if (isLeaf || type === "nest") {
            event = {
              onMouseEnter: this.handleMouseEnter.bind(this, nodeProps),
              onMouseLeave: this.handleMouseLeave.bind(this, nodeProps),
              onClick: this.handleClick.bind(this, nodeProps)
            };
          }
          if (!isAnimationActive) {
            return _react["default"].createElement(_Layer.Layer, event, this.constructor.renderContentItem(content, _objectSpread(_objectSpread({}, nodeProps), {}, {
              isAnimationActive: false,
              isUpdateAnimationActive: false,
              width,
              height,
              x,
              y
            }), type, colorPanel));
          }
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            key: "treemap-".concat(animationId),
            from: {
              x,
              y,
              width,
              height
            },
            to: {
              x,
              y,
              width,
              height
            },
            onAnimationStart: this.handleAnimationStart,
            onAnimationEnd: this.handleAnimationEnd
          }, function(_ref2) {
            var currX = _ref2.x, currY = _ref2.y, currWidth = _ref2.width, currHeight = _ref2.height;
            return _react["default"].createElement(_reactSmooth["default"], {
              from: "translate(".concat(translateX, "px, ").concat(translateX, "px)"),
              to: "translate(0, 0)",
              attributeName: "transform",
              begin: animationBegin,
              easing: animationEasing,
              isActive: isAnimationActive,
              duration: animationDuration
            }, _react["default"].createElement(_Layer.Layer, event, function() {
              if (depth > 2 && !isAnimationFinished) {
                return null;
              }
              return _this2.constructor.renderContentItem(content, _objectSpread(_objectSpread({}, nodeProps), {}, {
                isAnimationActive,
                isUpdateAnimationActive: !isUpdateAnimationActive,
                width: currWidth,
                height: currHeight,
                x: currX,
                y: currY
              }), type, colorPanel);
            }()));
          });
        }
      }, {
        key: "renderNode",
        value: function renderNode(root, node) {
          var _this3 = this;
          var _this$props7 = this.props, content = _this$props7.content, type = _this$props7.type;
          var nodeProps = _objectSpread(_objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(this.props, false)), node), {}, {
            root
          });
          var isLeaf = !node.children || !node.children.length;
          var currentRoot = this.state.currentRoot;
          var isCurrentRootChild = (currentRoot.children || []).filter(function(item) {
            return item.depth === node.depth && item.name === node.name;
          });
          if (!isCurrentRootChild.length && root.depth && type === "nest") {
            return null;
          }
          return _react["default"].createElement(_Layer.Layer, {
            key: "recharts-treemap-node-".concat(nodeProps.x, "-").concat(nodeProps.y, "-").concat(nodeProps.name),
            className: "recharts-treemap-depth-".concat(node.depth)
          }, this.renderItem(content, nodeProps, isLeaf), node.children && node.children.length ? node.children.map(function(child) {
            return _this3.renderNode(node, child);
          }) : null);
        }
      }, {
        key: "renderAllNodes",
        value: function renderAllNodes() {
          var formatRoot = this.state.formatRoot;
          if (!formatRoot) {
            return null;
          }
          return this.renderNode(formatRoot, formatRoot);
        }
      }, {
        key: "renderTooltip",
        value: function renderTooltip() {
          var _this$props8 = this.props, children = _this$props8.children, nameKey = _this$props8.nameKey;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (!tooltipItem) {
            return null;
          }
          var _this$props9 = this.props, width = _this$props9.width, height = _this$props9.height;
          var _this$state = this.state, isTooltipActive = _this$state.isTooltipActive, activeNode = _this$state.activeNode;
          var viewBox = {
            x: 0,
            y: 0,
            width,
            height
          };
          var coordinate = activeNode ? {
            x: activeNode.x + activeNode.width / 2,
            y: activeNode.y + activeNode.height / 2
          } : null;
          var payload = isTooltipActive && activeNode ? [{
            payload: activeNode,
            name: (0, _ChartUtils.getValueByDataKey)(activeNode, nameKey, ""),
            value: (0, _ChartUtils.getValueByDataKey)(activeNode, NODE_VALUE_KEY)
          }] : [];
          return _react["default"].cloneElement(tooltipItem, {
            viewBox,
            active: isTooltipActive,
            coordinate,
            label: "",
            payload
          });
        }
        // render nest treemap
      }, {
        key: "renderNestIndex",
        value: function renderNestIndex() {
          var _this4 = this;
          var _this$props10 = this.props, nameKey = _this$props10.nameKey, nestIndexContent = _this$props10.nestIndexContent;
          var nestIndex = this.state.nestIndex;
          return _react["default"].createElement("div", {
            className: "recharts-treemap-nest-index-wrapper",
            style: {
              marginTop: "8px",
              textAlign: "center"
            }
          }, nestIndex.map(function(item, i) {
            var name = (0, _get["default"])(item, nameKey, "root");
            var content = null;
            if (_react["default"].isValidElement(nestIndexContent)) {
              content = _react["default"].cloneElement(nestIndexContent, item, i);
            }
            if ((0, _isFunction["default"])(nestIndexContent)) {
              content = nestIndexContent(item, i);
            } else {
              content = name;
            }
            return (
              // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
              _react["default"].createElement("div", {
                onClick: _this4.handleNestIndex.bind(_this4, item, i),
                key: "nest-index-".concat((0, _DataUtils.uniqueId)()),
                className: "recharts-treemap-nest-index-box",
                style: {
                  cursor: "pointer",
                  display: "inline-block",
                  padding: "0 7px",
                  background: "#000",
                  color: "#fff",
                  marginRight: "3px"
                }
              }, content)
            );
          }));
        }
      }, {
        key: "render",
        value: function render() {
          if (!(0, _ReactUtils.validateWidthHeight)(this)) {
            return null;
          }
          var _this$props11 = this.props, width = _this$props11.width, height = _this$props11.height, className = _this$props11.className, style = _this$props11.style, children = _this$props11.children, type = _this$props11.type, others = _objectWithoutProperties(_this$props11, _excluded);
          var attrs = (0, _ReactUtils.filterProps)(others, false);
          return _react["default"].createElement("div", {
            className: (0, _clsx["default"])("recharts-wrapper", className),
            style: _objectSpread(_objectSpread({}, style), {}, {
              position: "relative",
              cursor: "default",
              width,
              height
            }),
            role: "region"
          }, _react["default"].createElement(_Surface.Surface, _extends({}, attrs, {
            width,
            height: type === "nest" ? height - 30 : height
          }), this.renderAllNodes(), (0, _ReactUtils.filterSvgElements)(children)), this.renderTooltip(), type === "nest" && this.renderNestIndex());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.data !== prevState.prevData || nextProps.type !== prevState.prevType || nextProps.width !== prevState.prevWidth || nextProps.height !== prevState.prevHeight || nextProps.dataKey !== prevState.prevDataKey || nextProps.aspectRatio !== prevState.prevAspectRatio) {
            var root = computeNode({
              depth: 0,
              node: {
                children: nextProps.data,
                x: 0,
                y: 0,
                width: nextProps.width,
                height: nextProps.height
              },
              index: 0,
              valueKey: nextProps.dataKey
            });
            var formatRoot = squarify(root, nextProps.aspectRatio);
            return _objectSpread(_objectSpread({}, prevState), {}, {
              formatRoot,
              currentRoot: root,
              nestIndex: [root],
              prevAspectRatio: nextProps.aspectRatio,
              prevData: nextProps.data,
              prevWidth: nextProps.width,
              prevHeight: nextProps.height,
              prevDataKey: nextProps.dataKey,
              prevType: nextProps.type
            });
          }
          return null;
        }
      }, {
        key: "renderContentItem",
        value: function renderContentItem(content, nodeProps, type, colorPanel) {
          if (_react["default"].isValidElement(content)) {
            return _react["default"].cloneElement(content, nodeProps);
          }
          if ((0, _isFunction["default"])(content)) {
            return content(nodeProps);
          }
          var x = nodeProps.x, y = nodeProps.y, width = nodeProps.width, height = nodeProps.height, index = nodeProps.index;
          var arrow = null;
          if (width > 10 && height > 10 && nodeProps.children && type === "nest") {
            arrow = _react["default"].createElement(_Polygon.Polygon, {
              points: [{
                x: x + 2,
                y: y + height / 2
              }, {
                x: x + 6,
                y: y + height / 2 + 3
              }, {
                x: x + 2,
                y: y + height / 2 + 6
              }]
            });
          }
          var text = null;
          var nameSize = (0, _DOMUtils.getStringSize)(nodeProps.name);
          if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {
            text = _react["default"].createElement("text", {
              x: x + 8,
              y: y + height / 2 + 7,
              fontSize: 14
            }, nodeProps.name);
          }
          var colors = colorPanel || _Constants.COLOR_PANEL;
          return _react["default"].createElement("g", null, _react["default"].createElement(_Rectangle.Rectangle, _extends({
            fill: nodeProps.depth < 2 ? colors[index % colors.length] : "rgba(255,255,255,0)",
            stroke: "#fff"
          }, (0, _omit["default"])(nodeProps, "children"), {
            role: "img"
          })), arrow, text);
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Treemap, "displayName", "Treemap");
    _defineProperty(Treemap, "defaultProps", {
      aspectRatio: 0.5 * (1 + Math.sqrt(5)),
      dataKey: "value",
      type: "flat",
      isAnimationActive: !_Global.Global.isSsr,
      isUpdateAnimationActive: !_Global.Global.isSsr,
      animationBegin: 0,
      animationDuration: 1500,
      animationEasing: "linear"
    });
  }
});

// node_modules/lodash/_baseSum.js
var require_baseSum = __commonJS({
  "node_modules/lodash/_baseSum.js"(exports, module) {
    function baseSum(array, iteratee) {
      var result, index = -1, length = array.length;
      while (++index < length) {
        var current = iteratee(array[index]);
        if (current !== void 0) {
          result = result === void 0 ? current : result + current;
        }
      }
      return result;
    }
    module.exports = baseSum;
  }
});

// node_modules/lodash/sumBy.js
var require_sumBy = __commonJS({
  "node_modules/lodash/sumBy.js"(exports, module) {
    var baseIteratee = require_baseIteratee();
    var baseSum = require_baseSum();
    function sumBy(array, iteratee) {
      return array && array.length ? baseSum(array, baseIteratee(iteratee, 2)) : 0;
    }
    module.exports = sumBy;
  }
});

// node_modules/recharts/lib/chart/Sankey.js
var require_Sankey = __commonJS({
  "node_modules/recharts/lib/chart/Sankey.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Sankey = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _maxBy = _interopRequireDefault(require_maxBy());
    var _min = _interopRequireDefault(require_min2());
    var _get = _interopRequireDefault(require_get());
    var _sumBy = _interopRequireDefault(require_sumBy());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Surface = require_Surface();
    var _Layer = require_Layer();
    var _Tooltip = require_Tooltip();
    var _Rectangle = require_Rectangle();
    var _ShallowEqual = require_ShallowEqual();
    var _ReactUtils = require_ReactUtils();
    var _ChartUtils = require_ChartUtils();
    var _excluded = ["width", "height", "className", "style", "children"];
    var _excluded2 = ["sourceX", "sourceY", "sourceControlX", "targetX", "targetY", "targetControlX", "linkWidth"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null) return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0) continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          if (excluded.indexOf(key) >= 0) continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var defaultCoordinateOfTooltip = {
      x: 0,
      y: 0
    };
    var interpolationGenerator = function interpolationGenerator2(a, b) {
      var ka = +a;
      var kb = b - ka;
      return function(t) {
        return ka + kb * t;
      };
    };
    var centerY = function centerY2(node) {
      return node.y + node.dy / 2;
    };
    var getValue = function getValue2(entry) {
      return entry && entry.value || 0;
    };
    var getSumOfIds = function getSumOfIds2(links, ids) {
      return ids.reduce(function(result, id) {
        return result + getValue(links[id]);
      }, 0);
    };
    var getSumWithWeightedSource = function getSumWithWeightedSource2(tree, links, ids) {
      return ids.reduce(function(result, id) {
        var link = links[id];
        var sourceNode = tree[link.source];
        return result + centerY(sourceNode) * getValue(links[id]);
      }, 0);
    };
    var getSumWithWeightedTarget = function getSumWithWeightedTarget2(tree, links, ids) {
      return ids.reduce(function(result, id) {
        var link = links[id];
        var targetNode = tree[link.target];
        return result + centerY(targetNode) * getValue(links[id]);
      }, 0);
    };
    var ascendingY = function ascendingY2(a, b) {
      return a.y - b.y;
    };
    var searchTargetsAndSources = function searchTargetsAndSources2(links, id) {
      var sourceNodes = [];
      var sourceLinks = [];
      var targetNodes = [];
      var targetLinks = [];
      for (var i = 0, len = links.length; i < len; i++) {
        var link = links[i];
        if (link.source === id) {
          targetNodes.push(link.target);
          targetLinks.push(i);
        }
        if (link.target === id) {
          sourceNodes.push(link.source);
          sourceLinks.push(i);
        }
      }
      return {
        sourceNodes,
        sourceLinks,
        targetLinks,
        targetNodes
      };
    };
    var updateDepthOfTargets = function updateDepthOfTargets2(tree, curNode) {
      var targetNodes = curNode.targetNodes;
      for (var i = 0, len = targetNodes.length; i < len; i++) {
        var target = tree[targetNodes[i]];
        if (target) {
          target.depth = Math.max(curNode.depth + 1, target.depth);
          updateDepthOfTargets2(tree, target);
        }
      }
    };
    var getNodesTree = function getNodesTree2(_ref, width, nodeWidth) {
      var nodes = _ref.nodes, links = _ref.links;
      var tree = nodes.map(function(entry, index) {
        var result = searchTargetsAndSources(links, index);
        return _objectSpread(_objectSpread(_objectSpread({}, entry), result), {}, {
          value: Math.max(getSumOfIds(links, result.sourceLinks), getSumOfIds(links, result.targetLinks)),
          depth: 0
        });
      });
      for (var i = 0, len = tree.length; i < len; i++) {
        var node = tree[i];
        if (!node.sourceNodes.length) {
          updateDepthOfTargets(tree, node);
        }
      }
      var maxDepth = (0, _maxBy["default"])(tree, function(entry) {
        return entry.depth;
      }).depth;
      if (maxDepth >= 1) {
        var childWidth = (width - nodeWidth) / maxDepth;
        for (var _i = 0, _len = tree.length; _i < _len; _i++) {
          var _node = tree[_i];
          if (!_node.targetNodes.length) {
            _node.depth = maxDepth;
          }
          _node.x = _node.depth * childWidth;
          _node.dx = nodeWidth;
        }
      }
      return {
        tree,
        maxDepth
      };
    };
    var getDepthTree = function getDepthTree2(tree) {
      var result = [];
      for (var i = 0, len = tree.length; i < len; i++) {
        var node = tree[i];
        if (!result[node.depth]) {
          result[node.depth] = [];
        }
        result[node.depth].push(node);
      }
      return result;
    };
    var updateYOfTree = function updateYOfTree2(depthTree, height, nodePadding, links) {
      var yRatio = (0, _min["default"])(depthTree.map(function(nodes) {
        return (height - (nodes.length - 1) * nodePadding) / (0, _sumBy["default"])(nodes, getValue);
      }));
      for (var d = 0, maxDepth = depthTree.length; d < maxDepth; d++) {
        for (var i = 0, len = depthTree[d].length; i < len; i++) {
          var node = depthTree[d][i];
          node.y = i;
          node.dy = node.value * yRatio;
        }
      }
      return links.map(function(link) {
        return _objectSpread(_objectSpread({}, link), {}, {
          dy: getValue(link) * yRatio
        });
      });
    };
    var resolveCollisions = function resolveCollisions2(depthTree, height, nodePadding) {
      var sort = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
      for (var i = 0, len = depthTree.length; i < len; i++) {
        var nodes = depthTree[i];
        var n = nodes.length;
        if (sort) {
          nodes.sort(ascendingY);
        }
        var y0 = 0;
        for (var j = 0; j < n; j++) {
          var node = nodes[j];
          var dy = y0 - node.y;
          if (dy > 0) {
            node.y += dy;
          }
          y0 = node.y + node.dy + nodePadding;
        }
        y0 = height + nodePadding;
        for (var _j = n - 1; _j >= 0; _j--) {
          var _node2 = nodes[_j];
          var _dy = _node2.y + _node2.dy + nodePadding - y0;
          if (_dy > 0) {
            _node2.y -= _dy;
            y0 = _node2.y;
          } else {
            break;
          }
        }
      }
    };
    var relaxLeftToRight = function relaxLeftToRight2(tree, depthTree, links, alpha) {
      for (var i = 0, maxDepth = depthTree.length; i < maxDepth; i++) {
        var nodes = depthTree[i];
        for (var j = 0, len = nodes.length; j < len; j++) {
          var node = nodes[j];
          if (node.sourceLinks.length) {
            var sourceSum = getSumOfIds(links, node.sourceLinks);
            var weightedSum = getSumWithWeightedSource(tree, links, node.sourceLinks);
            var y = weightedSum / sourceSum;
            node.y += (y - centerY(node)) * alpha;
          }
        }
      }
    };
    var relaxRightToLeft = function relaxRightToLeft2(tree, depthTree, links, alpha) {
      for (var i = depthTree.length - 1; i >= 0; i--) {
        var nodes = depthTree[i];
        for (var j = 0, len = nodes.length; j < len; j++) {
          var node = nodes[j];
          if (node.targetLinks.length) {
            var targetSum = getSumOfIds(links, node.targetLinks);
            var weightedSum = getSumWithWeightedTarget(tree, links, node.targetLinks);
            var y = weightedSum / targetSum;
            node.y += (y - centerY(node)) * alpha;
          }
        }
      }
    };
    var updateYOfLinks = function updateYOfLinks2(tree, links) {
      for (var i = 0, len = tree.length; i < len; i++) {
        var node = tree[i];
        var sy = 0;
        var ty = 0;
        node.targetLinks.sort(function(a, b) {
          return tree[links[a].target].y - tree[links[b].target].y;
        });
        node.sourceLinks.sort(function(a, b) {
          return tree[links[a].source].y - tree[links[b].source].y;
        });
        for (var j = 0, tLen = node.targetLinks.length; j < tLen; j++) {
          var link = links[node.targetLinks[j]];
          if (link) {
            link.sy = sy;
            sy += link.dy;
          }
        }
        for (var _j2 = 0, sLen = node.sourceLinks.length; _j2 < sLen; _j2++) {
          var _link = links[node.sourceLinks[_j2]];
          if (_link) {
            _link.ty = ty;
            ty += _link.dy;
          }
        }
      }
    };
    var computeData = function computeData2(_ref2) {
      var data = _ref2.data, width = _ref2.width, height = _ref2.height, iterations = _ref2.iterations, nodeWidth = _ref2.nodeWidth, nodePadding = _ref2.nodePadding, sort = _ref2.sort;
      var links = data.links;
      var _getNodesTree = getNodesTree(data, width, nodeWidth), tree = _getNodesTree.tree;
      var depthTree = getDepthTree(tree);
      var newLinks = updateYOfTree(depthTree, height, nodePadding, links);
      resolveCollisions(depthTree, height, nodePadding, sort);
      var alpha = 1;
      for (var i = 1; i <= iterations; i++) {
        relaxRightToLeft(tree, depthTree, newLinks, alpha *= 0.99);
        resolveCollisions(depthTree, height, nodePadding, sort);
        relaxLeftToRight(tree, depthTree, newLinks, alpha);
        resolveCollisions(depthTree, height, nodePadding, sort);
      }
      updateYOfLinks(tree, newLinks);
      return {
        nodes: tree,
        links: newLinks
      };
    };
    var getCoordinateOfTooltip = function getCoordinateOfTooltip2(el, type) {
      if (type === "node") {
        return {
          x: el.x + el.width / 2,
          y: el.y + el.height / 2
        };
      }
      return {
        x: (el.sourceX + el.targetX) / 2,
        y: (el.sourceY + el.targetY) / 2
      };
    };
    var getPayloadOfTooltip = function getPayloadOfTooltip2(el, type, nameKey) {
      var payload = el.payload;
      if (type === "node") {
        return [{
          payload: el,
          name: (0, _ChartUtils.getValueByDataKey)(payload, nameKey, ""),
          value: (0, _ChartUtils.getValueByDataKey)(payload, "value")
        }];
      }
      if (payload.source && payload.target) {
        var sourceName = (0, _ChartUtils.getValueByDataKey)(payload.source, nameKey, "");
        var targetName = (0, _ChartUtils.getValueByDataKey)(payload.target, nameKey, "");
        return [{
          payload: el,
          name: "".concat(sourceName, " - ").concat(targetName),
          value: (0, _ChartUtils.getValueByDataKey)(payload, "value")
        }];
      }
      return [];
    };
    var Sankey = exports.Sankey = function(_PureComponent) {
      function Sankey2() {
        var _this;
        _classCallCheck(this, Sankey2);
        for (var _len2 = arguments.length, args = new Array(_len2), _key = 0; _key < _len2; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Sankey2, [].concat(args));
        _defineProperty(_this, "state", {
          activeElement: null,
          activeElementType: null,
          isTooltipActive: false,
          nodes: [],
          links: []
        });
        return _this;
      }
      _inherits(Sankey2, _PureComponent);
      return _createClass(Sankey2, [{
        key: "handleMouseEnter",
        value: function handleMouseEnter(el, type, e) {
          var _this$props = this.props, onMouseEnter = _this$props.onMouseEnter, children = _this$props.children;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (tooltipItem) {
            this.setState(function(prev) {
              if (tooltipItem.props.trigger === "hover") {
                return _objectSpread(_objectSpread({}, prev), {}, {
                  activeElement: el,
                  activeElementType: type,
                  isTooltipActive: true
                });
              }
              return prev;
            }, function() {
              if (onMouseEnter) {
                onMouseEnter(el, type, e);
              }
            });
          } else if (onMouseEnter) {
            onMouseEnter(el, type, e);
          }
        }
      }, {
        key: "handleMouseLeave",
        value: function handleMouseLeave(el, type, e) {
          var _this$props2 = this.props, onMouseLeave = _this$props2.onMouseLeave, children = _this$props2.children;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (tooltipItem) {
            this.setState(function(prev) {
              if (tooltipItem.props.trigger === "hover") {
                return _objectSpread(_objectSpread({}, prev), {}, {
                  activeElement: void 0,
                  activeElementType: void 0,
                  isTooltipActive: false
                });
              }
              return prev;
            }, function() {
              if (onMouseLeave) {
                onMouseLeave(el, type, e);
              }
            });
          } else if (onMouseLeave) {
            onMouseLeave(el, type, e);
          }
        }
      }, {
        key: "handleClick",
        value: function handleClick(el, type, e) {
          var _this$props3 = this.props, onClick = _this$props3.onClick, children = _this$props3.children;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (tooltipItem && tooltipItem.props.trigger === "click") {
            if (this.state.isTooltipActive) {
              this.setState(function(prev) {
                return _objectSpread(_objectSpread({}, prev), {}, {
                  activeElement: void 0,
                  activeElementType: void 0,
                  isTooltipActive: false
                });
              });
            } else {
              this.setState(function(prev) {
                return _objectSpread(_objectSpread({}, prev), {}, {
                  activeElement: el,
                  activeElementType: type,
                  isTooltipActive: true
                });
              });
            }
          }
          if (onClick) onClick(el, type, e);
        }
      }, {
        key: "renderLinks",
        value: function renderLinks(links, nodes) {
          var _this2 = this;
          var _this$props4 = this.props, linkCurvature = _this$props4.linkCurvature, linkContent = _this$props4.link, margin = _this$props4.margin;
          var top = (0, _get["default"])(margin, "top") || 0;
          var left = (0, _get["default"])(margin, "left") || 0;
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-sankey-links",
            key: "recharts-sankey-links"
          }, links.map(function(link, i) {
            var sourceRelativeY = link.sy, targetRelativeY = link.ty, linkWidth = link.dy;
            var source = nodes[link.source];
            var target = nodes[link.target];
            var sourceX = source.x + source.dx + left;
            var targetX = target.x + left;
            var interpolationFunc = interpolationGenerator(sourceX, targetX);
            var sourceControlX = interpolationFunc(linkCurvature);
            var targetControlX = interpolationFunc(1 - linkCurvature);
            var sourceY = source.y + sourceRelativeY + linkWidth / 2 + top;
            var targetY = target.y + targetRelativeY + linkWidth / 2 + top;
            var linkProps = _objectSpread({
              sourceX,
              targetX,
              sourceY,
              targetY,
              sourceControlX,
              targetControlX,
              sourceRelativeY,
              targetRelativeY,
              linkWidth,
              index: i,
              payload: _objectSpread(_objectSpread({}, link), {}, {
                source,
                target
              })
            }, (0, _ReactUtils.filterProps)(linkContent, false));
            var events = {
              onMouseEnter: _this2.handleMouseEnter.bind(_this2, linkProps, "link"),
              onMouseLeave: _this2.handleMouseLeave.bind(_this2, linkProps, "link"),
              onClick: _this2.handleClick.bind(_this2, linkProps, "link")
            };
            return _react["default"].createElement(_Layer.Layer, _extends({
              key: "link-".concat(link.source, "-").concat(link.target, "-").concat(link.value)
            }, events), _this2.constructor.renderLinkItem(linkContent, linkProps));
          }));
        }
      }, {
        key: "renderNodes",
        value: function renderNodes(nodes) {
          var _this3 = this;
          var _this$props5 = this.props, nodeContent = _this$props5.node, margin = _this$props5.margin;
          var top = (0, _get["default"])(margin, "top") || 0;
          var left = (0, _get["default"])(margin, "left") || 0;
          return _react["default"].createElement(_Layer.Layer, {
            className: "recharts-sankey-nodes",
            key: "recharts-sankey-nodes"
          }, nodes.map(function(node, i) {
            var x = node.x, y = node.y, dx = node.dx, dy = node.dy;
            var nodeProps = _objectSpread(_objectSpread({}, (0, _ReactUtils.filterProps)(nodeContent, false)), {}, {
              x: x + left,
              y: y + top,
              width: dx,
              height: dy,
              index: i,
              payload: node
            });
            var events = {
              onMouseEnter: _this3.handleMouseEnter.bind(_this3, nodeProps, "node"),
              onMouseLeave: _this3.handleMouseLeave.bind(_this3, nodeProps, "node"),
              onClick: _this3.handleClick.bind(_this3, nodeProps, "node")
            };
            return _react["default"].createElement(_Layer.Layer, _extends({
              key: "node-".concat(node.x, "-").concat(node.y, "-").concat(node.value)
            }, events), _this3.constructor.renderNodeItem(nodeContent, nodeProps));
          }));
        }
      }, {
        key: "renderTooltip",
        value: function renderTooltip() {
          var _this$props6 = this.props, children = _this$props6.children, width = _this$props6.width, height = _this$props6.height, nameKey = _this$props6.nameKey;
          var tooltipItem = (0, _ReactUtils.findChildByType)(children, _Tooltip.Tooltip);
          if (!tooltipItem) {
            return null;
          }
          var _this$state = this.state, isTooltipActive = _this$state.isTooltipActive, activeElement = _this$state.activeElement, activeElementType = _this$state.activeElementType;
          var viewBox = {
            x: 0,
            y: 0,
            width,
            height
          };
          var coordinate = activeElement ? getCoordinateOfTooltip(activeElement, activeElementType) : defaultCoordinateOfTooltip;
          var payload = activeElement ? getPayloadOfTooltip(activeElement, activeElementType, nameKey) : [];
          return _react["default"].cloneElement(tooltipItem, {
            viewBox,
            active: isTooltipActive,
            coordinate,
            label: "",
            payload
          });
        }
      }, {
        key: "render",
        value: function render() {
          if (!(0, _ReactUtils.validateWidthHeight)(this)) {
            return null;
          }
          var _this$props7 = this.props, width = _this$props7.width, height = _this$props7.height, className = _this$props7.className, style = _this$props7.style, children = _this$props7.children, others = _objectWithoutProperties(_this$props7, _excluded);
          var _this$state2 = this.state, links = _this$state2.links, nodes = _this$state2.nodes;
          var attrs = (0, _ReactUtils.filterProps)(others, false);
          return _react["default"].createElement("div", {
            className: (0, _clsx["default"])("recharts-wrapper", className),
            style: _objectSpread(_objectSpread({}, style), {}, {
              position: "relative",
              cursor: "default",
              width,
              height
            }),
            role: "region"
          }, _react["default"].createElement(_Surface.Surface, _extends({}, attrs, {
            width,
            height
          }), (0, _ReactUtils.filterSvgElements)(children), this.renderLinks(links, nodes), this.renderNodes(nodes)), this.renderTooltip());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var data = nextProps.data, width = nextProps.width, height = nextProps.height, margin = nextProps.margin, iterations = nextProps.iterations, nodeWidth = nextProps.nodeWidth, nodePadding = nextProps.nodePadding, sort = nextProps.sort;
          if (data !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || !(0, _ShallowEqual.shallowEqual)(margin, prevState.prevMargin) || iterations !== prevState.prevIterations || nodeWidth !== prevState.prevNodeWidth || nodePadding !== prevState.prevNodePadding || sort !== prevState.sort) {
            var contentWidth = width - (margin && margin.left || 0) - (margin && margin.right || 0);
            var contentHeight = height - (margin && margin.top || 0) - (margin && margin.bottom || 0);
            var _computeData = computeData({
              data,
              width: contentWidth,
              height: contentHeight,
              iterations,
              nodeWidth,
              nodePadding,
              sort
            }), links = _computeData.links, nodes = _computeData.nodes;
            return _objectSpread(_objectSpread({}, prevState), {}, {
              nodes,
              links,
              prevData: data,
              prevWidth: iterations,
              prevHeight: height,
              prevMargin: margin,
              prevNodePadding: nodePadding,
              prevNodeWidth: nodeWidth,
              prevIterations: iterations,
              prevSort: sort
            });
          }
          return null;
        }
      }, {
        key: "renderLinkItem",
        value: function renderLinkItem(option, props) {
          if (_react["default"].isValidElement(option)) {
            return _react["default"].cloneElement(option, props);
          }
          if ((0, _isFunction["default"])(option)) {
            return option(props);
          }
          var sourceX = props.sourceX, sourceY = props.sourceY, sourceControlX = props.sourceControlX, targetX = props.targetX, targetY = props.targetY, targetControlX = props.targetControlX, linkWidth = props.linkWidth, others = _objectWithoutProperties(props, _excluded2);
          return _react["default"].createElement("path", _extends({
            className: "recharts-sankey-link",
            d: "\n          M".concat(sourceX, ",").concat(sourceY, "\n          C").concat(sourceControlX, ",").concat(sourceY, " ").concat(targetControlX, ",").concat(targetY, " ").concat(targetX, ",").concat(targetY, "\n        "),
            fill: "none",
            stroke: "#333",
            strokeWidth: linkWidth,
            strokeOpacity: "0.2"
          }, (0, _ReactUtils.filterProps)(others, false)));
        }
      }, {
        key: "renderNodeItem",
        value: function renderNodeItem(option, props) {
          if (_react["default"].isValidElement(option)) {
            return _react["default"].cloneElement(option, props);
          }
          if ((0, _isFunction["default"])(option)) {
            return option(props);
          }
          return _react["default"].createElement(_Rectangle.Rectangle, _extends({
            className: "recharts-sankey-node",
            fill: "#0088fe",
            fillOpacity: "0.8"
          }, (0, _ReactUtils.filterProps)(props, false), {
            role: "img"
          }));
        }
      }]);
    }(_react.PureComponent);
    _defineProperty(Sankey, "displayName", "Sankey");
    _defineProperty(Sankey, "defaultProps", {
      nameKey: "name",
      dataKey: "value",
      nodePadding: 10,
      nodeWidth: 10,
      linkCurvature: 0.5,
      iterations: 32,
      margin: {
        top: 5,
        right: 5,
        bottom: 5,
        left: 5
      },
      sort: true
    });
  }
});

// node_modules/recharts/lib/chart/RadarChart.js
var require_RadarChart = __commonJS({
  "node_modules/recharts/lib/chart/RadarChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RadarChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Radar = require_Radar();
    var _PolarAngleAxis = require_PolarAngleAxis();
    var _PolarRadiusAxis = require_PolarRadiusAxis();
    var _PolarUtils = require_PolarUtils();
    var RadarChart = exports.RadarChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "RadarChart",
      GraphicalChild: _Radar.Radar,
      axisComponents: [{
        axisType: "angleAxis",
        AxisComp: _PolarAngleAxis.PolarAngleAxis
      }, {
        axisType: "radiusAxis",
        AxisComp: _PolarRadiusAxis.PolarRadiusAxis
      }],
      formatAxisMap: _PolarUtils.formatAxisMap,
      defaultProps: {
        layout: "centric",
        startAngle: 90,
        endAngle: -270,
        cx: "50%",
        cy: "50%",
        innerRadius: 0,
        outerRadius: "80%"
      }
    });
  }
});

// node_modules/recharts/lib/chart/ScatterChart.js
var require_ScatterChart = __commonJS({
  "node_modules/recharts/lib/chart/ScatterChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ScatterChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Scatter = require_Scatter();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _ZAxis = require_ZAxis();
    var _CartesianUtils = require_CartesianUtils();
    var ScatterChart = exports.ScatterChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "ScatterChart",
      GraphicalChild: _Scatter.Scatter,
      defaultTooltipEventType: "item",
      validateTooltipEventTypes: ["item"],
      axisComponents: [{
        axisType: "xAxis",
        AxisComp: _XAxis.XAxis
      }, {
        axisType: "yAxis",
        AxisComp: _YAxis.YAxis
      }, {
        axisType: "zAxis",
        AxisComp: _ZAxis.ZAxis
      }],
      formatAxisMap: _CartesianUtils.formatAxisMap
    });
  }
});

// node_modules/recharts/lib/chart/AreaChart.js
var require_AreaChart = __commonJS({
  "node_modules/recharts/lib/chart/AreaChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.AreaChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Area = require_Area();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _CartesianUtils = require_CartesianUtils();
    var AreaChart = exports.AreaChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "AreaChart",
      GraphicalChild: _Area.Area,
      axisComponents: [{
        axisType: "xAxis",
        AxisComp: _XAxis.XAxis
      }, {
        axisType: "yAxis",
        AxisComp: _YAxis.YAxis
      }],
      formatAxisMap: _CartesianUtils.formatAxisMap
    });
  }
});

// node_modules/recharts/lib/chart/RadialBarChart.js
var require_RadialBarChart = __commonJS({
  "node_modules/recharts/lib/chart/RadialBarChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.RadialBarChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _PolarAngleAxis = require_PolarAngleAxis();
    var _PolarRadiusAxis = require_PolarRadiusAxis();
    var _PolarUtils = require_PolarUtils();
    var _RadialBar = require_RadialBar();
    var RadialBarChart = exports.RadialBarChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "RadialBarChart",
      GraphicalChild: _RadialBar.RadialBar,
      legendContent: "children",
      defaultTooltipEventType: "axis",
      validateTooltipEventTypes: ["axis", "item"],
      axisComponents: [{
        axisType: "angleAxis",
        AxisComp: _PolarAngleAxis.PolarAngleAxis
      }, {
        axisType: "radiusAxis",
        AxisComp: _PolarRadiusAxis.PolarRadiusAxis
      }],
      formatAxisMap: _PolarUtils.formatAxisMap,
      defaultProps: {
        layout: "radial",
        startAngle: 0,
        endAngle: 360,
        cx: "50%",
        cy: "50%",
        innerRadius: 0,
        outerRadius: "80%"
      }
    });
  }
});

// node_modules/recharts/lib/chart/ComposedChart.js
var require_ComposedChart = __commonJS({
  "node_modules/recharts/lib/chart/ComposedChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ComposedChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Area = require_Area();
    var _Bar = require_Bar();
    var _Line = require_Line();
    var _Scatter = require_Scatter();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _ZAxis = require_ZAxis();
    var _CartesianUtils = require_CartesianUtils();
    var ComposedChart = exports.ComposedChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "ComposedChart",
      GraphicalChild: [_Line.Line, _Area.Area, _Bar.Bar, _Scatter.Scatter],
      axisComponents: [{
        axisType: "xAxis",
        AxisComp: _XAxis.XAxis
      }, {
        axisType: "yAxis",
        AxisComp: _YAxis.YAxis
      }, {
        axisType: "zAxis",
        AxisComp: _ZAxis.ZAxis
      }],
      formatAxisMap: _CartesianUtils.formatAxisMap
    });
  }
});

// node_modules/recharts/lib/chart/SunburstChart.js
var require_SunburstChart = __commonJS({
  "node_modules/recharts/lib/chart/SunburstChart.js"(exports) {
    "use strict";
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SunburstChart = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _d3Scale = require_d3_scale();
    var _clsx = _interopRequireDefault(require_clsx());
    var _ReactUtils = require_ReactUtils();
    var _Surface = require_Surface();
    var _Layer = require_Layer();
    var _Sector = require_Sector();
    var _Text = require_Text();
    var _PolarUtils = require_PolarUtils();
    var _Tooltip = require_Tooltip();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var defaultTextProps = {
      fontWeight: "bold",
      paintOrder: "stroke fill",
      fontSize: ".75rem",
      stroke: "#FFF",
      fill: "black",
      pointerEvents: "none"
    };
    function getMaxDepthOf(node) {
      if (!node.children || node.children.length === 0) return 1;
      var childDepths = node.children.map(function(d) {
        return getMaxDepthOf(d);
      });
      return 1 + Math.max.apply(Math, _toConsumableArray(childDepths));
    }
    var SunburstChart = exports.SunburstChart = function SunburstChart2(_ref) {
      var className = _ref.className, data = _ref.data, children = _ref.children, width = _ref.width, height = _ref.height, _ref$padding = _ref.padding, padding = _ref$padding === void 0 ? 2 : _ref$padding, _ref$dataKey = _ref.dataKey, dataKey = _ref$dataKey === void 0 ? "value" : _ref$dataKey, _ref$ringPadding = _ref.ringPadding, ringPadding = _ref$ringPadding === void 0 ? 2 : _ref$ringPadding, _ref$innerRadius = _ref.innerRadius, innerRadius = _ref$innerRadius === void 0 ? 50 : _ref$innerRadius, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "#333" : _ref$fill, _ref$stroke = _ref.stroke, stroke = _ref$stroke === void 0 ? "#FFF" : _ref$stroke, _ref$textOptions = _ref.textOptions, textOptions = _ref$textOptions === void 0 ? defaultTextProps : _ref$textOptions, _ref$outerRadius = _ref.outerRadius, outerRadius = _ref$outerRadius === void 0 ? Math.min(width, height) / 2 : _ref$outerRadius, _ref$cx = _ref.cx, cx = _ref$cx === void 0 ? width / 2 : _ref$cx, _ref$cy = _ref.cy, cy = _ref$cy === void 0 ? height / 2 : _ref$cy, _ref$startAngle = _ref.startAngle, startAngle = _ref$startAngle === void 0 ? 0 : _ref$startAngle, _ref$endAngle = _ref.endAngle, endAngle = _ref$endAngle === void 0 ? 360 : _ref$endAngle, onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, onMouseLeave = _ref.onMouseLeave;
      var _useState = (0, _react.useState)(false), _useState2 = _slicedToArray(_useState, 2), isTooltipActive = _useState2[0], setIsTooltipActive = _useState2[1];
      var _useState3 = (0, _react.useState)(null), _useState4 = _slicedToArray(_useState3, 2), activeNode = _useState4[0], setActiveNode = _useState4[1];
      var rScale = (0, _d3Scale.scaleLinear)([0, data[dataKey]], [0, endAngle]);
      var treeDepth = getMaxDepthOf(data);
      var thickness = (outerRadius - innerRadius) / treeDepth;
      var sectors = [];
      var positions = /* @__PURE__ */ new Map([]);
      function handleMouseEnter(node, e) {
        if (onMouseEnter) onMouseEnter(node, e);
        setActiveNode(node);
        setIsTooltipActive(true);
      }
      function handleMouseLeave(node, e) {
        if (onMouseLeave) onMouseLeave(node, e);
        setActiveNode(null);
        setIsTooltipActive(false);
      }
      function handleClick(node) {
        if (onClick) onClick(node);
      }
      function drawArcs(childNodes, options) {
        var radius = options.radius, innerR = options.innerR, initialAngle = options.initialAngle, childColor = options.childColor;
        var currentAngle = initialAngle;
        if (!childNodes) return;
        childNodes.forEach(function(d) {
          var _ref2, _d$fill;
          var arcLength = rScale(d[dataKey]);
          var start = currentAngle;
          var fillColor = (_ref2 = (_d$fill = d === null || d === void 0 ? void 0 : d.fill) !== null && _d$fill !== void 0 ? _d$fill : childColor) !== null && _ref2 !== void 0 ? _ref2 : fill;
          var _polarToCartesian = (0, _PolarUtils.polarToCartesian)(0, 0, innerR + radius / 2, -(start + arcLength - arcLength / 2)), textX = _polarToCartesian.x, textY = _polarToCartesian.y;
          currentAngle += arcLength;
          sectors.push(
            // TODO: Missing key warning. Can we use `key={d.name}`?
            _react["default"].createElement("g", {
              "aria-label": d.name,
              tabIndex: 0
            }, _react["default"].createElement(_Sector.Sector, {
              onClick: function onClick2() {
                return handleClick(d);
              },
              onMouseEnter: function onMouseEnter2(e) {
                return handleMouseEnter(d, e);
              },
              onMouseLeave: function onMouseLeave2(e) {
                return handleMouseLeave(d, e);
              },
              fill: fillColor,
              stroke,
              strokeWidth: padding,
              startAngle: start,
              endAngle: start + arcLength,
              innerRadius: innerR,
              outerRadius: innerR + radius,
              cx,
              cy
            }), _react["default"].createElement(_Text.Text, _extends({}, textOptions, {
              alignmentBaseline: "middle",
              textAnchor: "middle",
              x: textX + cx,
              y: cy - textY
            }), d[dataKey]))
          );
          var _polarToCartesian2 = (0, _PolarUtils.polarToCartesian)(cx, cy, innerR + radius / 2, start), tooltipX = _polarToCartesian2.x, tooltipY = _polarToCartesian2.y;
          positions.set(d.name, {
            x: tooltipX,
            y: tooltipY
          });
          return drawArcs(d.children, {
            radius,
            innerR: innerR + radius + ringPadding,
            initialAngle: start,
            childColor: fillColor
          });
        });
      }
      drawArcs(data.children, {
        radius: thickness,
        innerR: innerRadius,
        initialAngle: startAngle
      });
      var layerClass = (0, _clsx["default"])("recharts-sunburst", className);
      function renderTooltip() {
        var tooltipComponent = (0, _ReactUtils.findChildByType)([children], _Tooltip.Tooltip);
        if (!tooltipComponent || !activeNode) return null;
        var viewBox = {
          x: 0,
          y: 0,
          width,
          height
        };
        return _react["default"].cloneElement(tooltipComponent, {
          viewBox,
          coordinate: positions.get(activeNode.name),
          payload: [activeNode],
          active: isTooltipActive
        });
      }
      return _react["default"].createElement("div", {
        className: (0, _clsx["default"])("recharts-wrapper", className),
        style: {
          position: "relative",
          width,
          height
        },
        role: "region"
      }, _react["default"].createElement(_Surface.Surface, {
        width,
        height
      }, children, _react["default"].createElement(_Layer.Layer, {
        className: layerClass
      }, sectors)), renderTooltip());
    };
  }
});

// node_modules/recharts/lib/util/FunnelUtils.js
var require_FunnelUtils = __commonJS({
  "node_modules/recharts/lib/util/FunnelUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FunnelTrapezoid = FunnelTrapezoid;
    exports.typeGuardTrapezoidProps = typeGuardTrapezoidProps;
    var _react = _interopRequireDefault(require_react());
    var _ActiveShapeUtils = require_ActiveShapeUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    function typeGuardTrapezoidProps(option, props) {
      var xValue = "".concat(props.x || option.x);
      var x = parseInt(xValue, 10);
      var yValue = "".concat(props.y || option.y);
      var y = parseInt(yValue, 10);
      var heightValue = "".concat((props === null || props === void 0 ? void 0 : props.height) || (option === null || option === void 0 ? void 0 : option.height));
      var height = parseInt(heightValue, 10);
      return _objectSpread(_objectSpread(_objectSpread({}, props), (0, _ActiveShapeUtils.getPropsFromShapeOption)(option)), {}, {
        height,
        x,
        y
      });
    }
    function FunnelTrapezoid(props) {
      return _react["default"].createElement(_ActiveShapeUtils.Shape, _extends({
        shapeType: "trapezoid",
        propTransformer: typeGuardTrapezoidProps
      }, props));
    }
  }
});

// node_modules/recharts/lib/numberAxis/Funnel.js
var require_Funnel = __commonJS({
  "node_modules/recharts/lib/numberAxis/Funnel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Funnel = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactSmooth = _interopRequireDefault(require_lib2());
    var _isFunction = _interopRequireDefault(require_isFunction());
    var _isNumber = _interopRequireDefault(require_isNumber());
    var _isString = _interopRequireDefault(require_isString());
    var _omit = _interopRequireDefault(require_omit());
    var _isEqual = _interopRequireDefault(require_isEqual());
    var _clsx = _interopRequireDefault(require_clsx());
    var _Layer = require_Layer();
    var _LabelList = require_LabelList();
    var _Cell = require_Cell();
    var _ReactUtils = require_ReactUtils();
    var _Global = require_Global();
    var _DataUtils = require_DataUtils();
    var _ChartUtils = require_ChartUtils();
    var _types = require_types();
    var _FunnelUtils = require_FunnelUtils();
    var _Funnel;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n["default"] = e, t && t.set(e, n), n;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(r, l) {
      var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
      if (null != t) {
        var e, n, i, u, a = [], f = true, o = false;
        try {
          if (i = (t = t.call(r)).next, 0 === l) {
            if (Object(t) !== t) return;
            f = false;
          } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = true) ;
        } catch (r2) {
          o = true, n = r2;
        } finally {
          try {
            if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
          } finally {
            if (o) throw n;
          }
        }
        return a;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    function _typeof(o) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, _typeof(o);
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          _defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _callSuper(t, o, e) {
      return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch (t2) {
      }
      return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
        return !!t;
      })();
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass) _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == _typeof(i) ? i : i + "";
    }
    function _toPrimitive(t, r) {
      if ("object" != _typeof(t) || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Funnel = exports.Funnel = function(_PureComponent) {
      function Funnel2() {
        var _this;
        _classCallCheck(this, Funnel2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _callSuper(this, Funnel2, [].concat(args));
        _defineProperty(_this, "state", {
          isAnimationFinished: false
        });
        _defineProperty(_this, "handleAnimationEnd", function() {
          var onAnimationEnd = _this.props.onAnimationEnd;
          _this.setState({
            isAnimationFinished: true
          });
          if ((0, _isFunction["default"])(onAnimationEnd)) {
            onAnimationEnd();
          }
        });
        _defineProperty(_this, "handleAnimationStart", function() {
          var onAnimationStart = _this.props.onAnimationStart;
          _this.setState({
            isAnimationFinished: false
          });
          if ((0, _isFunction["default"])(onAnimationStart)) {
            onAnimationStart();
          }
        });
        return _this;
      }
      _inherits(Funnel2, _PureComponent);
      return _createClass(Funnel2, [{
        key: "isActiveIndex",
        value: function isActiveIndex(i) {
          var activeIndex = this.props.activeIndex;
          if (Array.isArray(activeIndex)) {
            return activeIndex.indexOf(i) !== -1;
          }
          return i === activeIndex;
        }
      }, {
        key: "renderTrapezoidsStatically",
        value: function renderTrapezoidsStatically(trapezoids) {
          var _this2 = this;
          var _this$props = this.props, shape = _this$props.shape, activeShape = _this$props.activeShape;
          return trapezoids.map(function(entry, i) {
            var trapezoidOptions = _this2.isActiveIndex(i) ? activeShape : shape;
            var trapezoidProps = _objectSpread(_objectSpread({}, entry), {}, {
              isActive: _this2.isActiveIndex(i),
              stroke: entry.stroke
            });
            return _react["default"].createElement(_Layer.Layer, _extends({
              className: "recharts-funnel-trapezoid"
            }, (0, _types.adaptEventsOfChild)(_this2.props, entry, i), {
              key: "trapezoid-".concat(entry === null || entry === void 0 ? void 0 : entry.x, "-").concat(entry === null || entry === void 0 ? void 0 : entry.y, "-").concat(entry === null || entry === void 0 ? void 0 : entry.name, "-").concat(entry === null || entry === void 0 ? void 0 : entry.value),
              role: "img"
            }), _react["default"].createElement(_FunnelUtils.FunnelTrapezoid, _extends({
              option: trapezoidOptions
            }, trapezoidProps)));
          });
        }
      }, {
        key: "renderTrapezoidsWithAnimation",
        value: function renderTrapezoidsWithAnimation() {
          var _this3 = this;
          var _this$props2 = this.props, trapezoids = _this$props2.trapezoids, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;
          var prevTrapezoids = this.state.prevTrapezoids;
          return _react["default"].createElement(_reactSmooth["default"], {
            begin: animationBegin,
            duration: animationDuration,
            isActive: isAnimationActive,
            easing: animationEasing,
            from: {
              t: 0
            },
            to: {
              t: 1
            },
            key: "funnel-".concat(animationId),
            onAnimationStart: this.handleAnimationStart,
            onAnimationEnd: this.handleAnimationEnd
          }, function(_ref) {
            var t = _ref.t;
            var stepData = trapezoids.map(function(entry, index) {
              var prev = prevTrapezoids && prevTrapezoids[index];
              if (prev) {
                var _interpolatorX = (0, _DataUtils.interpolateNumber)(prev.x, entry.x);
                var _interpolatorY = (0, _DataUtils.interpolateNumber)(prev.y, entry.y);
                var _interpolatorUpperWidth = (0, _DataUtils.interpolateNumber)(prev.upperWidth, entry.upperWidth);
                var _interpolatorLowerWidth = (0, _DataUtils.interpolateNumber)(prev.lowerWidth, entry.lowerWidth);
                var _interpolatorHeight = (0, _DataUtils.interpolateNumber)(prev.height, entry.height);
                return _objectSpread(_objectSpread({}, entry), {}, {
                  x: _interpolatorX(t),
                  y: _interpolatorY(t),
                  upperWidth: _interpolatorUpperWidth(t),
                  lowerWidth: _interpolatorLowerWidth(t),
                  height: _interpolatorHeight(t)
                });
              }
              var interpolatorX = (0, _DataUtils.interpolateNumber)(entry.x + entry.upperWidth / 2, entry.x);
              var interpolatorY = (0, _DataUtils.interpolateNumber)(entry.y + entry.height / 2, entry.y);
              var interpolatorUpperWidth = (0, _DataUtils.interpolateNumber)(0, entry.upperWidth);
              var interpolatorLowerWidth = (0, _DataUtils.interpolateNumber)(0, entry.lowerWidth);
              var interpolatorHeight = (0, _DataUtils.interpolateNumber)(0, entry.height);
              return _objectSpread(_objectSpread({}, entry), {}, {
                x: interpolatorX(t),
                y: interpolatorY(t),
                upperWidth: interpolatorUpperWidth(t),
                lowerWidth: interpolatorLowerWidth(t),
                height: interpolatorHeight(t)
              });
            });
            return _react["default"].createElement(_Layer.Layer, null, _this3.renderTrapezoidsStatically(stepData));
          });
        }
      }, {
        key: "renderTrapezoids",
        value: function renderTrapezoids() {
          var _this$props3 = this.props, trapezoids = _this$props3.trapezoids, isAnimationActive = _this$props3.isAnimationActive;
          var prevTrapezoids = this.state.prevTrapezoids;
          if (isAnimationActive && trapezoids && trapezoids.length && (!prevTrapezoids || !(0, _isEqual["default"])(prevTrapezoids, trapezoids))) {
            return this.renderTrapezoidsWithAnimation();
          }
          return this.renderTrapezoidsStatically(trapezoids);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props4 = this.props, hide = _this$props4.hide, trapezoids = _this$props4.trapezoids, className = _this$props4.className, isAnimationActive = _this$props4.isAnimationActive;
          var isAnimationFinished = this.state.isAnimationFinished;
          if (hide || !trapezoids || !trapezoids.length) {
            return null;
          }
          var layerClass = (0, _clsx["default"])("recharts-trapezoids", className);
          return _react["default"].createElement(_Layer.Layer, {
            className: layerClass
          }, this.renderTrapezoids(), (!isAnimationActive || isAnimationFinished) && _LabelList.LabelList.renderCallByParent(this.props, trapezoids));
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.animationId !== prevState.prevAnimationId) {
            return {
              prevAnimationId: nextProps.animationId,
              curTrapezoids: nextProps.trapezoids,
              prevTrapezoids: prevState.curTrapezoids
            };
          }
          if (nextProps.trapezoids !== prevState.curTrapezoids) {
            return {
              curTrapezoids: nextProps.trapezoids
            };
          }
          return null;
        }
      }]);
    }(_react.PureComponent);
    _Funnel = Funnel;
    _defineProperty(Funnel, "displayName", "Funnel");
    _defineProperty(Funnel, "defaultProps", {
      stroke: "#fff",
      fill: "#808080",
      legendType: "rect",
      labelLine: true,
      hide: false,
      isAnimationActive: !_Global.Global.isSsr,
      animationBegin: 400,
      animationDuration: 1500,
      animationEasing: "ease",
      nameKey: "name",
      lastShapeType: "triangle"
    });
    _defineProperty(Funnel, "getRealFunnelData", function(item) {
      var _item$props = item.props, data = _item$props.data, children = _item$props.children;
      var presentationProps = (0, _ReactUtils.filterProps)(item.props, false);
      var cells = (0, _ReactUtils.findAllByType)(children, _Cell.Cell);
      if (data && data.length) {
        return data.map(function(entry, index) {
          return _objectSpread(_objectSpread(_objectSpread({
            payload: entry
          }, presentationProps), entry), cells && cells[index] && cells[index].props);
        });
      }
      if (cells && cells.length) {
        return cells.map(function(cell) {
          return _objectSpread(_objectSpread({}, presentationProps), cell.props);
        });
      }
      return [];
    });
    _defineProperty(Funnel, "getRealWidthHeight", function(item, offset) {
      var customWidth = item.props.width;
      var width = offset.width, height = offset.height, left = offset.left, right = offset.right, top = offset.top, bottom = offset.bottom;
      var realHeight = height;
      var realWidth = width;
      if ((0, _isNumber["default"])(customWidth)) {
        realWidth = customWidth;
      } else if ((0, _isString["default"])(customWidth)) {
        realWidth = realWidth * parseFloat(customWidth) / 100;
      }
      return {
        realWidth: realWidth - left - right - 50,
        realHeight: realHeight - bottom - top,
        offsetX: (width - realWidth) / 2,
        offsetY: (height - realHeight) / 2
      };
    });
    _defineProperty(Funnel, "getComposedData", function(_ref2) {
      var item = _ref2.item, offset = _ref2.offset;
      var funnelData = _Funnel.getRealFunnelData(item);
      var _item$props2 = item.props, dataKey = _item$props2.dataKey, nameKey = _item$props2.nameKey, tooltipType = _item$props2.tooltipType, lastShapeType = _item$props2.lastShapeType, reversed = _item$props2.reversed;
      var left = offset.left, top = offset.top;
      var _Funnel$getRealWidthH = _Funnel.getRealWidthHeight(item, offset), realHeight = _Funnel$getRealWidthH.realHeight, realWidth = _Funnel$getRealWidthH.realWidth, offsetX = _Funnel$getRealWidthH.offsetX, offsetY = _Funnel$getRealWidthH.offsetY;
      var maxValue = Math.max.apply(null, funnelData.map(function(entry) {
        return (0, _ChartUtils.getValueByDataKey)(entry, dataKey, 0);
      }));
      var len = funnelData.length;
      var rowHeight = realHeight / len;
      var parentViewBox = {
        x: offset.left,
        y: offset.top,
        width: offset.width,
        height: offset.height
      };
      var trapezoids = funnelData.map(function(entry, i) {
        var rawVal = (0, _ChartUtils.getValueByDataKey)(entry, dataKey, 0);
        var name = (0, _ChartUtils.getValueByDataKey)(entry, nameKey, i);
        var val = rawVal;
        var nextVal;
        if (i !== len - 1) {
          nextVal = (0, _ChartUtils.getValueByDataKey)(funnelData[i + 1], dataKey, 0);
          if (nextVal instanceof Array) {
            var _nextVal = nextVal;
            var _nextVal2 = _slicedToArray(_nextVal, 1);
            nextVal = _nextVal2[0];
          }
        } else if (rawVal instanceof Array && rawVal.length === 2) {
          var _rawVal = _slicedToArray(rawVal, 2);
          val = _rawVal[0];
          nextVal = _rawVal[1];
        } else if (lastShapeType === "rectangle") {
          nextVal = val;
        } else {
          nextVal = 0;
        }
        var x = (maxValue - val) * realWidth / (2 * maxValue) + top + 25 + offsetX;
        var y = rowHeight * i + left + offsetY;
        var upperWidth = val / maxValue * realWidth;
        var lowerWidth = nextVal / maxValue * realWidth;
        var tooltipPayload = [{
          name,
          value: val,
          payload: entry,
          dataKey,
          type: tooltipType
        }];
        var tooltipPosition = {
          x: x + upperWidth / 2,
          y: y + rowHeight / 2
        };
        return _objectSpread(_objectSpread({
          x,
          y,
          width: Math.max(upperWidth, lowerWidth),
          upperWidth,
          lowerWidth,
          height: rowHeight,
          name,
          val,
          tooltipPayload,
          tooltipPosition
        }, (0, _omit["default"])(entry, "width")), {}, {
          payload: entry,
          parentViewBox,
          labelViewBox: {
            x: x + (upperWidth - lowerWidth) / 4,
            y,
            width: Math.abs(upperWidth - lowerWidth) / 2 + Math.min(upperWidth, lowerWidth),
            height: rowHeight
          }
        });
      });
      if (reversed) {
        trapezoids = trapezoids.map(function(entry, index) {
          var newY = entry.y - index * rowHeight + (len - 1 - index) * rowHeight;
          return _objectSpread(_objectSpread({}, entry), {}, {
            upperWidth: entry.lowerWidth,
            lowerWidth: entry.upperWidth,
            x: entry.x - (entry.lowerWidth - entry.upperWidth) / 2,
            y: entry.y - index * rowHeight + (len - 1 - index) * rowHeight,
            tooltipPosition: _objectSpread(_objectSpread({}, entry.tooltipPosition), {}, {
              y: newY + rowHeight / 2
            }),
            labelViewBox: _objectSpread(_objectSpread({}, entry.labelViewBox), {}, {
              y: newY
            })
          });
        });
      }
      return {
        trapezoids,
        data: funnelData
      };
    });
  }
});

// node_modules/recharts/lib/chart/FunnelChart.js
var require_FunnelChart = __commonJS({
  "node_modules/recharts/lib/chart/FunnelChart.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FunnelChart = void 0;
    var _generateCategoricalChart = require_generateCategoricalChart();
    var _Funnel = require_Funnel();
    var FunnelChart = exports.FunnelChart = (0, _generateCategoricalChart.generateCategoricalChart)({
      chartName: "FunnelChart",
      GraphicalChild: _Funnel.Funnel,
      validateTooltipEventTypes: ["item"],
      defaultTooltipEventType: "item",
      axisComponents: [],
      defaultProps: {
        layout: "centric"
      }
    });
  }
});

// node_modules/recharts/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/recharts/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "Area", {
      enumerable: true,
      get: function get() {
        return _Area.Area;
      }
    });
    Object.defineProperty(exports, "AreaChart", {
      enumerable: true,
      get: function get() {
        return _AreaChart.AreaChart;
      }
    });
    Object.defineProperty(exports, "Bar", {
      enumerable: true,
      get: function get() {
        return _Bar.Bar;
      }
    });
    Object.defineProperty(exports, "BarChart", {
      enumerable: true,
      get: function get() {
        return _BarChart.BarChart;
      }
    });
    Object.defineProperty(exports, "Brush", {
      enumerable: true,
      get: function get() {
        return _Brush.Brush;
      }
    });
    Object.defineProperty(exports, "CartesianAxis", {
      enumerable: true,
      get: function get() {
        return _CartesianAxis.CartesianAxis;
      }
    });
    Object.defineProperty(exports, "CartesianGrid", {
      enumerable: true,
      get: function get() {
        return _CartesianGrid.CartesianGrid;
      }
    });
    Object.defineProperty(exports, "Cell", {
      enumerable: true,
      get: function get() {
        return _Cell.Cell;
      }
    });
    Object.defineProperty(exports, "ComposedChart", {
      enumerable: true,
      get: function get() {
        return _ComposedChart.ComposedChart;
      }
    });
    Object.defineProperty(exports, "Cross", {
      enumerable: true,
      get: function get() {
        return _Cross.Cross;
      }
    });
    Object.defineProperty(exports, "Curve", {
      enumerable: true,
      get: function get() {
        return _Curve.Curve;
      }
    });
    Object.defineProperty(exports, "Customized", {
      enumerable: true,
      get: function get() {
        return _Customized.Customized;
      }
    });
    Object.defineProperty(exports, "DefaultLegendContent", {
      enumerable: true,
      get: function get() {
        return _DefaultLegendContent.DefaultLegendContent;
      }
    });
    Object.defineProperty(exports, "DefaultTooltipContent", {
      enumerable: true,
      get: function get() {
        return _DefaultTooltipContent.DefaultTooltipContent;
      }
    });
    Object.defineProperty(exports, "Dot", {
      enumerable: true,
      get: function get() {
        return _Dot.Dot;
      }
    });
    Object.defineProperty(exports, "ErrorBar", {
      enumerable: true,
      get: function get() {
        return _ErrorBar.ErrorBar;
      }
    });
    Object.defineProperty(exports, "Funnel", {
      enumerable: true,
      get: function get() {
        return _Funnel.Funnel;
      }
    });
    Object.defineProperty(exports, "FunnelChart", {
      enumerable: true,
      get: function get() {
        return _FunnelChart.FunnelChart;
      }
    });
    Object.defineProperty(exports, "Global", {
      enumerable: true,
      get: function get() {
        return _Global.Global;
      }
    });
    Object.defineProperty(exports, "Label", {
      enumerable: true,
      get: function get() {
        return _Label.Label;
      }
    });
    Object.defineProperty(exports, "LabelList", {
      enumerable: true,
      get: function get() {
        return _LabelList.LabelList;
      }
    });
    Object.defineProperty(exports, "Layer", {
      enumerable: true,
      get: function get() {
        return _Layer.Layer;
      }
    });
    Object.defineProperty(exports, "Legend", {
      enumerable: true,
      get: function get() {
        return _Legend.Legend;
      }
    });
    Object.defineProperty(exports, "Line", {
      enumerable: true,
      get: function get() {
        return _Line.Line;
      }
    });
    Object.defineProperty(exports, "LineChart", {
      enumerable: true,
      get: function get() {
        return _LineChart.LineChart;
      }
    });
    Object.defineProperty(exports, "Pie", {
      enumerable: true,
      get: function get() {
        return _Pie.Pie;
      }
    });
    Object.defineProperty(exports, "PieChart", {
      enumerable: true,
      get: function get() {
        return _PieChart.PieChart;
      }
    });
    Object.defineProperty(exports, "PolarAngleAxis", {
      enumerable: true,
      get: function get() {
        return _PolarAngleAxis.PolarAngleAxis;
      }
    });
    Object.defineProperty(exports, "PolarGrid", {
      enumerable: true,
      get: function get() {
        return _PolarGrid.PolarGrid;
      }
    });
    Object.defineProperty(exports, "PolarRadiusAxis", {
      enumerable: true,
      get: function get() {
        return _PolarRadiusAxis.PolarRadiusAxis;
      }
    });
    Object.defineProperty(exports, "Polygon", {
      enumerable: true,
      get: function get() {
        return _Polygon.Polygon;
      }
    });
    Object.defineProperty(exports, "Radar", {
      enumerable: true,
      get: function get() {
        return _Radar.Radar;
      }
    });
    Object.defineProperty(exports, "RadarChart", {
      enumerable: true,
      get: function get() {
        return _RadarChart.RadarChart;
      }
    });
    Object.defineProperty(exports, "RadialBar", {
      enumerable: true,
      get: function get() {
        return _RadialBar.RadialBar;
      }
    });
    Object.defineProperty(exports, "RadialBarChart", {
      enumerable: true,
      get: function get() {
        return _RadialBarChart.RadialBarChart;
      }
    });
    Object.defineProperty(exports, "Rectangle", {
      enumerable: true,
      get: function get() {
        return _Rectangle.Rectangle;
      }
    });
    Object.defineProperty(exports, "ReferenceArea", {
      enumerable: true,
      get: function get() {
        return _ReferenceArea.ReferenceArea;
      }
    });
    Object.defineProperty(exports, "ReferenceDot", {
      enumerable: true,
      get: function get() {
        return _ReferenceDot.ReferenceDot;
      }
    });
    Object.defineProperty(exports, "ReferenceLine", {
      enumerable: true,
      get: function get() {
        return _ReferenceLine.ReferenceLine;
      }
    });
    Object.defineProperty(exports, "ResponsiveContainer", {
      enumerable: true,
      get: function get() {
        return _ResponsiveContainer.ResponsiveContainer;
      }
    });
    Object.defineProperty(exports, "Sankey", {
      enumerable: true,
      get: function get() {
        return _Sankey.Sankey;
      }
    });
    Object.defineProperty(exports, "Scatter", {
      enumerable: true,
      get: function get() {
        return _Scatter.Scatter;
      }
    });
    Object.defineProperty(exports, "ScatterChart", {
      enumerable: true,
      get: function get() {
        return _ScatterChart.ScatterChart;
      }
    });
    Object.defineProperty(exports, "Sector", {
      enumerable: true,
      get: function get() {
        return _Sector.Sector;
      }
    });
    Object.defineProperty(exports, "SunburstChart", {
      enumerable: true,
      get: function get() {
        return _SunburstChart.SunburstChart;
      }
    });
    Object.defineProperty(exports, "Surface", {
      enumerable: true,
      get: function get() {
        return _Surface.Surface;
      }
    });
    Object.defineProperty(exports, "Symbols", {
      enumerable: true,
      get: function get() {
        return _Symbols.Symbols;
      }
    });
    Object.defineProperty(exports, "Text", {
      enumerable: true,
      get: function get() {
        return _Text.Text;
      }
    });
    Object.defineProperty(exports, "Tooltip", {
      enumerable: true,
      get: function get() {
        return _Tooltip.Tooltip;
      }
    });
    Object.defineProperty(exports, "Trapezoid", {
      enumerable: true,
      get: function get() {
        return _Trapezoid.Trapezoid;
      }
    });
    Object.defineProperty(exports, "Treemap", {
      enumerable: true,
      get: function get() {
        return _Treemap.Treemap;
      }
    });
    Object.defineProperty(exports, "XAxis", {
      enumerable: true,
      get: function get() {
        return _XAxis.XAxis;
      }
    });
    Object.defineProperty(exports, "YAxis", {
      enumerable: true,
      get: function get() {
        return _YAxis.YAxis;
      }
    });
    Object.defineProperty(exports, "ZAxis", {
      enumerable: true,
      get: function get() {
        return _ZAxis.ZAxis;
      }
    });
    var _Surface = require_Surface();
    var _Layer = require_Layer();
    var _Legend = require_Legend();
    var _DefaultLegendContent = require_DefaultLegendContent();
    var _Tooltip = require_Tooltip();
    var _DefaultTooltipContent = require_DefaultTooltipContent();
    var _ResponsiveContainer = require_ResponsiveContainer();
    var _Cell = require_Cell();
    var _Text = require_Text();
    var _Label = require_Label();
    var _LabelList = require_LabelList();
    var _Customized = require_Customized();
    var _Sector = require_Sector();
    var _Curve = require_Curve();
    var _Rectangle = require_Rectangle();
    var _Polygon = require_Polygon();
    var _Dot = require_Dot();
    var _Cross = require_Cross();
    var _Symbols = require_Symbols();
    var _PolarGrid = require_PolarGrid();
    var _PolarRadiusAxis = require_PolarRadiusAxis();
    var _PolarAngleAxis = require_PolarAngleAxis();
    var _Pie = require_Pie();
    var _Radar = require_Radar();
    var _RadialBar = require_RadialBar();
    var _Brush = require_Brush();
    var _ReferenceLine = require_ReferenceLine();
    var _ReferenceDot = require_ReferenceDot();
    var _ReferenceArea = require_ReferenceArea();
    var _CartesianAxis = require_CartesianAxis();
    var _CartesianGrid = require_CartesianGrid();
    var _Line = require_Line();
    var _Area = require_Area();
    var _Bar = require_Bar();
    var _Scatter = require_Scatter();
    var _XAxis = require_XAxis();
    var _YAxis = require_YAxis();
    var _ZAxis = require_ZAxis();
    var _ErrorBar = require_ErrorBar();
    var _LineChart = require_LineChart();
    var _BarChart = require_BarChart();
    var _PieChart = require_PieChart();
    var _Treemap = require_Treemap();
    var _Sankey = require_Sankey();
    var _RadarChart = require_RadarChart();
    var _ScatterChart = require_ScatterChart();
    var _AreaChart = require_AreaChart();
    var _RadialBarChart = require_RadialBarChart();
    var _ComposedChart = require_ComposedChart();
    var _SunburstChart = require_SunburstChart();
    var _Funnel = require_Funnel();
    var _FunnelChart = require_FunnelChart();
    var _Trapezoid = require_Trapezoid();
    var _Global = require_Global();
  }
});
export default require_lib3();
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=recharts.js.map
